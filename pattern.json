[
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client"
   ],
   "trigger": [
    "rdfvalue"
   ],
   "count": 1416,
   "accuracy": 0.2349427575908412
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  ."
   ],
   "trigger": [
    "rdfvalue",
    "."
   ],
   "count": 1404,
   "accuracy": 0.24387701928087546
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ("
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "("
   ],
   "count": 1086,
   "accuracy": 0.3424787133396405
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  ."
   ],
   "trigger": [
    "=",
    "rdfvalue",
    "."
   ],
   "count": 938,
   "accuracy": 0.29617934954215347
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "RDFProtoStruct"
   ],
   "count": 894,
   "accuracy": 0.8546845124282982
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")"
   ],
   "count": 890,
   "accuracy": 0.8541266794625719
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    ")"
   ],
   "count": 890,
   "accuracy": 0.22908622908622908
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 878,
   "accuracy": 0.8524271844660194
  },
  {
   "code": [
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )"
   ],
   "trigger": [
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")"
   ],
   "count": 878,
   "accuracy": 0.8524271844660194
  },
  {
   "code": [
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 866,
   "accuracy": 0.8506876227897839
  },
  {
   "code": [
    "  class",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 854,
   "accuracy": 0.8489065606361829
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ("
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 806,
   "accuracy": 0.3354140657511444
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "(",
    ")"
   ],
   "count": 764,
   "accuracy": 0.34214061800268697
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  ."
   ],
   "trigger": [
    "=",
    "rdfvalue",
    "."
   ],
   "count": 740,
   "accuracy": 0.23365961477739186
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "(",
    ")"
   ],
   "count": 604,
   "accuracy": 0.33837535014005604
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    ")"
   ],
   "count": 604,
   "accuracy": 0.323167469234885
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  ("
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 550,
   "accuracy": 0.22888056595921766
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    ")"
   ],
   "count": 504,
   "accuracy": 0.2696629213483146
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "(",
    ")"
   ],
   "count": 504,
   "accuracy": 0.22570532915360503
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrMessage"
   ],
   "count": 490,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "(",
    ")"
   ],
   "count": 432,
   "accuracy": 0.24201680672268908
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ClientURN"
   ],
   "count": 372,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ClientURN",
    ")"
   ],
   "count": 348,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "GrrMessage"
   ],
   "count": 346,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrMessage",
    ")"
   ],
   "count": 336,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  ("
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ClientURN",
    "("
   ],
   "count": 336,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    ")"
   ],
   "count": 324,
   "accuracy": 1.0
  },
  {
   "code": [
    "- policy",
    "+ policyparser",
    "  ."
   ],
   "trigger": [
    "policy",
    "."
   ],
   "count": 320,
   "accuracy": 1.0
  },
  {
   "code": [
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  ("
   ],
   "trigger": [
    "policy",
    ".",
    "ParsePolicy",
    "("
   ],
   "count": 310,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  ."
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrMessage",
    "."
   ],
   "count": 264,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec"
   ],
   "count": 262,
   "accuracy": 0.9225352112676056
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  ("
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "("
   ],
   "count": 260,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    ")"
   ],
   "count": 248,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  ("
   ],
   "trigger": [
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "("
   ],
   "count": 240,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- policy",
    "+ policyparser",
    "  ."
   ],
   "trigger": [
    "=",
    "policy",
    "."
   ],
   "count": 240,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  ."
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "."
   ],
   "count": 240,
   "accuracy": 0.9090909090909091
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  ("
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrMessage",
    "("
   ],
   "count": 238,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "  grr",
    "  .",
    "  lib",
    "+ .",
    "  import",
    "- rdfvalue"
   ],
   "trigger": [
    "from",
    "grr",
    ".",
    "lib",
    "import",
    "rdfvalue"
   ],
   "count": 234,
   "accuracy": 0.8666666666666667
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ")"
   ],
   "count": 228,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "  grr",
    "  .",
    "  lib",
    "+ .",
    "+ rdfvalues",
    "  import",
    "- rdfvalue"
   ],
   "trigger": [
    "from",
    "grr",
    ".",
    "lib",
    "import",
    "rdfvalue"
   ],
   "count": 222,
   "accuracy": 0.8222222222222222
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    ")"
   ],
   "count": 204,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  ("
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    "("
   ],
   "count": 190,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  ."
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    "."
   ],
   "count": 168,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "Dict"
   ],
   "count": 166,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "- policy",
    "+ policyparser",
    "  ."
   ],
   "trigger": [
    "(",
    "policy",
    "."
   ],
   "count": 160,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "- rdfvalue",
    "+ rdf_client"
   ],
   "trigger": [
    ".",
    "rdfvalue"
   ],
   "count": 160,
   "accuracy": 0.20151133501259447
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    ")"
   ],
   "count": 156,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  (",
    "- rdfvalue",
    "+ structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 152,
   "accuracy": 1.0
  },
  {
   "code": [
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  +"
   ],
   "trigger": [
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "+"
   ],
   "count": 150,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "  (",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  ("
   ],
   "trigger": [
    ".",
    "(",
    "policy",
    ".",
    "ParsePolicy",
    "("
   ],
   "count": 150,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  .",
    "- click",
    "+ toggle",
    "  (",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    ".",
    "click",
    "(",
    ")"
   ],
   "count": 150,
   "accuracy": 0.6493506493506493
  },
  {
   "code": [
    "  from",
    "  grr",
    "  .",
    "  lib",
    "+ .",
    "+ rdfvalues",
    "  import",
    "- rdfvalue",
    "+ as"
   ],
   "trigger": [
    "from",
    "grr",
    ".",
    "lib",
    "import",
    "rdfvalue"
   ],
   "count": 150,
   "accuracy": 0.5555555555555556
  },
  {
   "code": [
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  ."
   ],
   "trigger": [
    ",",
    "rdfvalue",
    "."
   ],
   "count": 150,
   "accuracy": 0.38461538461538464
  },
  {
   "code": [
    "  .",
    "- rdfvalue",
    "+ rdf_client",
    "  ."
   ],
   "trigger": [
    ".",
    "rdfvalue",
    "."
   ],
   "count": 148,
   "accuracy": 0.2824427480916031
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "StatEntry"
   ],
   "count": 144,
   "accuracy": 0.9230769230769231
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  ."
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    "."
   ],
   "count": 144,
   "accuracy": 0.8674698795180723
  },
  {
   "code": [
    "- artifact_lib",
    "+ artifact_registry"
   ],
   "trigger": [
    "artifact_lib"
   ],
   "count": 144,
   "accuracy": 0.8674698795180723
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  ."
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "."
   ],
   "count": 144,
   "accuracy": 0.8571428571428571
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  =",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "(",
    "=",
    ")"
   ],
   "count": 144,
   "accuracy": 0.3582089552238806
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "PathSpec"
   ],
   "count": 142,
   "accuracy": 0.8658536585365854
  },
  {
   "code": [
    "  (",
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  ."
   ],
   "trigger": [
    "(",
    ",",
    "rdfvalue",
    "."
   ],
   "count": 140,
   "accuracy": 0.43209876543209874
  },
  {
   "code": [
    "  .",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ("
   ],
   "trigger": [
    ".",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 136,
   "accuracy": 0.33663366336633666
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  .",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    ".",
    ")"
   ],
   "count": 132,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client_id",
    "- rdfvalue",
    "+ rdf_client",
    "  ."
   ],
   "trigger": [
    "client_id",
    "rdfvalue",
    "."
   ],
   "count": 132,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client_id",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN"
   ],
   "trigger": [
    "client_id",
    "rdfvalue",
    ".",
    "ClientURN"
   ],
   "count": 132,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "- rdfvalue",
    "+ rdf_flows",
    "  ."
   ],
   "trigger": [
    ".",
    "rdfvalue",
    "."
   ],
   "count": 132,
   "accuracy": 0.25190839694656486
  },
  {
   "code": [
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  +"
   ],
   "trigger": [
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "+"
   ],
   "count": 130,
   "accuracy": 1.0
  },
  {
   "code": [
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  )"
   ],
   "trigger": [
    ",",
    "rdfvalue",
    ".",
    ")"
   ],
   "count": 126,
   "accuracy": 0.45985401459854014
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ,"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    ","
   ],
   "count": 124,
   "accuracy": 0.28837209302325584
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict",
    "  ("
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "Dict",
    "("
   ],
   "count": 120,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  AuthorizationState",
    "  ."
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "AuthorizationState",
    "."
   ],
   "count": 120,
   "accuracy": 1.0
  },
  {
   "code": [
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  ,"
   ],
   "trigger": [
    "policy",
    ".",
    "ParsePolicy",
    "(",
    ","
   ],
   "count": 120,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client_id",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  )"
   ],
   "trigger": [
    "client_id",
    "rdfvalue",
    ".",
    "ClientURN",
    ")"
   ],
   "count": 120,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client_id",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  )"
   ],
   "trigger": [
    "client_id",
    "rdfvalue",
    ".",
    ")"
   ],
   "count": 120,
   "accuracy": 1.0
  },
  {
   "code": [
    "- artifact_lib",
    "+ artifact_registry",
    "  ."
   ],
   "trigger": [
    "artifact_lib",
    "."
   ],
   "count": 120,
   "accuracy": 0.851063829787234
  },
  {
   "code": [
    "  .",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  ."
   ],
   "trigger": [
    ".",
    "=",
    "rdfvalue",
    "."
   ],
   "count": 120,
   "accuracy": 0.37037037037037035
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec",
    ")"
   ],
   "count": 118,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  User"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "User"
   ],
   "count": 118,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  client_id",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "client_id",
    ")"
   ],
   "count": 116,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  client_id",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "client_id",
    ")"
   ],
   "count": 116,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  )"
   ],
   "trigger": [
    "(",
    ",",
    "rdfvalue",
    ".",
    ")"
   ],
   "count": 116,
   "accuracy": 0.4393939393939394
  },
  {
   "code": [
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  )",
    "  :"
   ],
   "trigger": [
    ",",
    "rdfvalue",
    ".",
    ")",
    ":"
   ],
   "count": 114,
   "accuracy": 0.5643564356435643
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  )",
    "  ,"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    ")",
    ","
   ],
   "count": 112,
   "accuracy": 0.45528455284552843
  },
  {
   "code": [
    "  pol",
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  +"
   ],
   "trigger": [
    "pol",
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "+"
   ],
   "count": 110,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  ,"
   ],
   "trigger": [
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    ","
   ],
   "count": 110,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "Dict",
    ")"
   ],
   "count": 108,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client_id",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  )"
   ],
   "trigger": [
    "client_id",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    ")"
   ],
   "count": 108,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client_id",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  )"
   ],
   "trigger": [
    "client_id",
    "=",
    "rdfvalue",
    ".",
    ")"
   ],
   "count": 108,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ("
   ],
   "trigger": [
    "(",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 108,
   "accuracy": 0.6
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  (",
    "  .",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "(",
    ".",
    ")"
   ],
   "count": 108,
   "accuracy": 0.35526315789473684
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  ("
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec",
    "("
   ],
   "count": 106,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "Dict"
   ],
   "count": 106,
   "accuracy": 1.0
  },
  {
   "code": [
    "  isinstance",
    "  (",
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  )",
    "  :"
   ],
   "trigger": [
    "isinstance",
    "(",
    ",",
    "rdfvalue",
    ".",
    ")",
    ":"
   ],
   "count": 104,
   "accuracy": 0.5777777777777777
  },
  {
   "code": [
    "  =",
    "  .",
    "  (",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  ("
   ],
   "trigger": [
    "=",
    ".",
    "(",
    "policy",
    ".",
    "ParsePolicy",
    "("
   ],
   "count": 100,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  )",
    "  ,"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "(",
    ")",
    ","
   ],
   "count": 100,
   "accuracy": 0.45045045045045046
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  ."
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ClientURN",
    "."
   ],
   "count": 96,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  User"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "User"
   ],
   "count": 96,
   "accuracy": 1.0
  },
  {
   "code": [
    "  out_rdfvalue",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  ."
   ],
   "trigger": [
    "out_rdfvalue",
    "=",
    "rdfvalue",
    "."
   ],
   "count": 96,
   "accuracy": 0.8
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  (",
    "  .",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "(",
    ".",
    ")"
   ],
   "count": 96,
   "accuracy": 0.45714285714285713
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  .",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "(",
    ".",
    ")"
   ],
   "count": 96,
   "accuracy": 0.3157894736842105
  },
  {
   "code": [
    "  .",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  ("
   ],
   "trigger": [
    ".",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 96,
   "accuracy": 0.2376237623762376
  },
  {
   "code": [
    "- unicode",
    "+ str"
   ],
   "trigger": [
    "unicode"
   ],
   "count": 93,
   "accuracy": 0.8303571428571429
  },
  {
   "code": [
    "  if",
    "  isinstance",
    "  (",
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  )",
    "  :"
   ],
   "trigger": [
    "if",
    "isinstance",
    "(",
    ",",
    "rdfvalue",
    ".",
    ")",
    ":"
   ],
   "count": 92,
   "accuracy": 0.5476190476190477
  },
  {
   "code": [
    "  result",
    "- rdfvalue",
    "+ rdf_client",
    "  ."
   ],
   "trigger": [
    "result",
    "rdfvalue",
    "."
   ],
   "count": 92,
   "accuracy": 0.39316239316239315
  },
  {
   "code": [
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  +",
    "  ,",
    "  <missing ')'>"
   ],
   "trigger": [
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "+",
    ",",
    "<missing",
    "')'>"
   ],
   "count": 90,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  client_id",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "client_id",
    ")"
   ],
   "count": 88,
   "accuracy": 1.0
  },
  {
   "code": [
    "- unicode",
    "+ str",
    "  )"
   ],
   "trigger": [
    "unicode",
    ")"
   ],
   "count": 85,
   "accuracy": 0.8333333333333334
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict",
    "  (",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "Dict",
    "(",
    ")"
   ],
   "count": 84,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  User",
    "  ("
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "User",
    "("
   ],
   "count": 84,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  .",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ClientURN",
    ".",
    ")"
   ],
   "count": 84,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ output_plugin",
    "  .",
    "  OutputPluginDescriptor"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "OutputPluginDescriptor"
   ],
   "count": 84,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict",
    "  ("
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "Dict",
    "("
   ],
   "count": 84,
   "accuracy": 1.0
  },
  {
   "code": [
    "- artifact_lib",
    "+ artifact_registry",
    "  .",
    "  ArtifactRegistry",
    "  ."
   ],
   "trigger": [
    "artifact_lib",
    ".",
    "ArtifactRegistry",
    "."
   ],
   "count": 84,
   "accuracy": 0.9545454545454546
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "StatEntry",
    ")"
   ],
   "count": 84,
   "accuracy": 0.875
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry",
    "  ("
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "StatEntry",
    "("
   ],
   "count": 84,
   "accuracy": 0.875
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "StatEntry"
   ],
   "count": 84,
   "accuracy": 0.875
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  %"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "(",
    "%"
   ],
   "count": 84,
   "accuracy": 0.875
  },
  {
   "code": [
    "  .",
    "  (",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ("
   ],
   "trigger": [
    ".",
    "(",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 84,
   "accuracy": 0.5384615384615384
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  =",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "(",
    "=",
    ")"
   ],
   "count": 84,
   "accuracy": 0.3333333333333333
  },
  {
   "code": [
    "  .",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  ("
   ],
   "trigger": [
    ".",
    "=",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 84,
   "accuracy": 0.3333333333333333
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  )",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    ")",
    ")"
   ],
   "count": 84,
   "accuracy": 0.25925925925925924
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  (",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec",
    "(",
    ")"
   ],
   "count": 82,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  User",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "User",
    ")"
   ],
   "count": 82,
   "accuracy": 1.0
  },
  {
   "code": [
    "- unicode",
    "+ str",
    "  ("
   ],
   "trigger": [
    "unicode",
    "("
   ],
   "count": 82,
   "accuracy": 0.9318181818181818
  },
  {
   "code": [
    "  pol",
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  +",
    "  ,",
    "  <missing ')'>"
   ],
   "trigger": [
    "pol",
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "+",
    ",",
    "<missing",
    "')'>"
   ],
   "count": 80,
   "accuracy": 1.0
  },
  {
   "code": [
    "  acl",
    "  =",
    "  .",
    "  (",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  ("
   ],
   "trigger": [
    "acl",
    "=",
    ".",
    "(",
    "policy",
    ".",
    "ParsePolicy",
    "("
   ],
   "count": 80,
   "accuracy": 1.0
  },
  {
   "code": [
    "- unicode",
    "+ str",
    "  (",
    "  )"
   ],
   "trigger": [
    "unicode",
    "(",
    ")"
   ],
   "count": 76,
   "accuracy": 0.926829268292683
  },
  {
   "code": [
    "  self",
    "  .",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ("
   ],
   "trigger": [
    "self",
    ".",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 76,
   "accuracy": 0.27941176470588236
  },
  {
   "code": [
    "  self",
    "  .",
    "- rdfvalue",
    "+ rdf_client",
    "  ."
   ],
   "trigger": [
    "self",
    ".",
    "rdfvalue",
    "."
   ],
   "count": 76,
   "accuracy": 0.2375
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  ]"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec",
    "]"
   ],
   "count": 72,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  AuthorizationState",
    "  .",
    "  AUTHENTICATED"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "AuthorizationState",
    ".",
    "AUTHENTICATED"
   ],
   "count": 72,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  .",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    ".",
    ")"
   ],
   "count": 72,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ output_plugin",
    "  .",
    "  OutputPluginDescriptor",
    "  ("
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "OutputPluginDescriptor",
    "("
   ],
   "count": 72,
   "accuracy": 1.0
  },
  {
   "code": [
    "  priority",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  Priority",
    "  ."
   ],
   "trigger": [
    "priority",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "Priority",
    "."
   ],
   "count": 72,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  .",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    ".",
    ")"
   ],
   "count": 72,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  ClientCommunication",
    "  ("
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "ClientCommunication",
    "("
   ],
   "count": 72,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  User",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "User",
    "(",
    ")"
   ],
   "count": 72,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  %",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "(",
    "%",
    ")"
   ],
   "count": 72,
   "accuracy": 0.8571428571428571
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  ."
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    "."
   ],
   "count": 72,
   "accuracy": 0.7659574468085106
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  ]"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "]"
   ],
   "count": 72,
   "accuracy": 0.4186046511627907
  },
  {
   "code": [
    "  self",
    "  .",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  ."
   ],
   "trigger": [
    "self",
    ".",
    "=",
    "rdfvalue",
    "."
   ],
   "count": 72,
   "accuracy": 0.3157894736842105
  },
  {
   "code": [
    "  self",
    "  .",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  ("
   ],
   "trigger": [
    "self",
    ".",
    "=",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 72,
   "accuracy": 0.3157894736842105
  },
  {
   "code": [
    "  .",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  ."
   ],
   "trigger": [
    ".",
    "=",
    "rdfvalue",
    ".",
    "."
   ],
   "count": 72,
   "accuracy": 0.2222222222222222
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "PathSpec",
    ")"
   ],
   "count": 70,
   "accuracy": 1.0
  },
  {
   "code": [
    "  result",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ("
   ],
   "trigger": [
    "result",
    "=",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 68,
   "accuracy": 0.5396825396825397
  },
  {
   "code": [
    "  .",
    "- iteritems",
    "+ items",
    "  (",
    "  )"
   ],
   "trigger": [
    ".",
    "iteritems",
    "(",
    ")"
   ],
   "count": 65,
   "accuracy": 1.0
  },
  {
   "code": [
    "+ app",
    "- self",
    "- .",
    "- prg",
    "  .",
    "  log",
    "+ .",
    "+ info",
    "  (",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "prg",
    ".",
    "log",
    "(",
    ")"
   ],
   "count": 64,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- assertEquals",
    "+ assertEqual",
    "  ("
   ],
   "trigger": [
    "self",
    ".",
    "assertEquals",
    "("
   ],
   "count": 63,
   "accuracy": 0.9402985074626866
  },
  {
   "code": [
    "  self",
    "  .",
    "- assertEquals",
    "+ assertEqual",
    "  (",
    "  ,",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "assertEquals",
    "(",
    ",",
    ")"
   ],
   "count": 62,
   "accuracy": 0.9393939393939394
  },
  {
   "code": [
    "- abstract",
    "+ abstract_utils"
   ],
   "trigger": [
    "abstract"
   ],
   "count": 62,
   "accuracy": 0.5079365079365079
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrNotification"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrNotification"
   ],
   "count": 60,
   "accuracy": 1.0
  },
  {
   "code": [
    "  priority",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  Priority",
    "  ."
   ],
   "trigger": [
    "priority",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "Priority",
    "."
   ],
   "count": 60,
   "accuracy": 1.0
  },
  {
   "code": [
    "  mapping",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataServerMapping",
    "  (",
    "  )"
   ],
   "trigger": [
    "mapping",
    "=",
    "rdfvalue",
    ".",
    "DataServerMapping",
    "(",
    ")"
   ],
   "count": 60,
   "accuracy": 1.0
  },
  {
   "code": [
    "  mapping",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  )"
   ],
   "trigger": [
    "mapping",
    "=",
    "rdfvalue",
    ".",
    ")"
   ],
   "count": 60,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "Dict",
    "(",
    ")"
   ],
   "count": 60,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  ClientCommunication",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "ClientCommunication",
    "(",
    ")"
   ],
   "count": 60,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataStoreCommand"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "DataStoreCommand"
   ],
   "count": 60,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  (",
    "  self",
    "  .",
    "  post_data",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "(",
    "self",
    ".",
    "post_data",
    ")"
   ],
   "count": 60,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  Process"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "Process"
   ],
   "count": 60,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage"
   ],
   "trigger": [
    ".",
    "rdfvalue",
    ".",
    "GrrMessage"
   ],
   "count": 60,
   "accuracy": 1.0
  },
  {
   "code": [
    "- artifact_lib",
    "+ artifact_registry",
    "  :"
   ],
   "trigger": [
    "artifact_lib",
    ":"
   ],
   "count": 60,
   "accuracy": 0.9836065573770492
  },
  {
   "code": [
    "- artifact_lib",
    "+ artifact_registry",
    "  .",
    "  ArtifactRegistry",
    "  .",
    "  artifacts"
   ],
   "trigger": [
    "artifact_lib",
    ".",
    "ArtifactRegistry",
    ".",
    "artifacts"
   ],
   "count": 60,
   "accuracy": 0.9375
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  RDFValueArray",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "RDFValueArray",
    ")"
   ],
   "count": 60,
   "accuracy": 0.8333333333333334
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry",
    "  (",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "StatEntry",
    "(",
    ")"
   ],
   "count": 60,
   "accuracy": 0.8333333333333334
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry",
    "  ("
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "StatEntry",
    "("
   ],
   "count": 60,
   "accuracy": 0.8333333333333334
  },
  {
   "code": [
    "  sample",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  ."
   ],
   "trigger": [
    "sample",
    "=",
    "rdfvalue",
    "."
   ],
   "count": 60,
   "accuracy": 0.5660377358490566
  },
  {
   "code": [
    "- abstract",
    "+ abstract_utils",
    "  ."
   ],
   "trigger": [
    "abstract",
    "."
   ],
   "count": 60,
   "accuracy": 0.4918032786885246
  },
  {
   "code": [
    "  response",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ("
   ],
   "trigger": [
    "response",
    "=",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 60,
   "accuracy": 0.46153846153846156
  },
  {
   "code": [
    "  .",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    ".",
    "rdfvalue",
    ".",
    "(",
    ")"
   ],
   "count": 60,
   "accuracy": 0.33707865168539325
  },
  {
   "code": [
    "  .",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  )"
   ],
   "trigger": [
    ".",
    "rdfvalue",
    ".",
    ")"
   ],
   "count": 60,
   "accuracy": 0.2803738317757009
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  (",
    "  ."
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "(",
    "."
   ],
   "count": 60,
   "accuracy": 0.24390243902439024
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "PathSpec",
    "(",
    ")"
   ],
   "count": 58,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "- iteritems",
    "+ items",
    "  (",
    "  )",
    "  :"
   ],
   "trigger": [
    ".",
    "iteritems",
    "(",
    ")",
    ":"
   ],
   "count": 58,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ client"
   ],
   "trigger": [
    "rdfvalue"
   ],
   "count": 58,
   "accuracy": 0.24257507881201262
  },
  {
   "code": [
    "  for",
    "  in",
    "  .",
    "- iteritems",
    "+ items",
    "  (",
    "  )"
   ],
   "trigger": [
    "for",
    "in",
    ".",
    "iteritems",
    "(",
    ")"
   ],
   "count": 57,
   "accuracy": 1.0
  },
  {
   "code": [
    "  for",
    "  ,",
    "  in",
    "  .",
    "- iteritems",
    "+ items",
    "  (",
    "  )"
   ],
   "trigger": [
    "for",
    ",",
    "in",
    ".",
    "iteritems",
    "(",
    ")"
   ],
   "count": 55,
   "accuracy": 1.0
  },
  {
   "code": [
    "- typing",
    "+ typing_overlay"
   ],
   "trigger": [
    "typing"
   ],
   "count": 54,
   "accuracy": 0.9642857142857143
  },
  {
   "code": [
    "- _locator_accordeon_members",
    "+ _locator_accordion_members"
   ],
   "trigger": [
    "_locator_accordeon_members"
   ],
   "count": 52,
   "accuracy": 1.0
  },
  {
   "code": [
    "  for",
    "  ,",
    "  in",
    "  .",
    "- iteritems",
    "+ items",
    "  (",
    "  )",
    "  :"
   ],
   "trigger": [
    "for",
    ",",
    "in",
    ".",
    "iteritems",
    "(",
    ")",
    ":"
   ],
   "count": 52,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  )",
    "  ,"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    ")",
    ","
   ],
   "count": 52,
   "accuracy": 0.5
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  )",
    "  ,"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "(",
    ")",
    ","
   ],
   "count": 52,
   "accuracy": 0.5
  },
  {
   "code": [
    "  return",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ("
   ],
   "trigger": [
    "return",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 52,
   "accuracy": 0.3561643835616438
  },
  {
   "code": [
    "  .",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    ".",
    "rdfvalue",
    ".",
    "(",
    ")"
   ],
   "count": 52,
   "accuracy": 0.29213483146067415
  },
  {
   "code": [
    "  .",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  )"
   ],
   "trigger": [
    ".",
    "rdfvalue",
    ".",
    ")"
   ],
   "count": 52,
   "accuracy": 0.24299065420560748
  },
  {
   "code": [
    "  self",
    "  .",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  ."
   ],
   "trigger": [
    "self",
    ".",
    "=",
    "rdfvalue",
    "."
   ],
   "count": 52,
   "accuracy": 0.22807017543859648
  },
  {
   "code": [
    "  self",
    "  .",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ("
   ],
   "trigger": [
    "self",
    ".",
    "=",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 52,
   "accuracy": 0.22807017543859648
  },
  {
   "code": [
    "- xrange",
    "+ range",
    "  (",
    "  )"
   ],
   "trigger": [
    "xrange",
    "(",
    ")"
   ],
   "count": 51,
   "accuracy": 1.0
  },
  {
   "code": [
    "- typing",
    "+ typing_overlay",
    "  .",
    "  )"
   ],
   "trigger": [
    "typing",
    ".",
    ")"
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_standard",
    "  .",
    "  DomainEmailAddress"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "DomainEmailAddress"
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  ]",
    "  =",
    "  test_lib",
    "  ."
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    "]",
    "=",
    "test_lib",
    "."
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  SignedMessageList",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "SignedMessageList",
    ")"
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrStatus"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrStatus"
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrNotification",
    "  (",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrNotification",
    "(",
    ")"
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  Type",
    "  .",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "Type",
    ".",
    ")"
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  AuthorizationState",
    "  .",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "AuthorizationState",
    ".",
    ")"
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  .",
    "  :"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    ".",
    ":"
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  Flow",
    "  .",
    "  State",
    "  ."
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "Flow",
    ".",
    "State",
    "."
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  (",
    "  session_id",
    "  =",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "(",
    "session_id",
    "=",
    ")"
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  (",
    "  session_id",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "(",
    "session_id",
    ")"
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataServerRebalance",
    "  (",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "DataServerRebalance",
    "(",
    ")"
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry",
    "  ."
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "StatEntry",
    "."
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  GetClientStatsRequest",
    "  ("
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GetClientStatsRequest",
    "("
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ClientURN",
    ".",
    "(",
    ")"
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "- _locator_accordeon_members",
    "+ _locator_accordion_members",
    "  ="
   ],
   "trigger": [
    "_locator_accordeon_members",
    "="
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "  notification",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  ("
   ],
   "trigger": [
    "notification",
    "=",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "  message",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage"
   ],
   "trigger": [
    "message",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage"
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "  auth_state",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  AuthorizationState",
    "  ."
   ],
   "trigger": [
    "auth_state",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "AuthorizationState",
    "."
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "  attribute",
    "  =",
    "- aff4",
    "+ aff4_stats",
    "  .",
    "  ClientFleetStats",
    "  .",
    "  SchemaCls",
    "  ."
   ],
   "trigger": [
    "attribute",
    "=",
    "aff4",
    ".",
    "ClientFleetStats",
    ".",
    "SchemaCls",
    "."
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  RequestState",
    "  ("
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "RequestState",
    "("
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  MessageList",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "MessageList",
    "(",
    ")"
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataStoreCommand",
    "  ."
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "DataStoreCommand",
    "."
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataStoreCommand",
    "  .",
    "  Command"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "DataStoreCommand",
    ".",
    "Command"
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  Process",
    "  ("
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "Process",
    "("
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  %"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "%"
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  ("
   ],
   "trigger": [
    ".",
    "rdfvalue",
    ".",
    "ClientURN",
    "("
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage"
   ],
   "trigger": [
    ".",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage"
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  )"
   ],
   "trigger": [
    "(",
    "rdfvalue",
    ".",
    "ClientURN",
    ")"
   ],
   "count": 48,
   "accuracy": 1.0
  },
  {
   "code": [
    "- artifact_lib",
    "+ artifact_registry",
    "  .",
    "  :"
   ],
   "trigger": [
    "artifact_lib",
    ".",
    ":"
   ],
   "count": 48,
   "accuracy": 0.9795918367346939
  },
  {
   "code": [
    "- artifact_lib",
    "+ artifact_registry",
    "  )"
   ],
   "trigger": [
    "artifact_lib",
    ")"
   ],
   "count": 48,
   "accuracy": 0.9411764705882353
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  OS"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    "OS"
   ],
   "count": 48,
   "accuracy": 0.8275862068965517
  },
  {
   "code": [
    "  message",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  ."
   ],
   "trigger": [
    "message",
    "=",
    "rdfvalue",
    "."
   ],
   "count": 48,
   "accuracy": 0.8
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "StatEntry",
    "(",
    ")"
   ],
   "count": 48,
   "accuracy": 0.8
  },
  {
   "code": [
    "  state",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  ."
   ],
   "trigger": [
    "state",
    "=",
    "rdfvalue",
    "."
   ],
   "count": 48,
   "accuracy": 0.5714285714285714
  },
  {
   "code": [
    "- abstract",
    "+ abstract_utils",
    "  .",
    "  )"
   ],
   "trigger": [
    "abstract",
    ".",
    ")"
   ],
   "count": 48,
   "accuracy": 0.5333333333333333
  },
  {
   "code": [
    "  sample",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ("
   ],
   "trigger": [
    "sample",
    "=",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 48,
   "accuracy": 0.5106382978723404
  },
  {
   "code": [
    "  state",
    "- rdfvalue",
    "+ rdf_flows",
    "  ."
   ],
   "trigger": [
    "state",
    "rdfvalue",
    "."
   ],
   "count": 48,
   "accuracy": 0.5
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  data",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "data",
    ")"
   ],
   "count": 48,
   "accuracy": 0.5
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  (",
    "  data",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "(",
    "data",
    ")"
   ],
   "count": 48,
   "accuracy": 0.5
  },
  {
   "code": [
    "  self",
    "  .",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "=",
    "rdfvalue",
    ".",
    ")"
   ],
   "count": 48,
   "accuracy": 0.3116883116883117
  },
  {
   "code": [
    "  self",
    "  .",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "=",
    "rdfvalue",
    ".",
    "(",
    ")"
   ],
   "count": 48,
   "accuracy": 0.3116883116883117
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  .",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "(",
    ".",
    ")"
   ],
   "count": 48,
   "accuracy": 0.22857142857142856
  },
  {
   "code": [
    "  in",
    "- xrange",
    "+ range",
    "  (",
    "  )"
   ],
   "trigger": [
    "in",
    "xrange",
    "(",
    ")"
   ],
   "count": 47,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  AttributedDict",
    "  (",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "AttributedDict",
    "(",
    ")"
   ],
   "count": 46,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pathspec",
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  (",
    "  )"
   ],
   "trigger": [
    "pathspec",
    "=",
    "rdfvalue",
    ".",
    "PathSpec",
    "(",
    ")"
   ],
   "count": 46,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  FlowState"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "FlowState"
   ],
   "count": 46,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  DataBlob"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "DataBlob"
   ],
   "count": 46,
   "accuracy": 0.7931034482758621
  },
  {
   "code": [
    "  for",
    "  in",
    "- xrange",
    "+ range",
    "  (",
    "  )"
   ],
   "trigger": [
    "for",
    "in",
    "xrange",
    "(",
    ")"
   ],
   "count": 45,
   "accuracy": 1.0
  },
  {
   "code": [
    "- tests",
    "+ integration",
    "  import"
   ],
   "trigger": [
    "tests",
    "import"
   ],
   "count": 45,
   "accuracy": 0.8181818181818182
  },
  {
   "code": [
    "- tests",
    "+ integration"
   ],
   "trigger": [
    "tests"
   ],
   "count": 45,
   "accuracy": 0.6428571428571429
  },
  {
   "code": [
    "- _locator_accordeon_members",
    "+ _locator_accordion_members",
    "  =",
    "  locator",
    "  .",
    "  LhnMenu",
    "  ."
   ],
   "trigger": [
    "_locator_accordeon_members",
    "=",
    "locator",
    ".",
    "LhnMenu",
    "."
   ],
   "count": 44,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- _ExecuteQuery",
    "+ ExecuteQuery",
    "  ("
   ],
   "trigger": [
    "self",
    ".",
    "_ExecuteQuery",
    "("
   ],
   "count": 44,
   "accuracy": 1.0
  },
  {
   "code": [
    "  result",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  )"
   ],
   "trigger": [
    "result",
    "rdfvalue",
    ".",
    ")"
   ],
   "count": 44,
   "accuracy": 0.2682926829268293
  },
  {
   "code": [
    "  =",
    "- unicode",
    "+ str",
    "  ("
   ],
   "trigger": [
    "=",
    "unicode",
    "("
   ],
   "count": 42,
   "accuracy": 0.9130434782608695
  },
  {
   "code": [
    "  from",
    "- tests",
    "+ integration",
    "  import"
   ],
   "trigger": [
    "from",
    "tests",
    "import"
   ],
   "count": 42,
   "accuracy": 0.875
  },
  {
   "code": [
    "  class",
    "  (",
    "  test_lib",
    "  .",
    "- GRRBaseTest",
    "+ AFF4ObjectTest",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "(",
    "test_lib",
    ".",
    "GRRBaseTest",
    ")",
    ":"
   ],
   "count": 42,
   "accuracy": 0.8076923076923077
  },
  {
   "code": [
    "+ old_div",
    "+ (",
    "- /",
    "+ ,",
    "+ )"
   ],
   "trigger": [
    "/"
   ],
   "count": 42,
   "accuracy": 0.56
  },
  {
   "code": [
    "  for",
    "  in",
    "- xrange",
    "+ range",
    "  (",
    "  )",
    "  :"
   ],
   "trigger": [
    "for",
    "in",
    "xrange",
    "(",
    ")",
    ":"
   ],
   "count": 41,
   "accuracy": 1.0
  },
  {
   "code": [
    "- restful",
    "+ flask_restful",
    "  .",
    "  )"
   ],
   "trigger": [
    "restful",
    ".",
    ")"
   ],
   "count": 40,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  KnowledgeBase",
    "  (",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "KnowledgeBase",
    "(",
    ")"
   ],
   "count": 40,
   "accuracy": 1.0
  },
  {
   "code": [
    "- policy",
    "+ policyparser",
    "  .",
    "  )"
   ],
   "trigger": [
    "policy",
    ".",
    ")"
   ],
   "count": 40,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- assertProtoEqual",
    "+ assertRDFValueEqual",
    "  (",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "assertProtoEqual",
    "(",
    ")"
   ],
   "count": 40,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pol",
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  +",
    "  GOOD_STANDARD_TERM_2",
    "  ,",
    "  <missing ')'>"
   ],
   "trigger": [
    "pol",
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "+",
    "GOOD_STANDARD_TERM_2",
    ",",
    "<missing",
    "')'>"
   ],
   "count": 40,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  )",
    "  ,"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    ")",
    ","
   ],
   "count": 40,
   "accuracy": 1.0
  },
  {
   "code": [
    "- unicode",
    "+ str",
    "  (",
    "  ."
   ],
   "trigger": [
    "unicode",
    "(",
    "."
   ],
   "count": 40,
   "accuracy": 0.9090909090909091
  },
  {
   "code": [
    "  self",
    "  .",
    "- assertProtoEqual",
    "+ assertRDFValueEqual",
    "  (",
    "  ,",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "assertProtoEqual",
    "(",
    ",",
    ")"
   ],
   "count": 40,
   "accuracy": 0.8333333333333334
  },
  {
   "code": [
    "  =",
    "- abstract",
    "+ abstract_utils",
    "  ."
   ],
   "trigger": [
    "=",
    "abstract",
    "."
   ],
   "count": 40,
   "accuracy": 0.7142857142857143
  },
  {
   "code": [
    "  =",
    "+ old_div",
    "+ (",
    "- /",
    "+ ,",
    "+ )"
   ],
   "trigger": [
    "=",
    "/"
   ],
   "count": 40,
   "accuracy": 0.7017543859649122
  },
  {
   "code": [
    "  self",
    "  .",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "=",
    "rdfvalue",
    ".",
    ")"
   ],
   "count": 40,
   "accuracy": 0.2597402597402597
  },
  {
   "code": [
    "  self",
    "  .",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "=",
    "rdfvalue",
    ".",
    "(",
    ")"
   ],
   "count": 40,
   "accuracy": 0.2597402597402597
  },
  {
   "code": [
    "- tests",
    "+ integration",
    "  ggrc"
   ],
   "trigger": [
    "tests",
    "ggrc"
   ],
   "count": 39,
   "accuracy": 0.9512195121951219
  },
  {
   "code": [
    "- tests",
    "+ integration",
    "  .",
    "  import"
   ],
   "trigger": [
    "tests",
    ".",
    "import"
   ],
   "count": 39,
   "accuracy": 0.9069767441860465
  },
  {
   "code": [
    "- tests",
    "+ integration",
    "  ."
   ],
   "trigger": [
    "tests",
    "."
   ],
   "count": 39,
   "accuracy": 0.8478260869565217
  },
  {
   "code": [
    "- structs",
    "+ rdf_structs",
    "  ."
   ],
   "trigger": [
    "structs",
    "."
   ],
   "count": 38,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- unicode",
    "+ str",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "unicode",
    "(",
    ")"
   ],
   "count": 38,
   "accuracy": 0.9047619047619048
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  KnowledgeBaseUser"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "KnowledgeBaseUser"
   ],
   "count": 38,
   "accuracy": 0.7916666666666666
  },
  {
   "code": [
    "  except",
    "- ,",
    "+ as",
    "  :"
   ],
   "trigger": [
    "except",
    ",",
    ":"
   ],
   "count": 38,
   "accuracy": 0.76
  },
  {
   "code": [
    "- rdfvalue",
    "+ stats",
    "  .",
    "  MetricMetadata",
    "  .",
    "  ValueType",
    "  .",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "MetricMetadata",
    ".",
    "ValueType",
    ".",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_standard",
    "  .",
    "  DomainEmailAddress",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "DomainEmailAddress",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  TSK"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    "TSK"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrStatus",
    "  (",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrStatus",
    "(",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  Type",
    "  .",
    "  STATUS",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "Type",
    ".",
    "STATUS",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  Flow",
    "  .",
    "  State",
    "  .",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "Flow",
    ".",
    "State",
    ".",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataServerRebalance",
    "  (",
    "  .",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "DataServerRebalance",
    "(",
    ".",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry",
    "  .",
    "  RegistryType",
    "  ."
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "StatEntry",
    ".",
    "RegistryType",
    "."
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ListDirRequest",
    "  ("
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ListDirRequest",
    "("
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  Interface"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "Interface"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  )",
    "  :"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ClientURN",
    ")",
    ":"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  self",
    "  .",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "self",
    ".",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  BufferReference",
    "  ("
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "BufferReference",
    "("
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ filestore",
    "  .",
    "  FileStoreHash",
    "  ("
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "FileStoreHash",
    "("
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ artifact_lib",
    "  .",
    "  ArtifactCollectorFlowArgs"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ArtifactCollectorFlowArgs"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "- artifact_lib",
    "+ artifact_registry",
    "  .",
    "  ArtifactDefinitionError",
    "  :"
   ],
   "trigger": [
    "artifact_lib",
    ".",
    "ArtifactDefinitionError",
    ":"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  typ",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataStoreCommand",
    "  .",
    "  Command",
    "  ."
   ],
   "trigger": [
    "typ",
    "=",
    "rdfvalue",
    ".",
    "DataStoreCommand",
    ".",
    "Command",
    "."
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  subject_urn",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  )"
   ],
   "trigger": [
    "subject_urn",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  subject_urn",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  )"
   ],
   "trigger": [
    "subject_urn",
    "=",
    "rdfvalue",
    ".",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  ("
   ],
   "trigger": [
    "self",
    ".",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "("
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage"
   ],
   "trigger": [
    "return",
    "rdfvalue",
    ".",
    "GrrMessage"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  response",
    "  =",
    "- rdfvalue",
    "+ rdf_data_store",
    "  .",
    "  DataStoreResponse"
   ],
   "trigger": [
    "response",
    "=",
    "rdfvalue",
    ".",
    "DataStoreResponse"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  priority",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  Priority",
    "  .",
    "  MEDIUM_PRIORITY"
   ],
   "trigger": [
    "priority",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "Priority",
    ".",
    "MEDIUM_PRIORITY"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  priority",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  Priority",
    "  .",
    "  )"
   ],
   "trigger": [
    "priority",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "Priority",
    ".",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  notification",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrNotification",
    "  (",
    "  )"
   ],
   "trigger": [
    "notification",
    "=",
    "rdfvalue",
    ".",
    "GrrNotification",
    "(",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  message_type",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  ."
   ],
   "trigger": [
    "message_type",
    "rdfvalue",
    ".",
    "."
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  message",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  ("
   ],
   "trigger": [
    "message",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    "("
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  mapping",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  data",
    "  )"
   ],
   "trigger": [
    "mapping",
    "=",
    "rdfvalue",
    ".",
    "data",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  mapping",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataServerMapping",
    "  (",
    "  data",
    "  )"
   ],
   "trigger": [
    "mapping",
    "=",
    "rdfvalue",
    ".",
    "DataServerMapping",
    "(",
    "data",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  mapping",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataServerMapping",
    "  (",
    "  .",
    "  )"
   ],
   "trigger": [
    "mapping",
    "=",
    "rdfvalue",
    ".",
    "DataServerMapping",
    "(",
    ".",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  isinstance",
    "  (",
    "  ,",
    "- typing",
    "+ typing_overlay",
    "  .",
    "  )"
   ],
   "trigger": [
    "isinstance",
    "(",
    ",",
    "typing",
    ".",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  fast_proto",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  User",
    "  (",
    "  )"
   ],
   "trigger": [
    "fast_proto",
    "=",
    "rdfvalue",
    ".",
    "User",
    "(",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  cron_args",
    "  =",
    "- rdfvalue",
    "+ cronjobs",
    "  .",
    "  CreateCronJobFlowArgs",
    "  ("
   ],
   "trigger": [
    "cron_args",
    "=",
    "rdfvalue",
    ".",
    "CreateCronJobFlowArgs",
    "("
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client_urn",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  )"
   ],
   "trigger": [
    "client_urn",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  (",
    "- restful",
    "+ flask_restful",
    "  .",
    "  Resource",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "(",
    "restful",
    ".",
    "Resource",
    ")",
    ":"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  auth_state",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  AuthorizationState",
    "  .",
    "  AUTHENTICATED"
   ],
   "trigger": [
    "auth_state",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "AuthorizationState",
    ".",
    "AUTHENTICATED"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  arg",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  GetClientStatsRequest",
    "  (",
    "  )",
    "  )"
   ],
   "trigger": [
    "arg",
    "=",
    "rdfvalue",
    ".",
    "GetClientStatsRequest",
    "(",
    ")",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  AttributedDict",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "AttributedDict",
    "(",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  GlobExpression"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "GlobExpression"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  SignedMessageList",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "SignedMessageList",
    "(",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrStatus"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "GrrStatus"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  Type",
    "  .",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "Type",
    ".",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  FlowState",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "FlowState",
    "(",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  (",
    "  session_id",
    "  =",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "(",
    "session_id",
    "=",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  (",
    "  session_id",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "(",
    "session_id",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataServerState",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "DataServerState",
    "(",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataServerRebalance",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "DataServerRebalance",
    "(",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  (",
    "  res",
    "  .",
    "  data",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "(",
    "res",
    ".",
    "data",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  User",
    "  (",
    "  username",
    "  =",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "User",
    "(",
    "username",
    "=",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StartupInfo",
    "  ("
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "StartupInfo",
    "("
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  .",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    ".",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  %",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "%",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ output_plugin",
    "  .",
    "  OutputPluginDescriptor",
    "  ("
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "OutputPluginDescriptor",
    "("
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  )"
   ],
   "trigger": [
    ".",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "  auth_state",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  AuthorizationState",
    "  ."
   ],
   "trigger": [
    ".",
    "auth_state",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "AuthorizationState",
    "."
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  RDFValueArray",
    "  )",
    "  :"
   ],
   "trigger": [
    "(",
    "rdfvalue",
    ".",
    "RDFValueArray",
    ")",
    ":"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "- artifact_lib",
    "+ artifact_registry",
    "  )",
    "  :"
   ],
   "trigger": [
    "(",
    "artifact_lib",
    ")",
    ":"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  )"
   ],
   "trigger": [
    "(",
    ",",
    "rdfvalue",
    ".",
    "ClientURN",
    ")"
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ("
   ],
   "trigger": [
    "(",
    ",",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 36,
   "accuracy": 1.0
  },
  {
   "code": [
    "+ factories",
    "- self",
    "- .",
    "  .",
    "  random_str",
    "  (",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    ".",
    "random_str",
    "(",
    ")"
   ],
   "count": 36,
   "accuracy": 0.972972972972973
  },
  {
   "code": [
    "  from",
    "- tests",
    "+ integration",
    "  ggrc"
   ],
   "trigger": [
    "from",
    "tests",
    "ggrc"
   ],
   "count": 36,
   "accuracy": 0.9473684210526315
  },
  {
   "code": [
    "- artifact_lib",
    "+ artifact_registry",
    "  .",
    "  )"
   ],
   "trigger": [
    "artifact_lib",
    ".",
    ")"
   ],
   "count": 36,
   "accuracy": 0.9230769230769231
  },
  {
   "code": [
    "- unicode",
    "+ str",
    "  (",
    "  .",
    "  )"
   ],
   "trigger": [
    "unicode",
    "(",
    ".",
    ")"
   ],
   "count": 36,
   "accuracy": 0.9
  },
  {
   "code": [
    "  from",
    "- tests",
    "+ integration",
    "  .",
    "  import"
   ],
   "trigger": [
    "from",
    "tests",
    ".",
    "import"
   ],
   "count": 36,
   "accuracy": 0.9
  },
  {
   "code": [
    "  =",
    "- artifact_lib",
    "+ artifact_registry",
    "  .",
    "  ArtifactRegistry",
    "  .",
    "  artifacts"
   ],
   "trigger": [
    "=",
    "artifact_lib",
    ".",
    "ArtifactRegistry",
    ".",
    "artifacts"
   ],
   "count": 36,
   "accuracy": 0.9
  },
  {
   "code": [
    "  .",
    "- artifact_lib",
    "+ artifact_registry"
   ],
   "trigger": [
    ".",
    "artifact_lib"
   ],
   "count": 36,
   "accuracy": 0.9
  },
  {
   "code": [
    "  =",
    "- abstract",
    "+ abstract_utils",
    "  .",
    "  )"
   ],
   "trigger": [
    "=",
    "abstract",
    ".",
    ")"
   ],
   "count": 36,
   "accuracy": 0.8571428571428571
  },
  {
   "code": [
    "- abstract",
    "+ abstract_utils",
    "  .",
    "  ("
   ],
   "trigger": [
    "abstract",
    ".",
    "("
   ],
   "count": 36,
   "accuracy": 0.8181818181818182
  },
  {
   "code": [
    "  supported_pathtype",
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  ."
   ],
   "trigger": [
    "supported_pathtype",
    "=",
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    "."
   ],
   "count": 36,
   "accuracy": 0.782608695652174
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  REGISTRY"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    "REGISTRY"
   ],
   "count": 36,
   "accuracy": 0.75
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  ,"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec",
    ","
   ],
   "count": 36,
   "accuracy": 0.75
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  (",
    "  serialized",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "(",
    "serialized",
    ")"
   ],
   "count": 36,
   "accuracy": 0.75
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  .",
    "  (",
    "  )",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ClientURN",
    ".",
    "(",
    ")",
    ")"
   ],
   "count": 36,
   "accuracy": 0.75
  },
  {
   "code": [
    "  pathtype",
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  ."
   ],
   "trigger": [
    "pathtype",
    "=",
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    "."
   ],
   "count": 36,
   "accuracy": 0.75
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  =",
    "  %",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "(",
    "=",
    "%",
    ")"
   ],
   "count": 36,
   "accuracy": 0.75
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "  message",
    "  .",
    "+ payload"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    "message",
    "."
   ],
   "count": 36,
   "accuracy": 0.75
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  .",
    "  )",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    ".",
    ")",
    ")"
   ],
   "count": 36,
   "accuracy": 0.5
  },
  {
   "code": [
    "  state",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  ("
   ],
   "trigger": [
    "state",
    "=",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 36,
   "accuracy": 0.5
  },
  {
   "code": [
    "  self",
    "  .",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  (",
    "  ."
   ],
   "trigger": [
    "self",
    ".",
    "=",
    "rdfvalue",
    ".",
    "(",
    "."
   ],
   "count": 36,
   "accuracy": 0.5
  },
  {
   "code": [
    "  :",
    "- rdfvalue",
    "+ rdf_client",
    "  ."
   ],
   "trigger": [
    ":",
    "rdfvalue",
    "."
   ],
   "count": 36,
   "accuracy": 0.47368421052631576
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  =",
    "  )",
    "  ,"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "(",
    "=",
    ")",
    ","
   ],
   "count": 36,
   "accuracy": 0.43902439024390244
  },
  {
   "code": [
    "  state",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  ("
   ],
   "trigger": [
    "state",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 36,
   "accuracy": 0.42857142857142855
  },
  {
   "code": [
    "  response",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "response",
    "=",
    "rdfvalue",
    ".",
    "(",
    ")"
   ],
   "count": 36,
   "accuracy": 0.375
  },
  {
   "code": [
    "  request",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ("
   ],
   "trigger": [
    "request",
    "=",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 36,
   "accuracy": 0.3333333333333333
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  client_id",
    "  )",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "client_id",
    ")",
    ")"
   ],
   "count": 36,
   "accuracy": 0.3103448275862069
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  data",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "data",
    ")"
   ],
   "count": 36,
   "accuracy": 0.3
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  (",
    "  data",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "(",
    "data",
    ")"
   ],
   "count": 36,
   "accuracy": 0.3
  },
  {
   "code": [
    "  [",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ("
   ],
   "trigger": [
    "[",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 36,
   "accuracy": 0.2647058823529412
  },
  {
   "code": [
    "  response",
    "  =",
    "- rdfvalue",
    "+ rdf_data_store",
    "  ."
   ],
   "trigger": [
    "response",
    "=",
    "rdfvalue",
    "."
   ],
   "count": 36,
   "accuracy": 0.23376623376623376
  },
  {
   "code": [
    "  return",
    "- rdfvalue",
    "+ rdf_flows",
    "  ."
   ],
   "trigger": [
    "return",
    "rdfvalue",
    "."
   ],
   "count": 36,
   "accuracy": 0.22784810126582278
  },
  {
   "code": [
    "  result",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  )"
   ],
   "trigger": [
    "result",
    "rdfvalue",
    ".",
    ")"
   ],
   "count": 36,
   "accuracy": 0.21951219512195122
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  EmbeddedRDFValue"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "EmbeddedRDFValue"
   ],
   "count": 34,
   "accuracy": 1.0
  },
  {
   "code": [
    "  user",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  )"
   ],
   "trigger": [
    "user",
    "rdfvalue",
    ".",
    ")"
   ],
   "count": 34,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- abstract",
    "+ abstract_utils",
    "  .",
    "  ("
   ],
   "trigger": [
    "=",
    "abstract",
    ".",
    "("
   ],
   "count": 34,
   "accuracy": 0.8095238095238095
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  DataBlob"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "DataBlob"
   ],
   "count": 34,
   "accuracy": 0.7391304347826086
  },
  {
   "code": [
    "- rdfvalue",
    "+ client",
    "  ."
   ],
   "trigger": [
    "rdfvalue",
    "."
   ],
   "count": 34,
   "accuracy": 0.2497828730241445
  },
  {
   "code": [
    "- tests",
    "+ integration",
    "  .",
    "  ggrc",
    "  import"
   ],
   "trigger": [
    "tests",
    ".",
    "ggrc",
    "import"
   ],
   "count": 33,
   "accuracy": 0.9428571428571428
  },
  {
   "code": [
    "- tests",
    "+ integration",
    "  .",
    "  ggrc"
   ],
   "trigger": [
    "tests",
    ".",
    "ggrc"
   ],
   "count": 33,
   "accuracy": 0.9428571428571428
  },
  {
   "code": [
    "- tests",
    "+ integration",
    "  .",
    "  ."
   ],
   "trigger": [
    "tests",
    ".",
    "."
   ],
   "count": 33,
   "accuracy": 0.717391304347826
  },
  {
   "code": [
    "  self",
    "  .",
    "- _ExecuteQuery",
    "+ ExecuteQuery",
    "  (",
    "  query",
    "  ,",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "_ExecuteQuery",
    "(",
    "query",
    ",",
    ")"
   ],
   "count": 32,
   "accuracy": 1.0
  },
  {
   "code": [
    "- refresh",
    "+ render",
    "  (",
    "  )"
   ],
   "trigger": [
    "refresh",
    "(",
    ")"
   ],
   "count": 32,
   "accuracy": 0.9411764705882353
  },
  {
   "code": [
    "- abstract",
    "+ abstract_utils",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "abstract",
    ".",
    "(",
    ")"
   ],
   "count": 32,
   "accuracy": 0.8421052631578947
  },
  {
   "code": [
    "- abstract",
    "+ mixin",
    "  ."
   ],
   "trigger": [
    "abstract",
    "."
   ],
   "count": 32,
   "accuracy": 0.26229508196721313
  },
  {
   "code": [
    "- worker",
    "+ queues",
    "  .",
    "- DEFAULT_WORKER_QUEUE",
    "+ FLOWS",
    "  )"
   ],
   "trigger": [
    "worker",
    ".",
    "DEFAULT_WORKER_QUEUE",
    ")"
   ],
   "count": 30,
   "accuracy": 1.0
  },
  {
   "code": [
    "- typing",
    "+ typing_overlay",
    "  .",
    "  NoReturn",
    "  )"
   ],
   "trigger": [
    "typing",
    ".",
    "NoReturn",
    ")"
   ],
   "count": 30,
   "accuracy": 1.0
  },
  {
   "code": [
    "- typing",
    "+ typing_overlay",
    "  .",
    "  )",
    "  :"
   ],
   "trigger": [
    "typing",
    ".",
    ")",
    ":"
   ],
   "count": 30,
   "accuracy": 1.0
  },
  {
   "code": [
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  +",
    "  GOOD_TERM_1"
   ],
   "trigger": [
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "+",
    "GOOD_TERM_1"
   ],
   "count": 30,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pol",
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  GOOD_STANDARD_HEADER_1",
    "  +",
    "  ,",
    "  <missing ')'>"
   ],
   "trigger": [
    "pol",
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "GOOD_STANDARD_HEADER_1",
    "+",
    ",",
    "<missing",
    "')'>"
   ],
   "count": 30,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pol",
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  GOOD_HEADER_2",
    "  +"
   ],
   "trigger": [
    "pol",
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "GOOD_HEADER_2",
    "+"
   ],
   "count": 30,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pol",
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  GOOD_HEADER",
    "  +"
   ],
   "trigger": [
    "pol",
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "GOOD_HEADER",
    "+"
   ],
   "count": 30,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  ,",
    "  self",
    "  .",
    "  naming",
    "  )"
   ],
   "trigger": [
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    ",",
    "self",
    ".",
    "naming",
    ")"
   ],
   "count": 30,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "  self",
    "  .",
    "- _ExecuteQuery",
    "+ ExecuteQuery",
    "  (",
    "  query",
    "  ,",
    "  )"
   ],
   "trigger": [
    "=",
    "self",
    ".",
    "_ExecuteQuery",
    "(",
    "query",
    ",",
    ")"
   ],
   "count": 30,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "  (",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  +"
   ],
   "trigger": [
    ".",
    "(",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "+"
   ],
   "count": 30,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "- tests",
    "+ integration",
    "  .",
    "  ggrc",
    "  import"
   ],
   "trigger": [
    "from",
    "tests",
    ".",
    "ggrc",
    "import"
   ],
   "count": 30,
   "accuracy": 0.9375
  },
  {
   "code": [
    "  =",
    "- abstract",
    "+ abstract_utils",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "abstract",
    ".",
    "(",
    ")"
   ],
   "count": 30,
   "accuracy": 0.8333333333333334
  },
  {
   "code": [
    "  from",
    "- tests",
    "+ integration",
    "  .",
    "  .",
    "  import"
   ],
   "trigger": [
    "from",
    "tests",
    ".",
    ".",
    "import"
   ],
   "count": 30,
   "accuracy": 0.75
  },
  {
   "code": [
    "- notification",
    "+ notifications"
   ],
   "trigger": [
    "notification"
   ],
   "count": 30,
   "accuracy": 0.3448275862068966
  },
  {
   "code": [
    "  pol",
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  +",
    "  +",
    "  +"
   ],
   "trigger": [
    "pol",
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "+",
    "+",
    "+"
   ],
   "count": 30,
   "accuracy": 0.2727272727272727
  },
  {
   "code": [
    "  if",
    "- not",
    "+ is",
    "+ None",
    "  :"
   ],
   "trigger": [
    "if",
    "not",
    ":"
   ],
   "count": 29,
   "accuracy": 0.2396694214876033
  },
  {
   "code": [
    "- api_call_renderers",
    "+ http_api"
   ],
   "trigger": [
    "api_call_renderers"
   ],
   "count": 28,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"aff4:/flows/W:CrashHandler\"",
    "+ \"aff4:/flows/\"",
    "+ ,",
    "  ,"
   ],
   "trigger": [
    "\"aff4:/flows/W:CrashHandler\"",
    ","
   ],
   "count": 28,
   "accuracy": 1.0
  },
  {
   "code": [
    "  kb",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ("
   ],
   "trigger": [
    "kb",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 28,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  =",
    "- \"btn\"",
    "+ \"btn btn-default\""
   ],
   "trigger": [
    "class",
    "=",
    "\"btn\""
   ],
   "count": 28,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  KnowledgeBase",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "KnowledgeBase",
    "(",
    ")"
   ],
   "count": 28,
   "accuracy": 1.0
  },
  {
   "code": [
    "- ControlAssessment",
    "+ Assessment"
   ],
   "trigger": [
    "ControlAssessment"
   ],
   "count": 28,
   "accuracy": 0.9512195121951219
  },
  {
   "code": [
    "  return",
    "- unicode",
    "+ str",
    "  (",
    "  )"
   ],
   "trigger": [
    "return",
    "unicode",
    "(",
    ")"
   ],
   "count": 28,
   "accuracy": 0.9333333333333333
  },
  {
   "code": [
    "  isinstance",
    "  (",
    "  ,",
    "- abstract",
    "+ mixin",
    "  .",
    "  )"
   ],
   "trigger": [
    "isinstance",
    "(",
    ",",
    "abstract",
    ".",
    ")"
   ],
   "count": 28,
   "accuracy": 0.8235294117647058
  },
  {
   "code": [
    "  return",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "return",
    "rdfvalue",
    ".",
    "(",
    ")"
   ],
   "count": 28,
   "accuracy": 0.2857142857142857
  },
  {
   "code": [
    "- False",
    "+ True"
   ],
   "trigger": [
    "False"
   ],
   "count": 28,
   "accuracy": 0.27450980392156865
  },
  {
   "code": [
    "  @",
    "- flaky",
    "+ skip",
    "+ (",
    "+ 'COURSEWARE PAGE TIMEOUT: This test fails to load the Coursware Page'",
    "+ )"
   ],
   "trigger": [
    "@",
    "flaky"
   ],
   "count": 28,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "  datetime",
    "  .",
    "- now",
    "+ utcnow",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "datetime",
    ".",
    "now",
    "(",
    ")"
   ],
   "count": 28,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"description\"",
    "  :",
    "+ factories",
    "- self",
    "- .",
    "  .",
    "  random_str",
    "  (",
    "  100",
    "  )"
   ],
   "trigger": [
    "\"description\"",
    ":",
    "self",
    ".",
    ".",
    "random_str",
    "(",
    "100",
    ")"
   ],
   "count": 27,
   "accuracy": 1.0
  },
  {
   "code": [
    "- tests",
    "+ integration",
    "  .",
    "  ggrc",
    "  ."
   ],
   "trigger": [
    "tests",
    ".",
    "ggrc",
    "."
   ],
   "count": 27,
   "accuracy": 0.9310344827586207
  },
  {
   "code": [
    "- image_path",
    "+ test_input_path"
   ],
   "trigger": [
    "image_path"
   ],
   "count": 27,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_crypto",
    "  .",
    "  Hash"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "Hash"
   ],
   "count": 26,
   "accuracy": 1.0
  },
  {
   "code": [
    "- Documentable",
    "+ EvidenceURL"
   ],
   "trigger": [
    "Documentable"
   ],
   "count": 26,
   "accuracy": 0.896551724137931
  },
  {
   "code": [
    "  from",
    "  lib",
    "+ .",
    "  import"
   ],
   "trigger": [
    "from",
    "lib",
    "import"
   ],
   "count": 26,
   "accuracy": 0.4406779661016949
  },
  {
   "code": [
    "- unicode",
    "+ str",
    "  (",
    "  )",
    "  )"
   ],
   "trigger": [
    "unicode",
    "(",
    ")",
    ")"
   ],
   "count": 26,
   "accuracy": 0.34146341463414637
  },
  {
   "code": [
    "  self",
    "  .",
    "  now",
    "  =",
    "  datetime",
    "  .",
    "  datetime",
    "  .",
    "- now",
    "+ utcnow",
    "  (",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "now",
    "=",
    "datetime",
    ".",
    "datetime",
    ".",
    "now",
    "(",
    ")"
   ],
   "count": 26,
   "accuracy": 1.0
  },
  {
   "code": [
    "- tag_data",
    "+ encoded_tag",
    "  ="
   ],
   "trigger": [
    "tag_data",
    "="
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  EmbeddedRDFValue",
    "  (",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "EmbeddedRDFValue",
    "(",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict",
    "  (",
    "  .",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "Dict",
    "(",
    ".",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  ]",
    "  =",
    "  test_lib",
    "  .",
    "  FakeTestDataVFSHandler"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    "]",
    "=",
    "test_lib",
    ".",
    "FakeTestDataVFSHandler"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  TSK",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    "TSK",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  OS",
    "  ]",
    "  =",
    "  test_lib",
    "  ."
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    "OS",
    "]",
    "=",
    "test_lib",
    "."
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  MEMORY"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    "MEMORY"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  (",
    "  ]",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec",
    "(",
    "]",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_foreman",
    "  .",
    "  ForemanAttributeRegex",
    "  ("
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ForemanAttributeRegex",
    "("
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  Notification"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "Notification"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrStatus",
    "  ,"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrStatus",
    ","
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrNotification",
    "  (",
    "  session_id",
    "  =",
    "  session_id",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrNotification",
    "(",
    "session_id",
    "=",
    "session_id",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  AuthorizationState",
    "  .",
    "  UNAUTHENTICATED"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "AuthorizationState",
    ".",
    "UNAUTHENTICATED"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  AuthorizationState",
    "  .",
    "  DESYNCHRONIZED"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "AuthorizationState",
    ".",
    "DESYNCHRONIZED"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  AuthorizationState",
    "  .",
    "  AUTHENTICATED",
    "  :"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "AuthorizationState",
    ".",
    "AUTHENTICATED",
    ":"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  AuthorizationState",
    "  .",
    "  AUTHENTICATED",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "AuthorizationState",
    ".",
    "AUTHENTICATED",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  .",
    "  )",
    "  :"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    ".",
    ")",
    ":"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  value",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    "value",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  serialized",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    "serialized",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  Flow",
    "  .",
    "  State",
    "  .",
    "  RUNNING"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "Flow",
    ".",
    "State",
    ".",
    "RUNNING"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  Uname"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "Uname"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry",
    "  )",
    "  ,"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "StatEntry",
    ")",
    ","
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  KnowledgeBaseUser",
    "  ("
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "KnowledgeBaseUser",
    "("
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  Interface",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "Interface",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  FolderInformation",
    "  (",
    "  **",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "FolderInformation",
    "(",
    "**",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  client_name",
    "  )",
    "  .",
    "  Add",
    "  (",
    "  )",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "client_name",
    ")",
    ".",
    "Add",
    "(",
    ")",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientInformation"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ClientInformation"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  response",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "(",
    "response",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  data",
    "  =",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "(",
    "data",
    "=",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ hunts_standard",
    "  .",
    "  ModifyHuntFlowArgs",
    "  ("
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ModifyHuntFlowArgs",
    "("
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ grr_rdf",
    "  .",
    "  CronJobRunStatus",
    "  .",
    "  Status",
    "  .",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "CronJobRunStatus",
    ".",
    "Status",
    ".",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ flow_runner",
    "  .",
    "  FlowRunnerArgs",
    "  (",
    "  =",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "FlowRunnerArgs",
    "(",
    "=",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ export",
    "  .",
    "  ExportOptions",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ExportOptions",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ artifact_lib",
    "  .",
    "  ArtifactCollectorFlowArgs",
    "  .",
    "  Dependency",
    "  ."
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ArtifactCollectorFlowArgs",
    ".",
    "Dependency",
    "."
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- get_full_name",
    "+ full_name"
   ],
   "trigger": [
    "get_full_name"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- collector",
    "+ source"
   ],
   "trigger": [
    "collector"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- artifact_lib",
    "+ artifact_registry",
    "  .",
    "  ArtifactRegistry",
    "  .",
    "  ("
   ],
   "trigger": [
    "artifact_lib",
    ".",
    "ArtifactRegistry",
    ".",
    "("
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- api_call_renderers",
    "+ http_api",
    "  .",
    "  ("
   ],
   "trigger": [
    "api_call_renderers",
    ".",
    "("
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- abstract",
    "+ mixin",
    "  .",
    "  Class"
   ],
   "trigger": [
    "abstract",
    ".",
    "Class"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- FACTORY_FOR",
    "+ class",
    "+ Meta",
    "+ :",
    "+ model",
    "  ="
   ],
   "trigger": [
    "FACTORY_FOR",
    "="
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  with",
    "  .",
    "  (",
    "- artifact_lib",
    "+ artifact_registry",
    "  )",
    "  :"
   ],
   "trigger": [
    "with",
    ".",
    "(",
    "artifact_lib",
    ")",
    ":"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  users",
    "  .",
    "  Append",
    "  (",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ("
   ],
   "trigger": [
    "users",
    ".",
    "Append",
    "(",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  user",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "user",
    "rdfvalue",
    ".",
    "(",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  urn",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  )"
   ],
   "trigger": [
    "urn",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  task",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  )"
   ],
   "trigger": [
    "task",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  subject_urn",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  client_id",
    "  )"
   ],
   "trigger": [
    "subject_urn",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "client_id",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  subject_urn",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  )",
    "  ,"
   ],
   "trigger": [
    "subject_urn",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    ")",
    ","
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  subject_urn",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  )",
    "  ,"
   ],
   "trigger": [
    "subject_urn",
    "=",
    "rdfvalue",
    ".",
    ")",
    ","
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  status",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrStatus"
   ],
   "trigger": [
    "status",
    "rdfvalue",
    ".",
    "GrrStatus"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  state",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  FlowState",
    "  (",
    "  )"
   ],
   "trigger": [
    "state",
    "rdfvalue",
    ".",
    "FlowState",
    "(",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  state",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  FlowState",
    "  (",
    "  )"
   ],
   "trigger": [
    "state",
    "=",
    "rdfvalue",
    ".",
    "FlowState",
    "(",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  state",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataServerState",
    "  (",
    "  )"
   ],
   "trigger": [
    "state",
    "=",
    "rdfvalue",
    ".",
    "DataServerState",
    "(",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  signed_message_list",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  SignedMessageList",
    "  (",
    "  )"
   ],
   "trigger": [
    "signed_message_list",
    "=",
    "rdfvalue",
    ".",
    "SignedMessageList",
    "(",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "rdfvalue",
    ".",
    "Dict",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  state",
    "  .",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ("
   ],
   "trigger": [
    "self",
    ".",
    "state",
    ".",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  client_id",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "client_id",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  client_id",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "client_id",
    "=",
    "rdfvalue",
    ".",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  cipher",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  ."
   ],
   "trigger": [
    "self",
    ".",
    "cipher",
    "=",
    "rdfvalue",
    "."
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  cipher",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  CipherProperties",
    "  ("
   ],
   "trigger": [
    "self",
    ".",
    "cipher",
    "=",
    "rdfvalue",
    ".",
    "CipherProperties",
    "("
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  (",
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ListDirRequest",
    "  ("
   ],
   "trigger": [
    "self",
    ".",
    "(",
    ",",
    "rdfvalue",
    ".",
    "ListDirRequest",
    "("
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  sample",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry"
   ],
   "trigger": [
    "sample",
    "=",
    "rdfvalue",
    ".",
    "StatEntry"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  )"
   ],
   "trigger": [
    "return",
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  response",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict",
    "  )"
   ],
   "trigger": [
    "response",
    "rdfvalue",
    ".",
    "Dict",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  response",
    "  .",
    "  status",
    "  =",
    "- rdfvalue",
    "+ rdf_data_store",
    "  .",
    "  DataStoreResponse",
    "  .",
    "  Status",
    "  ."
   ],
   "trigger": [
    "response",
    ".",
    "status",
    "=",
    "rdfvalue",
    ".",
    "DataStoreResponse",
    ".",
    "Status",
    "."
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  res",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ("
   ],
   "trigger": [
    "res",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  request_comms",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  ("
   ],
   "trigger": [
    "request_comms",
    "=",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  request",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  RequestState",
    "  ("
   ],
   "trigger": [
    "request",
    "=",
    "rdfvalue",
    ".",
    "RequestState",
    "("
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  request",
    "  =",
    "- rdfvalue",
    "+ rdf_data_store",
    "  .",
    "  DataStoreRequest",
    "  (",
    "  =",
    "  )"
   ],
   "trigger": [
    "request",
    "=",
    "rdfvalue",
    ".",
    "DataStoreRequest",
    "(",
    "=",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  reb",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataServerRebalance",
    "  (",
    "  )"
   ],
   "trigger": [
    "reb",
    "=",
    "rdfvalue",
    ".",
    "DataServerRebalance",
    "(",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  reb",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  )"
   ],
   "trigger": [
    "reb",
    "=",
    "rdfvalue",
    ".",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  priority",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  Priority",
    "  .",
    "  HIGH_PRIORITY"
   ],
   "trigger": [
    "priority",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "Priority",
    ".",
    "HIGH_PRIORITY"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  priority",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  Priority",
    "  .",
    "  :"
   ],
   "trigger": [
    "priority",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "Priority",
    ".",
    ":"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  message_type",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  Type",
    "  .",
    "  )"
   ],
   "trigger": [
    "message_type",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "Type",
    ".",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  message",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  )"
   ],
   "trigger": [
    "message",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  mapping",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataServerMapping",
    "  (",
    "  res",
    "  .",
    "  data",
    "  )"
   ],
   "trigger": [
    "mapping",
    "=",
    "rdfvalue",
    ".",
    "DataServerMapping",
    "(",
    "res",
    ".",
    "data",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  isinstance",
    "  (",
    "  ,",
    "- typing",
    "+ typing_overlay",
    "  .",
    "  )",
    "  :"
   ],
   "trigger": [
    "isinstance",
    "(",
    ",",
    "typing",
    ".",
    ")",
    ":"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  .",
    "  :"
   ],
   "trigger": [
    "if",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    ".",
    ":"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  not",
    "  isinstance",
    "  (",
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  )",
    "  :"
   ],
   "trigger": [
    "if",
    "not",
    "isinstance",
    "(",
    ",",
    "rdfvalue",
    ".",
    ")",
    ":"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  isinstance",
    "  (",
    "  result",
    "  ,",
    "- rdfvalue",
    "+ export",
    "  .",
    "  )",
    "  ]"
   ],
   "trigger": [
    "if",
    "isinstance",
    "(",
    "result",
    ",",
    "rdfvalue",
    ".",
    ")",
    "]"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  isinstance",
    "  (",
    "  ,",
    "- rdfvalue",
    "+ rdf_standard",
    "  .",
    "  DomainEmailAddress",
    "  )",
    "  :"
   ],
   "trigger": [
    "if",
    "isinstance",
    "(",
    ",",
    "rdfvalue",
    ".",
    "DomainEmailAddress",
    ")",
    ":"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  isinstance",
    "  (",
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  )",
    "  :"
   ],
   "trigger": [
    "if",
    "isinstance",
    "(",
    ",",
    "rdfvalue",
    ".",
    "ClientURN",
    ")",
    ":"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  graph",
    "  =",
    "- rdfvalue",
    "+ rdf_stats",
    "  .",
    "  Graph",
    "  (",
    "  title",
    "  =",
    "  )"
   ],
   "trigger": [
    "graph",
    "=",
    "rdfvalue",
    ".",
    "Graph",
    "(",
    "title",
    "=",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  except",
    "- artifact_lib",
    "+ artifact_registry",
    "  .",
    "  ArtifactDefinitionError",
    "  as",
    "  e",
    "  :"
   ],
   "trigger": [
    "except",
    "artifact_lib",
    ".",
    "ArtifactDefinitionError",
    "as",
    "e",
    ":"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  event",
    "  .",
    "  auth_state",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  AuthorizationState",
    "  ."
   ],
   "trigger": [
    "event",
    ".",
    "auth_state",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "AuthorizationState",
    "."
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  default_metadata",
    "- rdfvalue",
    "+ export",
    "  .",
    "  ExportedMetadata"
   ],
   "trigger": [
    "default_metadata",
    "rdfvalue",
    ".",
    "ExportedMetadata"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  creds",
    "  =",
    "- rdfvalue",
    "+ data_server",
    "  .",
    "  DataServerClientCredentials",
    "  ("
   ],
   "trigger": [
    "creds",
    "=",
    "rdfvalue",
    ".",
    "DataServerClientCredentials",
    "("
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  cmd",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  ."
   ],
   "trigger": [
    "cmd",
    "=",
    "rdfvalue",
    "."
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  cmd",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataStoreCommand"
   ],
   "trigger": [
    "cmd",
    "=",
    "rdfvalue",
    ".",
    "DataStoreCommand"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client_id",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  ."
   ],
   "trigger": [
    "client_id",
    "rdfvalue",
    ".",
    "ClientURN",
    "."
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client_id",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  client_id",
    "  )"
   ],
   "trigger": [
    "client_id",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "client_id",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client_id",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  %",
    "  )"
   ],
   "trigger": [
    "client_id",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "%",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client_id",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  \"C.0000000000000001\"",
    "  )"
   ],
   "trigger": [
    "client_id",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "\"C.0000000000000001\"",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client_id",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  \"C.\"",
    "  +",
    "  *",
    "  16",
    "  )"
   ],
   "trigger": [
    "client_id",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "\"C.\"",
    "+",
    "*",
    "16",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  =",
    "- \"btn\"",
    "+ \"btn btn-default\"",
    "  name",
    "  ="
   ],
   "trigger": [
    "class",
    "=",
    "\"btn\"",
    "name",
    "="
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  (",
    "- structs",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "(",
    "structs",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  (",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  RDFValueArray",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "(",
    "rdfvalue",
    ".",
    "RDFValueArray",
    ")",
    ":"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  args",
    "  =",
    "- rdfvalue",
    "+ endtoend",
    "  .",
    "  EndToEndTestFlowArgs",
    "  ("
   ],
   "trigger": [
    "args",
    "=",
    "rdfvalue",
    ".",
    "EndToEndTestFlowArgs",
    "("
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  arg",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  GetClientStatsRequest",
    "  (",
    "  =",
    "  )",
    "  )"
   ],
   "trigger": [
    "arg",
    "=",
    "rdfvalue",
    ".",
    "GetClientStatsRequest",
    "(",
    "=",
    ")",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  action_name",
    "  =",
    "- rdfvalue",
    "+ cronjobs",
    "  .",
    "  ManageCronJobFlowArgs",
    "  .",
    "  Action",
    "  ."
   ],
   "trigger": [
    "action_name",
    "=",
    "rdfvalue",
    ".",
    "ManageCronJobFlowArgs",
    ".",
    "Action",
    "."
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  [",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict",
    "  ("
   ],
   "trigger": [
    "[",
    "rdfvalue",
    ".",
    "Dict",
    "("
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  KeyValue"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "KeyValue"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  TSK"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    "TSK"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  GlobExpression",
    "  ("
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "GlobExpression",
    "("
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  RequestState",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "RequestState",
    "(",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrStatus",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "GrrStatus",
    "(",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  Type",
    "  .",
    "  STATUS",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "Type",
    ".",
    "STATUS",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  session_id",
    "  =",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    "session_id",
    "=",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  message",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    "message",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  )",
    "  .",
    "  task_ttl"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    ")",
    ".",
    "task_ttl"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataServerRebalance",
    "  (",
    "  .",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "DataServerRebalance",
    "(",
    ".",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_crypto",
    "  .",
    "  SignedBlob"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "SignedBlob"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  User",
    "  (",
    "  username",
    "  =",
    "  \"user%s\"",
    "  %",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "User",
    "(",
    "username",
    "=",
    "\"user%s\"",
    "%",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry",
    "  .",
    "  RegistryType",
    "  .",
    "  REG_SZ"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "StatEntry",
    ".",
    "RegistryType",
    ".",
    "REG_SZ"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StartupInfo",
    "  (",
    "  message",
    "  .",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "StartupInfo",
    "(",
    "message",
    ".",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  OSXServiceInformation"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "OSXServiceInformation"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  Interface"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "Interface"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  DriverInstallTemplate"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "DriverInstallTemplate"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  self",
    "  .",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "self",
    ".",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  \"C.%016X\"",
    "  %",
    "  0",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "\"C.%016X\"",
    "%",
    "0",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientResources",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "ClientResources",
    "(",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  BufferReference",
    "  ("
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "BufferReference",
    "("
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  %",
    "  i",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "(",
    "%",
    "i",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ artifact_lib",
    "  .",
    "  ArtifactCollectorFlowArgs"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "ArtifactCollectorFlowArgs"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ aff4_users",
    "  .",
    "  GUISettings"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "GUISettings"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ access_control",
    "  .",
    "  ACLToken",
    "  ("
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "ACLToken",
    "("
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "  or",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "or",
    "rdfvalue",
    ".",
    "(",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  )"
   ],
   "trigger": [
    ".",
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  urn",
    "  )"
   ],
   "trigger": [
    ".",
    "rdfvalue",
    ".",
    "urn",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry"
   ],
   "trigger": [
    ".",
    "rdfvalue",
    ".",
    "StatEntry"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  urn",
    "  )"
   ],
   "trigger": [
    ".",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "urn",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "  auth_state",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  AuthorizationState",
    "  .",
    "  AUTHENTICATED"
   ],
   "trigger": [
    ".",
    "auth_state",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "AuthorizationState",
    ".",
    "AUTHENTICATED"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "  (",
    "- rdfvalue",
    "+ output_plugin",
    "  .",
    "  OutputPluginDescriptor",
    "  ("
   ],
   "trigger": [
    ".",
    "(",
    "rdfvalue",
    ".",
    "OutputPluginDescriptor",
    "("
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry"
   ],
   "trigger": [
    "(",
    "rdfvalue",
    ".",
    "StatEntry"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  )",
    "  )"
   ],
   "trigger": [
    "(",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    ")",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "- artifact_lib",
    "+ artifact_registry",
    "  .",
    "  ArtifactDefinitionError",
    "  )",
    "  :"
   ],
   "trigger": [
    "(",
    "artifact_lib",
    ".",
    "ArtifactDefinitionError",
    ")",
    ":"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "  result",
    "  ,",
    "- rdfvalue",
    "+ rdf_anomaly",
    "  .",
    "  Anomaly",
    "  )"
   ],
   "trigger": [
    "(",
    "result",
    ",",
    "rdfvalue",
    ".",
    "Anomaly",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "  ,",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict",
    "  )"
   ],
   "trigger": [
    "(",
    ",",
    "rdfvalue",
    ".",
    "Dict",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "- tests",
    "+ integration",
    "  .",
    "  ggrc",
    "  .",
    "  import"
   ],
   "trigger": [
    "from",
    "tests",
    ".",
    "ggrc",
    ".",
    "import"
   ],
   "count": 24,
   "accuracy": 0.9230769230769231
  },
  {
   "code": [
    "  :",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  )",
    "  ,"
   ],
   "trigger": [
    ":",
    "rdfvalue",
    ".",
    "(",
    ")",
    ","
   ],
   "count": 24,
   "accuracy": 0.8571428571428571
  },
  {
   "code": [
    "  isinstance",
    "  (",
    "  ,",
    "- abstract",
    "+ mixin",
    "  .",
    "  )",
    "  :"
   ],
   "trigger": [
    "isinstance",
    "(",
    ",",
    "abstract",
    ".",
    ")",
    ":"
   ],
   "count": 24,
   "accuracy": 0.8
  },
  {
   "code": [
    "- StatResponse",
    "+ StatEntry",
    "  ."
   ],
   "trigger": [
    "StatResponse",
    "."
   ],
   "count": 24,
   "accuracy": 0.75
  },
  {
   "code": [
    "  yield",
    "- rdfvalue",
    "+ rdf_webhistory",
    "  .",
    "  BrowserHistoryItem",
    "  ("
   ],
   "trigger": [
    "yield",
    "rdfvalue",
    ".",
    "BrowserHistoryItem",
    "("
   ],
   "count": 24,
   "accuracy": 0.6666666666666666
  },
  {
   "code": [
    "  self",
    "  .",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  (",
    "  self",
    "  ."
   ],
   "trigger": [
    "self",
    ".",
    "=",
    "rdfvalue",
    ".",
    "(",
    "self",
    "."
   ],
   "count": 24,
   "accuracy": 0.6666666666666666
  },
  {
   "code": [
    "  response",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry",
    "  ("
   ],
   "trigger": [
    "response",
    "=",
    "rdfvalue",
    ".",
    "StatEntry",
    "("
   ],
   "count": 24,
   "accuracy": 0.6666666666666666
  },
  {
   "code": [
    "  rdfvalue_class",
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  ."
   ],
   "trigger": [
    "rdfvalue_class",
    "=",
    "rdfvalue",
    "."
   ],
   "count": 24,
   "accuracy": 0.6666666666666666
  },
  {
   "code": [
    "  pathtype",
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  ,"
   ],
   "trigger": [
    "pathtype",
    "=",
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    ","
   ],
   "count": 24,
   "accuracy": 0.6666666666666666
  },
  {
   "code": [
    "  isinstance",
    "  (",
    "  result",
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  )",
    "  :"
   ],
   "trigger": [
    "isinstance",
    "(",
    "result",
    ",",
    "rdfvalue",
    ".",
    ")",
    ":"
   ],
   "count": 24,
   "accuracy": 0.6666666666666666
  },
  {
   "code": [
    "  except",
    "- ,",
    "+ as",
    "  e",
    "  :"
   ],
   "trigger": [
    "except",
    ",",
    "e",
    ":"
   ],
   "count": 24,
   "accuracy": 0.6666666666666666
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  RDFValueArray",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "RDFValueArray",
    "(",
    ")"
   ],
   "count": 24,
   "accuracy": 0.6666666666666666
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  REGISTRY"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    "REGISTRY"
   ],
   "count": 24,
   "accuracy": 0.6666666666666666
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  (",
    "  serialized",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "(",
    "serialized",
    ")"
   ],
   "count": 24,
   "accuracy": 0.6666666666666666
  },
  {
   "code": [
    "  (",
    "  ,",
    "- rdfvalue",
    "+ aff4_rdfvalues",
    "  .",
    "  ,",
    "  <missing ')'>"
   ],
   "trigger": [
    "(",
    ",",
    "rdfvalue",
    ".",
    ",",
    "<missing",
    "')'>"
   ],
   "count": 24,
   "accuracy": 0.6666666666666666
  },
  {
   "code": [
    "- StringIO",
    "+ io"
   ],
   "trigger": [
    "StringIO"
   ],
   "count": 24,
   "accuracy": 0.6363636363636364
  },
  {
   "code": [
    "  status",
    "- rdfvalue",
    "+ rdf_flows",
    "  ."
   ],
   "trigger": [
    "status",
    "rdfvalue",
    "."
   ],
   "count": 24,
   "accuracy": 0.5
  },
  {
   "code": [
    "  sample",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "sample",
    "=",
    "rdfvalue",
    ".",
    "(",
    ")"
   ],
   "count": 24,
   "accuracy": 0.5
  },
  {
   "code": [
    "  args_type",
    "  =",
    "- rdfvalue",
    "+ aff4_users",
    "  ."
   ],
   "trigger": [
    "args_type",
    "=",
    "rdfvalue",
    "."
   ],
   "count": 24,
   "accuracy": 0.5
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "  .",
    "  (",
    "  message",
    "  .",
    "- args",
    "+ payload",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "(",
    "message",
    ".",
    "args",
    ")"
   ],
   "count": 24,
   "accuracy": 0.5
  },
  {
   "code": [
    "  .",
    "  append",
    "  (",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ("
   ],
   "trigger": [
    ".",
    "append",
    "(",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 24,
   "accuracy": 0.5
  },
  {
   "code": [
    "  from",
    "  grr",
    "  .",
    "  lib",
    "+ .",
    "  import",
    "- server_plugins"
   ],
   "trigger": [
    "from",
    "grr",
    ".",
    "lib",
    "import",
    "server_plugins"
   ],
   "count": 24,
   "accuracy": 0.42857142857142855
  },
  {
   "code": [
    "  state",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  )"
   ],
   "trigger": [
    "state",
    "=",
    "rdfvalue",
    ".",
    ")"
   ],
   "count": 24,
   "accuracy": 0.4
  },
  {
   "code": [
    "  self",
    "  .",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  (",
    "  .",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "=",
    "rdfvalue",
    ".",
    "(",
    ".",
    ")"
   ],
   "count": 24,
   "accuracy": 0.4
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  args",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "args",
    ")"
   ],
   "count": 24,
   "accuracy": 0.4
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  args",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "(",
    "args",
    ")"
   ],
   "count": 24,
   "accuracy": 0.4
  },
  {
   "code": [
    "- new",
    "+ types"
   ],
   "trigger": [
    "new"
   ],
   "count": 24,
   "accuracy": 0.39344262295081966
  },
  {
   "code": [
    "  result",
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "result",
    "=",
    "rdfvalue",
    ".",
    "(",
    ")"
   ],
   "count": 24,
   "accuracy": 0.35294117647058826
  },
  {
   "code": [
    "  result",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "result",
    "=",
    "rdfvalue",
    ".",
    "(",
    ")"
   ],
   "count": 24,
   "accuracy": 0.35294117647058826
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  (",
    "  **",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "(",
    "**",
    ")"
   ],
   "count": 24,
   "accuracy": 0.32432432432432434
  },
  {
   "code": [
    "  request",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "request",
    "=",
    "rdfvalue",
    ".",
    "(",
    ")"
   ],
   "count": 24,
   "accuracy": 0.2857142857142857
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  client_id",
    "  )",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "client_id",
    ")",
    ")"
   ],
   "count": 24,
   "accuracy": 0.2727272727272727
  },
  {
   "code": [
    "  response",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "response",
    "=",
    "rdfvalue",
    ".",
    "(",
    ")"
   ],
   "count": 24,
   "accuracy": 0.25
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  data",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "data",
    ")"
   ],
   "count": 24,
   "accuracy": 0.25
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  (",
    "  data",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "(",
    "data",
    ")"
   ],
   "count": 24,
   "accuracy": 0.25
  },
  {
   "code": [
    "- logging",
    "+ logger",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "logging",
    ".",
    "(",
    ")"
   ],
   "count": 24,
   "accuracy": 0.23809523809523808
  },
  {
   "code": [
    "- logging",
    "+ logger",
    "  .",
    "  )"
   ],
   "trigger": [
    "logging",
    ".",
    ")"
   ],
   "count": 24,
   "accuracy": 0.2358490566037736
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  )",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec",
    ")",
    ")"
   ],
   "count": 24,
   "accuracy": 0.2033898305084746
  },
  {
   "code": [
    "- \"\"\"Initializes the current instance of the object (can be overridden).\"\"\"",
    "- \"\"\"Writes the contents of this object and returns the content as a dict object.\"\"\"",
    "+ \"\"\"Initializes the current instance of the object.\n        \"\"\"",
    "+ \"\"\"Writes the contents of this object and returns the content as a dict object.\n        \n        Returns:\n            (dict). the object that represents the same data as the current instance.\n        \"\"\""
   ],
   "trigger": [
    "\"\"\"Initializes",
    "the",
    "current",
    "instance",
    "of",
    "the",
    "object",
    "(can",
    "be",
    "overridden).\"\"\"",
    "\"\"\"Writes",
    "the",
    "contents",
    "of",
    "this",
    "object",
    "and",
    "returns",
    "the",
    "content",
    "as",
    "a",
    "dict",
    "object.\"\"\""
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"\"\"Writes the contents of this object and returns the content as a dict object.\"\"\"",
    "+ \"\"\"Initializes the current instance of the object.\n        \"\"\"",
    "+ \"\"\"Writes the contents of this object and returns the content as a dict object.\n        \n        Returns:\n            (dict). the object that represents the same data as the current instance.\n        \"\"\""
   ],
   "trigger": [
    "\"\"\"Writes",
    "the",
    "contents",
    "of",
    "this",
    "object",
    "and",
    "returns",
    "the",
    "content",
    "as",
    "a",
    "dict",
    "object.\"\"\""
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "- image_path",
    "+ test_input_path",
    "  )"
   ],
   "trigger": [
    "(",
    "image_path",
    ")"
   ],
   "count": 24,
   "accuracy": 1.0
  },
  {
   "code": [
    "- elif",
    "+ if",
    "  :"
   ],
   "trigger": [
    "elif",
    ":"
   ],
   "count": 24,
   "accuracy": 0.6666666666666666
  },
  {
   "code": [
    "  self",
    "  .",
    "- assertEquals",
    "+ assertEqual",
    "  (",
    "  .",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "assertEquals",
    "(",
    ".",
    ")"
   ],
   "count": 23,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "- unicode",
    "+ str"
   ],
   "trigger": [
    "(",
    "unicode"
   ],
   "count": 23,
   "accuracy": 0.6764705882352942
  },
  {
   "code": [
    "- rdfvalue",
    "+ filesystem",
    "  .",
    "  RecursiveListDirectoryArgs",
    "  (",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "RecursiveListDirectoryArgs",
    "(",
    ")"
   ],
   "count": 22,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ aff4_plugin",
    "  .",
    "  (",
    "  aff4_path",
    "  =",
    "  )",
    "  ,"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "(",
    "aff4_path",
    "=",
    ")",
    ","
   ],
   "count": 22,
   "accuracy": 1.0
  },
  {
   "code": [
    "- HTFConfig",
    "+ Config"
   ],
   "trigger": [
    "HTFConfig"
   ],
   "count": 22,
   "accuracy": 1.0
  },
  {
   "code": [
    "  user",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  User",
    "  )"
   ],
   "trigger": [
    "user",
    "rdfvalue",
    ".",
    "User",
    ")"
   ],
   "count": 22,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- _ExecuteQuery",
    "+ ExecuteQuery",
    "  (",
    "  query",
    "  ,",
    "  args",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "_ExecuteQuery",
    "(",
    "query",
    ",",
    "args",
    ")"
   ],
   "count": 22,
   "accuracy": 1.0
  },
  {
   "code": [
    "  rdfvalue",
    "  .",
    "- Config",
    "+ AttributedDict",
    "  (",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "Config",
    "(",
    ")"
   ],
   "count": 22,
   "accuracy": 1.0
  },
  {
   "code": [
    "  module",
    "  =",
    "- new",
    "+ types",
    "  .",
    "- module",
    "+ ModuleType",
    "  (",
    "  )"
   ],
   "trigger": [
    "module",
    "=",
    "new",
    ".",
    "module",
    "(",
    ")"
   ],
   "count": 22,
   "accuracy": 1.0
  },
  {
   "code": [
    "  module",
    "  =",
    "- new",
    "+ types",
    "  .",
    "  )"
   ],
   "trigger": [
    "module",
    "=",
    "new",
    ".",
    ")"
   ],
   "count": 22,
   "accuracy": 1.0
  },
  {
   "code": [
    "  [",
    "- \"Configured protocols: [2, 1]\"",
    "+ \"Configured protocols: 2,1\"",
    "  ]",
    "  ,"
   ],
   "trigger": [
    "[",
    "\"Configured",
    "protocols:",
    "[2,",
    "1]\"",
    "]",
    ","
   ],
   "count": 22,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  EmbeddedRDFValue"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "EmbeddedRDFValue"
   ],
   "count": 22,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  ."
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    "."
   ],
   "count": 22,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  ("
   ],
   "trigger": [
    ".",
    "rdfvalue",
    ".",
    "PathSpec",
    "("
   ],
   "count": 22,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  User"
   ],
   "trigger": [
    "(",
    "rdfvalue",
    ".",
    "User"
   ],
   "count": 22,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "- aff4",
    "+ aff4_grr",
    "  .",
    "  )"
   ],
   "trigger": [
    "(",
    "aff4",
    ".",
    ")"
   ],
   "count": 22,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "  user",
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  )"
   ],
   "trigger": [
    "(",
    "user",
    ",",
    "rdfvalue",
    ".",
    ")"
   ],
   "count": 22,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"ControlAssessment\"",
    "+ \"Assessment\""
   ],
   "trigger": [
    "\"ControlAssessment\""
   ],
   "count": 22,
   "accuracy": 0.9565217391304348
  },
  {
   "code": [
    "  .",
    "- refresh",
    "+ render",
    "  (",
    "  )"
   ],
   "trigger": [
    ".",
    "refresh",
    "(",
    ")"
   ],
   "count": 22,
   "accuracy": 0.9166666666666666
  },
  {
   "code": [
    "  in_rdfvalue",
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  ."
   ],
   "trigger": [
    "in_rdfvalue",
    "=",
    "rdfvalue",
    "."
   ],
   "count": 22,
   "accuracy": 0.5238095238095238
  },
  {
   "code": [
    "  value_class",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  ."
   ],
   "trigger": [
    "value_class",
    "=",
    "rdfvalue",
    "."
   ],
   "count": 22,
   "accuracy": 0.4782608695652174
  },
  {
   "code": [
    "  sample",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  ("
   ],
   "trigger": [
    "sample",
    "=",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 22,
   "accuracy": 0.23404255319148937
  },
  {
   "code": [
    "  return",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  )"
   ],
   "trigger": [
    "return",
    "rdfvalue",
    ".",
    ")"
   ],
   "count": 22,
   "accuracy": 0.22448979591836735
  },
  {
   "code": [
    "  return",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "return",
    "rdfvalue",
    ".",
    "(",
    ")"
   ],
   "count": 22,
   "accuracy": 0.22448979591836735
  },
  {
   "code": [
    "- '/'",
    "+ '/login'",
    "  ,"
   ],
   "trigger": [
    "'/'",
    ","
   ],
   "count": 22,
   "accuracy": 1.0
  },
  {
   "code": [
    "- xrange",
    "+ range",
    "  (",
    "  ,"
   ],
   "trigger": [
    "xrange",
    "(",
    ","
   ],
   "count": 21,
   "accuracy": 1.0
  },
  {
   "code": [
    "- xrange",
    "+ range",
    "  (",
    "  ,",
    "  )"
   ],
   "trigger": [
    "xrange",
    "(",
    ",",
    ")"
   ],
   "count": 21,
   "accuracy": 1.0
  },
  {
   "code": [
    "  logging",
    "  .",
    "  (",
    "- %",
    "+ ,"
   ],
   "trigger": [
    "logging",
    ".",
    "(",
    "%"
   ],
   "count": 21,
   "accuracy": 1.0
  },
  {
   "code": [
    "- logging",
    "+ logger",
    "  .",
    "  warning",
    "  (",
    "  )"
   ],
   "trigger": [
    "logging",
    ".",
    "warning",
    "(",
    ")"
   ],
   "count": 21,
   "accuracy": 0.9545454545454546
  },
  {
   "code": [
    "- else",
    "+ elif",
    "  :"
   ],
   "trigger": [
    "else",
    ":"
   ],
   "count": 21,
   "accuracy": 0.9545454545454546
  },
  {
   "code": [
    "- \"ControlAssessment\"",
    "+ \"Assessment\"",
    "  ,"
   ],
   "trigger": [
    "\"ControlAssessment\"",
    ","
   ],
   "count": 21,
   "accuracy": 0.9130434782608695
  },
  {
   "code": [
    "  (",
    "- unicode",
    "+ str",
    "  )"
   ],
   "trigger": [
    "(",
    "unicode",
    ")"
   ],
   "count": 21,
   "accuracy": 0.65625
  },
  {
   "code": [
    "- '''\n        '''",
    "+ \"\"\"\n        \"\"\""
   ],
   "trigger": [
    "'''\n",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "'''"
   ],
   "count": 21,
   "accuracy": 0.31343283582089554
  },
  {
   "code": [
    "- rdfvalue",
    "+ rekall_types",
    "  .",
    "  RekallResponse",
    "  ("
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "RekallResponse",
    "("
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  GOOD_HEADER_1",
    "  +"
   ],
   "trigger": [
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "GOOD_HEADER_1",
    "+"
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  +",
    "  GOOD_TERM_1",
    "  ,",
    "  <missing ')'>"
   ],
   "trigger": [
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "+",
    "GOOD_TERM_1",
    ",",
    "<missing",
    "')'>"
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "- TryAppend",
    "+ TryAppendMac",
    "  (",
    "- \"mac\"",
    "- ,",
    "  )"
   ],
   "trigger": [
    "TryAppend",
    "(",
    "\"mac\"",
    ",",
    ")"
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "- SUPPORTED_ARCHICTECTURES",
    "+ SUPPORTED_ARCHITECTURES",
    "  ,"
   ],
   "trigger": [
    "SUPPORTED_ARCHICTECTURES",
    ","
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "- ListFields",
    "+ ListSetFields",
    "  (",
    "  )",
    "  :"
   ],
   "trigger": [
    "ListFields",
    "(",
    ")",
    ":"
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "  windows_ipsec",
    "  .",
    "  WindowsIPSec",
    "  (",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  ("
   ],
   "trigger": [
    "windows_ipsec",
    ".",
    "WindowsIPSec",
    "(",
    "policy",
    ".",
    "ParsePolicy",
    "("
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "  windows_advfirewall",
    "  .",
    "  WindowsAdvFirewall",
    "  (",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  ("
   ],
   "trigger": [
    "windows_advfirewall",
    ".",
    "WindowsAdvFirewall",
    "(",
    "policy",
    ".",
    "ParsePolicy",
    "("
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- assertEquals",
    "+ assertEqual",
    "  (",
    "  .",
    "  ,",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "assertEquals",
    "(",
    ".",
    ",",
    ")"
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "  result",
    "  =",
    "  self",
    "  .",
    "- _ExecuteQuery",
    "+ ExecuteQuery",
    "  (",
    "  query",
    "  ,",
    "  )"
   ],
   "trigger": [
    "result",
    "=",
    "self",
    ".",
    "_ExecuteQuery",
    "(",
    "query",
    ",",
    ")"
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "  reply",
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  Volume",
    "  )",
    "  :"
   ],
   "trigger": [
    "reply",
    ",",
    "rdfvalue",
    ".",
    "Volume",
    ")",
    ":"
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pol",
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  GOOD_HEADER",
    "  +",
    "  +",
    "  +"
   ],
   "trigger": [
    "pol",
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "GOOD_HEADER",
    "+",
    "+",
    "+"
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pol",
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  +",
    "  GOOD_TERM_2"
   ],
   "trigger": [
    "pol",
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "+",
    "GOOD_TERM_2"
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pol",
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  +",
    "  GOOD_TERM_1"
   ],
   "trigger": [
    "pol",
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "+",
    "GOOD_TERM_1"
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pcap",
    "  .",
    "  PcapFilter",
    "  (",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  ("
   ],
   "trigger": [
    "pcap",
    ".",
    "PcapFilter",
    "(",
    "policy",
    ".",
    "ParsePolicy",
    "("
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "  packetfilter",
    "  .",
    "  PacketFilter",
    "  (",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  ("
   ],
   "trigger": [
    "packetfilter",
    ".",
    "PacketFilter",
    "(",
    "policy",
    ".",
    "ParsePolicy",
    "("
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "  jcl",
    "  =",
    "  juniper",
    "  .",
    "  Juniper",
    "  (",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  ("
   ],
   "trigger": [
    "jcl",
    "=",
    "juniper",
    ".",
    "Juniper",
    "(",
    "policy",
    ".",
    "ParsePolicy",
    "("
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "  isinstance",
    "  (",
    "  ,",
    "- abstract",
    "+ mixin",
    "  .",
    "  Class",
    "  )"
   ],
   "trigger": [
    "isinstance",
    "(",
    ",",
    "abstract",
    ".",
    "Class",
    ")"
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  =",
    "- \"btn\"",
    "+ \"btn btn-default\"",
    "  name",
    "  =",
    "  data",
    "  -",
    "  toggle",
    "  =",
    "  \"modal\""
   ],
   "trigger": [
    "class",
    "=",
    "\"btn\"",
    "name",
    "=",
    "data",
    "-",
    "toggle",
    "=",
    "\"modal\""
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "  acl",
    "  =",
    "  iptables",
    "  .",
    "  Iptables",
    "  (",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  ("
   ],
   "trigger": [
    "acl",
    "=",
    "iptables",
    ".",
    "Iptables",
    "(",
    "policy",
    ".",
    "ParsePolicy",
    "("
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  pol",
    "  ,",
    "  self",
    "  .",
    "  naming",
    "  )"
   ],
   "trigger": [
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "pol",
    ",",
    "self",
    ".",
    "naming",
    ")"
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "  self",
    "  .",
    "- _ExecuteQuery",
    "+ ExecuteQuery",
    "  (",
    "  query",
    "  ,",
    "  args",
    "  )"
   ],
   "trigger": [
    "=",
    "self",
    ".",
    "_ExecuteQuery",
    "(",
    "query",
    ",",
    "args",
    ")"
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "  .",
    "  (",
    "- worker",
    "+ queues",
    "  .",
    "- DEFAULT_WORKER_QUEUE",
    "+ FLOWS",
    "  )"
   ],
   "trigger": [
    "=",
    ".",
    "(",
    "worker",
    ".",
    "DEFAULT_WORKER_QUEUE",
    ")"
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "  .",
    "  (",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  +"
   ],
   "trigger": [
    "=",
    ".",
    "(",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "+"
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "- merge_type_parameter",
    "+ merge_instance_type_parameter",
    "  ("
   ],
   "trigger": [
    ".",
    "merge_type_parameter",
    "("
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "- get_full_name",
    "+ full_name",
    "- (",
    "- )"
   ],
   "trigger": [
    ".",
    "get_full_name",
    "(",
    ")"
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "  ,",
    "- \"aff4:/flows/W:CrashHandler\"",
    "+ \"aff4:/flows/\"",
    "+ ,",
    "+ \":CrashHandler\"",
    "  ,"
   ],
   "trigger": [
    ",",
    "\"aff4:/flows/W:CrashHandler\"",
    ","
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "- get_importables",
    "+ get_exportables"
   ],
   "trigger": [
    "get_importables"
   ],
   "count": 20,
   "accuracy": 0.9090909090909091
  },
  {
   "code": [
    "  from",
    "- rekall",
    "+ rekall_lib",
    "  import"
   ],
   "trigger": [
    "from",
    "rekall",
    "import"
   ],
   "count": 20,
   "accuracy": 0.5263157894736842
  },
  {
   "code": [
    "  value_class",
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  ."
   ],
   "trigger": [
    "value_class",
    "=",
    "rdfvalue",
    "."
   ],
   "count": 20,
   "accuracy": 0.43478260869565216
  },
  {
   "code": [
    "  ,",
    "- rdfvalue",
    "+ api_aff4_object_renderers",
    "  .",
    "  ("
   ],
   "trigger": [
    ",",
    "rdfvalue",
    ".",
    "("
   ],
   "count": 20,
   "accuracy": 0.35714285714285715
  },
  {
   "code": [
    "  self",
    "  .",
    "- assertProtoEqual",
    "+ assertRDFValueEqualToProto",
    "  (",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "assertProtoEqual",
    "(",
    ")"
   ],
   "count": 20,
   "accuracy": 0.3333333333333333
  },
  {
   "code": [
    "  result",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "result",
    "=",
    "rdfvalue",
    ".",
    "(",
    ")"
   ],
   "count": 20,
   "accuracy": 0.29411764705882354
  },
  {
   "code": [
    "  =",
    "- False",
    "+ True"
   ],
   "trigger": [
    "=",
    "False"
   ],
   "count": 20,
   "accuracy": 0.2702702702702703
  },
  {
   "code": [
    "  =",
    "- True",
    "+ False"
   ],
   "trigger": [
    "=",
    "True"
   ],
   "count": 20,
   "accuracy": 0.2597402597402597
  },
  {
   "code": [
    "- attempted",
    "+ first_attempted"
   ],
   "trigger": [
    "attempted"
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "  :",
    "  type",
    "  :",
    "+ str",
    "- list",
    "- of",
    "- int"
   ],
   "trigger": [
    ":",
    "type",
    ":",
    "list",
    "of",
    "int"
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"\"",
    "+ ."
   ],
   "trigger": [
    "\"\""
   ],
   "count": 20,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "  ggrc",
    "  import",
    "- notification",
    "+ notifications"
   ],
   "trigger": [
    "from",
    "ggrc",
    "import",
    "notification"
   ],
   "count": 19,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "- not",
    "  .",
    "+ is",
    "+ None",
    "  :"
   ],
   "trigger": [
    "if",
    "not",
    ".",
    ":"
   ],
   "count": 19,
   "accuracy": 0.2111111111111111
  },
  {
   "code": [
    "- Queue",
    "+ queue"
   ],
   "trigger": [
    "Queue"
   ],
   "count": 18,
   "accuracy": 1.0
  },
  {
   "code": [
    "- HTFConfig",
    "+ Config",
    "  (",
    "  )"
   ],
   "trigger": [
    "HTFConfig",
    "(",
    ")"
   ],
   "count": 18,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- convert",
    "- .",
    "- create_new_unsolvable",
    "+ new_unsolvable",
    "  (",
    "  node",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "convert",
    ".",
    "create_new_unsolvable",
    "(",
    "node",
    ")"
   ],
   "count": 18,
   "accuracy": 1.0
  },
  {
   "code": [
    "  models",
    "- ControlAssessment",
    "+ Assessment"
   ],
   "trigger": [
    "models",
    "ControlAssessment"
   ],
   "count": 18,
   "accuracy": 1.0
  },
  {
   "code": [
    "  isinstance",
    "  (",
    "  v",
    "  ,",
    "- typing",
    "+ typing_overlay",
    "  .",
    "  )",
    "  :"
   ],
   "trigger": [
    "isinstance",
    "(",
    "v",
    ",",
    "typing",
    ".",
    ")",
    ":"
   ],
   "count": 18,
   "accuracy": 1.0
  },
  {
   "code": [
    "  isinstance",
    "  (",
    "  ,",
    "- typing",
    "+ typing_overlay",
    "  .",
    "  NoReturn",
    "  )"
   ],
   "trigger": [
    "isinstance",
    "(",
    ",",
    "typing",
    ".",
    "NoReturn",
    ")"
   ],
   "count": 18,
   "accuracy": 1.0
  },
  {
   "code": [
    "  isinstance",
    "  (",
    "  ,",
    "- abstract",
    "+ mixin",
    "  .",
    "  Class",
    "  )",
    "  :"
   ],
   "trigger": [
    "isinstance",
    "(",
    ",",
    "abstract",
    ".",
    "Class",
    ")",
    ":"
   ],
   "count": 18,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- abstract",
    "+ abstract_utils",
    "  .",
    "  get_atomic_python_constant",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "abstract",
    ".",
    "get_atomic_python_constant",
    "(",
    ")"
   ],
   "count": 18,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- HTFConfig",
    "+ Config"
   ],
   "trigger": [
    "=",
    "HTFConfig"
   ],
   "count": 18,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "- button_programs",
    "+ toggle_programs",
    "  ."
   ],
   "trigger": [
    ".",
    "button_programs",
    "."
   ],
   "count": 18,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"description\"",
    "  :",
    "+ factories",
    "- self",
    "- .",
    "- generator",
    "  .",
    "  random_str",
    "  (",
    "  100",
    "  )"
   ],
   "trigger": [
    "\"description\"",
    ":",
    "self",
    ".",
    "generator",
    ".",
    "random_str",
    "(",
    "100",
    ")"
   ],
   "count": 18,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"description\"",
    "  :",
    "+ factories",
    "- self",
    "- .",
    "  .",
    "  random_str",
    "  (",
    "  100",
    "  )",
    "  ,"
   ],
   "trigger": [
    "\"description\"",
    ":",
    "self",
    ".",
    ".",
    "random_str",
    "(",
    "100",
    ")",
    ","
   ],
   "count": 18,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "- unicode",
    "+ str"
   ],
   "trigger": [
    ".",
    "unicode"
   ],
   "count": 18,
   "accuracy": 0.9
  },
  {
   "code": [
    "  .",
    "- ControlAssessment",
    "+ Assessment"
   ],
   "trigger": [
    ".",
    "ControlAssessment"
   ],
   "count": 18,
   "accuracy": 0.9
  },
  {
   "code": [
    "  from",
    "- rekall",
    "+ rekall_lib",
    "  import",
    "  utils"
   ],
   "trigger": [
    "from",
    "rekall",
    "import",
    "utils"
   ],
   "count": 18,
   "accuracy": 0.75
  },
  {
   "code": [
    "- StringIO",
    "+ io",
    "  .",
    "  StringIO",
    "  (",
    "  )"
   ],
   "trigger": [
    "StringIO",
    ".",
    "StringIO",
    "(",
    ")"
   ],
   "count": 18,
   "accuracy": 0.6923076923076923
  },
  {
   "code": [
    "- StringIO",
    "+ io",
    "  .",
    "  )"
   ],
   "trigger": [
    "StringIO",
    ".",
    ")"
   ],
   "count": 18,
   "accuracy": 0.6923076923076923
  },
  {
   "code": [
    "  self",
    "  .",
    "- receving",
    "+ receiving"
   ],
   "trigger": [
    "self",
    ".",
    "receving"
   ],
   "count": 18,
   "accuracy": 1.0
  },
  {
   "code": [
    "  def",
    "  (",
    "  architecture_name",
    "  ,",
    "- image_path",
    "+ test_input_path",
    "  )",
    "  :"
   ],
   "trigger": [
    "def",
    "(",
    "architecture_name",
    ",",
    "image_path",
    ")",
    ":"
   ],
   "count": 18,
   "accuracy": 1.0
  },
  {
   "code": [
    "  course_name",
    "  =",
    "  .",
    "- display_number_with_default",
    "+ display_name_with_default"
   ],
   "trigger": [
    "course_name",
    "=",
    ".",
    "display_number_with_default"
   ],
   "count": 18,
   "accuracy": 1.0
  },
  {
   "code": [
    "  api_version",
    "  =",
    "- \"6.0\"",
    "+ \"6.4\""
   ],
   "trigger": [
    "api_version",
    "=",
    "\"6.0\""
   ],
   "count": 18,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"\"\"Initializes the current instance of the object (can be overridden).\"\"\"",
    "- \"\"\"Writes the contents of this object and returns the content as a dict object.\"\"\"",
    "+ \"\"\"Initializes the current instance of the object.\n        \"\"\"",
    "+ \"\"\"Writes the contents of this object and returns the content as a dict object.\n        \n        Returns:\n            (dict). the object that represents the same data as the current instance.\n        \"\"\""
   ],
   "trigger": [
    "\"\"\"Initializes",
    "the",
    "current",
    "instance",
    "of",
    "the",
    "object",
    "(can",
    "be",
    "overridden).\"\"\"",
    "\"\"\"Writes",
    "the",
    "contents",
    "of",
    "this",
    "object",
    "and",
    "returns",
    "the",
    "content",
    "as",
    "a",
    "dict",
    "object.\"\"\""
   ],
   "count": 18,
   "accuracy": 1.0
  },
  {
   "code": [
    "  :",
    "  type",
    "  :",
    "- number",
    "+ int"
   ],
   "trigger": [
    ":",
    "type",
    ":",
    "number"
   ],
   "count": 18,
   "accuracy": 0.6
  },
  {
   "code": [
    "+ log_event",
    "+ (",
    "  db",
    "  .",
    "  session",
    "- .",
    "- flush",
    "- (",
    "  )"
   ],
   "trigger": [
    "db",
    ".",
    "session",
    ".",
    "flush",
    "(",
    ")"
   ],
   "count": 17,
   "accuracy": 1.0
  },
  {
   "code": [
    "  in",
    "- xrange",
    "+ range",
    "  (",
    "  ,",
    "  )"
   ],
   "trigger": [
    "in",
    "xrange",
    "(",
    ",",
    ")"
   ],
   "count": 17,
   "accuracy": 1.0
  },
  {
   "code": [
    "  Workflow",
    "  .",
    "  recurrences",
    "+ ==",
    "+ 1",
    "- .",
    "- is_",
    "- (",
    "- True",
    "- )",
    "  ,"
   ],
   "trigger": [
    "Workflow",
    ".",
    "recurrences",
    ".",
    "is_",
    "(",
    "True",
    ")",
    ","
   ],
   "count": 17,
   "accuracy": 1.0
  },
  {
   "code": [
    "- pass",
    "+ .",
    "+ (",
    "+ )"
   ],
   "trigger": [
    "pass"
   ],
   "count": 17,
   "accuracy": 0.8095238095238095
  },
  {
   "code": [
    "+ logging",
    "  import",
    "- current_app"
   ],
   "trigger": [
    "import",
    "current_app"
   ],
   "count": 17,
   "accuracy": 0.6538461538461539
  },
  {
   "code": [
    "- unicode",
    "+ str",
    "  (",
    "  item",
    "  )"
   ],
   "trigger": [
    "unicode",
    "(",
    "item",
    ")"
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ checks",
    "  .",
    "  CheckResult",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "CheckResult",
    ")"
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "- grad",
    "+ autodiff"
   ],
   "trigger": [
    "grad"
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "- collector",
    "+ source",
    "  )"
   ],
   "trigger": [
    "collector",
    ")"
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "- api_call_renderers",
    "+ http_api",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "api_call_renderers",
    ".",
    "(",
    ")"
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "- MonsoonError",
    "+ Error",
    "  ("
   ],
   "trigger": [
    "MonsoonError",
    "("
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "- DataStoreTest",
    "+ _DataStoreTest",
    "  )"
   ],
   "trigger": [
    "DataStoreTest",
    ")"
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"aff4:/flows/W:Stats\"",
    "+ \"Stats\""
   ],
   "trigger": [
    "\"aff4:/flows/W:Stats\""
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  KnowledgeBase",
    "  (",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "=",
    "rdfvalue",
    ".",
    "KnowledgeBase",
    "(",
    ")"
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "- unicode",
    "+ str",
    "  (",
    "  .",
    "  )"
   ],
   "trigger": [
    "return",
    "unicode",
    "(",
    ".",
    ")"
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  client_id",
    "  )"
   ],
   "trigger": [
    "return",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "client_id",
    ")"
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "  self",
    "  .",
    "- _IncludeTypeInfoIfNeeded",
    "+ _IncludeTypeInfo",
    "  (",
    "  ,",
    "  value",
    "  )"
   ],
   "trigger": [
    "return",
    "self",
    ".",
    "_IncludeTypeInfoIfNeeded",
    "(",
    ",",
    "value",
    ")"
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "  name",
    "- unicode",
    "+ str",
    "  )"
   ],
   "trigger": [
    "name",
    "unicode",
    ")"
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "  kb",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  KnowledgeBase",
    "  (",
    "  )"
   ],
   "trigger": [
    "kb",
    "=",
    "rdfvalue",
    ".",
    "KnowledgeBase",
    "(",
    ")"
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "  inet6_test3",
    "  =",
    "- 'permit 6 any 2001:4860:8000::/33'",
    "+ 'permit tcp any 2001:4860:8000::/33'"
   ],
   "trigger": [
    "inet6_test3",
    "=",
    "'permit",
    "6",
    "any",
    "2001:4860:8000::/33'"
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "- MOUNTAIN_LION_OR_LATER",
    "- (",
    "  self",
    "  .",
    "- profile",
    "+ GetParameter",
    "+ (",
    "+ \"mode_darwin_mountain_lion_plus\"",
    "  )",
    "  :"
   ],
   "trigger": [
    "if",
    "MOUNTAIN_LION_OR_LATER",
    "(",
    "self",
    ".",
    "profile",
    ")",
    ":"
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "  timesketch",
    "  .",
    "  lib",
    "  .",
    "- cypher_transpilation",
    "+ cypher",
    "  .",
    "  import"
   ],
   "trigger": [
    "from",
    "timesketch",
    ".",
    "lib",
    ".",
    "cypher_transpilation",
    ".",
    "import"
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "  for",
    "  k",
    "  ,",
    "  v",
    "  in",
    "  .",
    "- iteritems",
    "+ items",
    "  (",
    "  )",
    "  :"
   ],
   "trigger": [
    "for",
    "k",
    ",",
    "v",
    "in",
    ".",
    "iteritems",
    "(",
    ")",
    ":"
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "  def",
    "  _ignore_filter",
    "  (",
    "  cls",
    "  ,",
    "- predicate",
    "+ _",
    "  )",
    "  :"
   ],
   "trigger": [
    "def",
    "_ignore_filter",
    "(",
    "cls",
    ",",
    "predicate",
    ")",
    ":"
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "  aff4_path",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  client_id",
    "  )"
   ],
   "trigger": [
    "aff4_path",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "client_id",
    ")"
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  Filesystem"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "Filesystem"
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  client_id",
    "  )",
    "  ,"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "client_id",
    ")",
    ","
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "- unicode",
    "+ str",
    "  ("
   ],
   "trigger": [
    "(",
    "unicode",
    "("
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"\"",
    "- Reads",
    "+ Read"
   ],
   "trigger": [
    "\"\"",
    "Reads"
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "+ {",
    "- set",
    "- (",
    "- ["
   ],
   "trigger": [
    "=",
    "set",
    "(",
    "["
   ],
   "count": 16,
   "accuracy": 0.9411764705882353
  },
  {
   "code": [
    "- unicode",
    "+ str",
    "  ,"
   ],
   "trigger": [
    "unicode",
    ","
   ],
   "count": 16,
   "accuracy": 0.8888888888888888
  },
  {
   "code": [
    "- Queue",
    "+ queue"
   ],
   "trigger": [
    "Queue"
   ],
   "count": 16,
   "accuracy": 0.8888888888888888
  },
  {
   "code": [
    "  if",
    "  isinstance",
    "  (",
    "  ,",
    "- abstract",
    "+ mixin",
    "  .",
    "  )",
    "  :"
   ],
   "trigger": [
    "if",
    "isinstance",
    "(",
    ",",
    "abstract",
    ".",
    ")",
    ":"
   ],
   "count": 16,
   "accuracy": 0.8888888888888888
  },
  {
   "code": [
    "  .",
    "- unicode",
    "+ str",
    "  )"
   ],
   "trigger": [
    ".",
    "unicode",
    ")"
   ],
   "count": 16,
   "accuracy": 0.8888888888888888
  },
  {
   "code": [
    "  .",
    "- unicode",
    "+ str",
    "  ("
   ],
   "trigger": [
    ".",
    "unicode",
    "("
   ],
   "count": 16,
   "accuracy": 0.8888888888888888
  },
  {
   "code": [
    "+ from",
    "  import",
    "- logging"
   ],
   "trigger": [
    "import",
    "logging"
   ],
   "count": 16,
   "accuracy": 0.7619047619047619
  },
  {
   "code": [
    "- abstract",
    "+ abstract_utils",
    "  .",
    "  ,"
   ],
   "trigger": [
    "abstract",
    ".",
    ","
   ],
   "count": 16,
   "accuracy": 0.7272727272727273
  },
  {
   "code": [
    "  =",
    "- StringIO",
    "+ io",
    "  .",
    "  StringIO",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "StringIO",
    ".",
    "StringIO",
    "(",
    ")"
   ],
   "count": 16,
   "accuracy": 0.7272727272727273
  },
  {
   "code": [
    "- StatResponse",
    "+ StatEntry",
    "  file",
    "  ."
   ],
   "trigger": [
    "StatResponse",
    "file",
    "."
   ],
   "count": 16,
   "accuracy": 0.6666666666666666
  },
  {
   "code": [
    "  .",
    "- type_parameters",
    "+ formal_type_parameters",
    "  [",
    "  ]"
   ],
   "trigger": [
    ".",
    "type_parameters",
    "[",
    "]"
   ],
   "count": 16,
   "accuracy": 0.6666666666666666
  },
  {
   "code": [
    "  orm",
    "  .",
    "- joinedload",
    "+ subqueryload",
    "  (",
    "  )"
   ],
   "trigger": [
    "orm",
    ".",
    "joinedload",
    "(",
    ")"
   ],
   "count": 16,
   "accuracy": 0.5925925925925926
  },
  {
   "code": [
    "- notifications",
    "+ common"
   ],
   "trigger": [
    "notifications"
   ],
   "count": 16,
   "accuracy": 0.5517241379310345
  },
  {
   "code": [
    "  .",
    "- abstract",
    "+ abstract_utils",
    "  ."
   ],
   "trigger": [
    ".",
    "abstract",
    "."
   ],
   "count": 16,
   "accuracy": 0.5
  },
  {
   "code": [
    "- unicode",
    "+ str",
    "  (",
    "  .",
    "  )",
    "  )"
   ],
   "trigger": [
    "unicode",
    "(",
    ".",
    ")",
    ")"
   ],
   "count": 16,
   "accuracy": 0.4
  },
  {
   "code": [
    "  =",
    "- {",
    "- }",
    "+ .",
    "+ (",
    "+ )"
   ],
   "trigger": [
    "=",
    "{",
    "}"
   ],
   "count": 16,
   "accuracy": 0.36363636363636365
  },
  {
   "code": [
    "  (",
    "- abstract",
    "+ abstract_utils",
    "  .",
    "  )"
   ],
   "trigger": [
    "(",
    "abstract",
    ".",
    ")"
   ],
   "count": 16,
   "accuracy": 0.3076923076923077
  },
  {
   "code": [
    "  from",
    "  django",
    "  .",
    "+ urls",
    "- core",
    "- .",
    "- urlresolvers",
    "  import"
   ],
   "trigger": [
    "from",
    "django",
    ".",
    "core",
    ".",
    "urlresolvers",
    "import"
   ],
   "count": 16,
   "accuracy": 1.0
  },
  {
   "code": [
    "  resource",
    "+ ."
   ],
   "trigger": [
    "resource"
   ],
   "count": 16,
   "accuracy": 0.8888888888888888
  },
  {
   "code": [
    "- handle_post_named_example_to_collection_endpoint",
    "+ handle_post_named_example",
    "  ,"
   ],
   "trigger": [
    "handle_post_named_example_to_collection_endpoint",
    ","
   ],
   "count": 15,
   "accuracy": 1.0
  },
  {
   "code": [
    "- ThreatActor",
    "+ Threat"
   ],
   "trigger": [
    "ThreatActor"
   ],
   "count": 15,
   "accuracy": 1.0
  },
  {
   "code": [
    "- ControlAssessment",
    "+ Assessment",
    "  ,"
   ],
   "trigger": [
    "ControlAssessment",
    ","
   ],
   "count": 15,
   "accuracy": 1.0
  },
  {
   "code": [
    "  logging",
    "  .",
    "  (",
    "- %",
    "+ ,",
    "  )"
   ],
   "trigger": [
    "logging",
    ".",
    "(",
    "%",
    ")"
   ],
   "count": 15,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "- type",
    "+ isinstance",
    "  (",
    "+ ,",
    "  :"
   ],
   "trigger": [
    "if",
    "type",
    "(",
    ":"
   ],
   "count": 15,
   "accuracy": 1.0
  },
  {
   "code": [
    "  for",
    "  in",
    "- xrange",
    "+ range",
    "  (",
    "  ,",
    "  )"
   ],
   "trigger": [
    "for",
    "in",
    "xrange",
    "(",
    ",",
    ")"
   ],
   "count": 15,
   "accuracy": 1.0
  },
  {
   "code": [
    "  VERSION",
    "  =",
    "- \"0.9.7-Quince\"",
    "+ \"0.9.8-Raspberry\"",
    "  +",
    "  BUILD_NUMBER"
   ],
   "trigger": [
    "VERSION",
    "=",
    "\"0.9.7-Quince\"",
    "+",
    "BUILD_NUMBER"
   ],
   "count": 15,
   "accuracy": 1.0
  },
  {
   "code": [
    "- pass",
    "+ self",
    "+ .",
    "+ (",
    "+ )"
   ],
   "trigger": [
    "pass"
   ],
   "count": 15,
   "accuracy": 0.7142857142857143
  },
  {
   "code": [
    "- else",
    "+ elif",
    "+ is",
    "+ not",
    "+ None",
    "  :"
   ],
   "trigger": [
    "else",
    ":"
   ],
   "count": 15,
   "accuracy": 0.6818181818181818
  },
  {
   "code": [
    "- tests",
    "+ integration",
    "  .",
    "  .",
    "  ."
   ],
   "trigger": [
    "tests",
    ".",
    ".",
    "."
   ],
   "count": 15,
   "accuracy": 0.32608695652173914
  },
  {
   "code": [
    "  =",
    "- ALL_LANGUAGES",
    "+ ALL_LANGUAGES_DUPLICATE"
   ],
   "trigger": [
    "=",
    "ALL_LANGUAGES"
   ],
   "count": 15,
   "accuracy": 1.0
  },
  {
   "code": [
    "- xrange",
    "+ range",
    "  (",
    "  .",
    "  )"
   ],
   "trigger": [
    "xrange",
    "(",
    ".",
    ")"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "- unicode",
    "+ str",
    "  (",
    "  self",
    "  )"
   ],
   "trigger": [
    "unicode",
    "(",
    "self",
    ")"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ api_aff4_object_renderers",
    "  .",
    "  ApiRDFValueCollectionRendererArgs",
    "  ("
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ApiRDFValueCollectionRendererArgs",
    "("
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "- Form",
    "+ FlaskForm"
   ],
   "trigger": [
    "Form"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "- AutoStatusChangable",
    "+ AutoStatusChangeable"
   ],
   "trigger": [
    "AutoStatusChangable"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "+ print",
    "- logging",
    "- .",
    "- (",
    "  msg",
    "- )"
   ],
   "trigger": [
    "logging",
    ".",
    "(",
    "msg",
    ")"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "+ import",
    "+ mutablerecords",
    "  from",
    "  openhtf",
    "  .",
    "  util",
    "  import",
    "- data",
    "+ validators"
   ],
   "trigger": [
    "from",
    "openhtf",
    ".",
    "util",
    "import",
    "data"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "+ import",
    "  from",
    "  openhtf",
    "  .",
    "  util",
    "  import",
    "- data",
    "+ validators"
   ],
   "trigger": [
    "from",
    "openhtf",
    ".",
    "util",
    "import",
    "data"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "  value_class",
    "  =",
    "- structs",
    "+ rdf_structs",
    "  ."
   ],
   "trigger": [
    "value_class",
    "=",
    "structs",
    "."
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- assertEquals",
    "+ assertEqual",
    "  (",
    "  response",
    "  .",
    "  status_code",
    "  ,",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "assertEquals",
    "(",
    "response",
    ".",
    "status_code",
    ",",
    ")"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- assertEquals",
    "+ assertEqual",
    "  (",
    "  admin_count",
    "  ,",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "assertEquals",
    "(",
    "admin_count",
    ",",
    ")"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "  raise",
    "- MonsoonError",
    "+ Error",
    "  ("
   ],
   "trigger": [
    "raise",
    "MonsoonError",
    "("
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "  name",
    "- unicode",
    "+ str",
    "  (",
    "  )"
   ],
   "trigger": [
    "name",
    "unicode",
    "(",
    ")"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "  for",
    "  meas",
    "  in",
    "  phase",
    "  .",
    "- measurement_declarations",
    "+ measurements",
    "  .",
    "  itervalues",
    "  (",
    "  )",
    "  )",
    "  :"
   ],
   "trigger": [
    "for",
    "meas",
    "in",
    "phase",
    ".",
    "measurement_declarations",
    ".",
    "itervalues",
    "(",
    ")",
    ")",
    ":"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "  for",
    "  i",
    "  in",
    "- xrange",
    "+ range",
    "  (",
    "  )"
   ],
   "trigger": [
    "for",
    "i",
    "in",
    "xrange",
    "(",
    ")"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "  except",
    "  .",
    "- ,",
    "+ as",
    "  :"
   ],
   "trigger": [
    "except",
    ".",
    ",",
    ":"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "  @",
    "+ .",
    "- True"
   ],
   "trigger": [
    "@",
    "True"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- rdfvalue",
    "+ rdf_crypto",
    "  .",
    "  Hash",
    "  ("
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "Hash",
    "("
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- HTFConfig",
    "+ Config",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "HTFConfig",
    "(",
    ")"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "- HTFConfig",
    "+ Config"
   ],
   "trigger": [
    ".",
    "HTFConfig"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "  (",
    "- unicode",
    "+ str"
   ],
   "trigger": [
    ".",
    "(",
    "unicode"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "  ,",
    "- notification",
    "+ notifications"
   ],
   "trigger": [
    ",",
    "notification"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "- unicode",
    "+ str",
    "  (",
    "  )"
   ],
   "trigger": [
    "(",
    "unicode",
    "(",
    ")"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "- 0",
    "+ self",
    "+ ."
   ],
   "trigger": [
    "if",
    "0"
   ],
   "count": 14,
   "accuracy": 0.875
  },
  {
   "code": [
    "  .",
    "- unicode",
    "+ str",
    "  (",
    "  )"
   ],
   "trigger": [
    ".",
    "unicode",
    "(",
    ")"
   ],
   "count": 14,
   "accuracy": 0.875
  },
  {
   "code": [
    "+ from",
    "+ logging",
    "  import",
    "- logging",
    "+ getLogger"
   ],
   "trigger": [
    "import",
    "logging"
   ],
   "count": 14,
   "accuracy": 0.6666666666666666
  },
  {
   "code": [
    "- else",
    "+ elif",
    "+ obj",
    "+ is",
    "+ not",
    "+ None",
    "  :"
   ],
   "trigger": [
    "else",
    ":"
   ],
   "count": 14,
   "accuracy": 0.6363636363636364
  },
  {
   "code": [
    "- ArtifactTestHelper",
    "+ ArtifactTest",
    "  )"
   ],
   "trigger": [
    "ArtifactTestHelper",
    ")"
   ],
   "count": 14,
   "accuracy": 0.6363636363636364
  },
  {
   "code": [
    "- curses",
    "+ app",
    "  ."
   ],
   "trigger": [
    "curses",
    "."
   ],
   "count": 14,
   "accuracy": 0.5384615384615384
  },
  {
   "code": [
    "  return",
    "- unicode",
    "+ str",
    "  (",
    "  )",
    "  )"
   ],
   "trigger": [
    "return",
    "unicode",
    "(",
    ")",
    ")"
   ],
   "count": 14,
   "accuracy": 0.5333333333333333
  },
  {
   "code": [
    "  .",
    "- itervalues",
    "+ values",
    "  (",
    "  )"
   ],
   "trigger": [
    ".",
    "itervalues",
    "(",
    ")"
   ],
   "count": 14,
   "accuracy": 0.5
  },
  {
   "code": [
    "+ BasicFlowTest",
    "- test_lib",
    "- .",
    "- FlowTestsBaseclass"
   ],
   "trigger": [
    "test_lib",
    ".",
    "FlowTestsBaseclass"
   ],
   "count": 14,
   "accuracy": 0.3684210526315789
  },
  {
   "code": [
    "- spawn_xacro_model",
    "+ spawn_xacro_urdf_model",
    "  (",
    "  name",
    "  ,",
    "  block_path",
    "  ,",
    "  pose",
    "  ,",
    "  world_reference_frame",
    "  ,",
    "  mappings",
    "  )"
   ],
   "trigger": [
    "spawn_xacro_model",
    "(",
    "name",
    ",",
    "block_path",
    ",",
    "pose",
    ",",
    "world_reference_frame",
    ",",
    "mappings",
    ")"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "- deployed_service_new_health_report",
    "+ deployed_service_package_new_health_report",
    "  =",
    "- \"DeployedServiceNewHealthReport\"",
    "+ \"DeployedServicePackageNewHealthReport\"",
    "- deployed_service_health_report_expired",
    "+ deployed_service_package_health_report_expired",
    "  =",
    "- \"DeployedServiceHealthReportExpired\"",
    "+ \"DeployedServicePackageHealthReportExpired\""
   ],
   "trigger": [
    "deployed_service_new_health_report",
    "=",
    "\"DeployedServiceNewHealthReport\"",
    "deployed_service_health_report_expired",
    "=",
    "\"DeployedServiceHealthReportExpired\""
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "- attempted",
    "+ first_attempted",
    "  ="
   ],
   "trigger": [
    "attempted",
    "="
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "+ self",
    "+ .",
    "+ task_planner",
    "+ .",
    "+ execute_task",
    "+ (",
    "  self",
    "  .",
    "  task_planner",
    "  .",
    "  create_main_loop_task",
    "- (",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "task_planner",
    ".",
    "create_main_loop_task",
    "(",
    ")"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "  sys",
    "  .",
    "  exit",
    "  (",
    "- test_debug",
    "+ test_head_debug",
    "  (",
    "  )",
    "  )"
   ],
   "trigger": [
    "sys",
    ".",
    "exit",
    "(",
    "test_debug",
    "(",
    ")",
    ")"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  kind",
    "  =",
    "- 'DeployedServiceNewHealthReport'",
    "+ 'DeployedServicePackageNewHealthReport'"
   ],
   "trigger": [
    "self",
    ".",
    "kind",
    "=",
    "'DeployedServiceNewHealthReport'"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  kind",
    "  =",
    "- 'DeployedServiceHealthReportExpired'",
    "+ 'DeployedServicePackageHealthReportExpired'"
   ],
   "trigger": [
    "self",
    ".",
    "kind",
    "=",
    "'DeployedServiceHealthReportExpired'"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "  rospy",
    "  .",
    "  sleep",
    "  (",
    "- 0.1",
    "+ 0.4",
    "  )"
   ],
   "trigger": [
    "rospy",
    ".",
    "sleep",
    "(",
    "0.1",
    ")"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "  print",
    "  (",
    "- \"Exiting example.\"",
    "+ \"Finished.\"",
    "  )"
   ],
   "trigger": [
    "print",
    "(",
    "\"Exiting",
    "example.\"",
    ")"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "  api_version",
    "  =",
    "- \"6.1\"",
    "+ \"6.2\""
   ],
   "trigger": [
    "api_version",
    "=",
    "\"6.1\""
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "  COPYRIGHT_YEAR",
    "  =",
    "- \"2017\"",
    "+ datetime",
    "+ .",
    "+ date",
    "+ .",
    "+ today",
    "+ (",
    "+ )",
    "+ .",
    "+ year"
   ],
   "trigger": [
    "COPYRIGHT_YEAR",
    "=",
    "\"2017\""
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "  +",
    "- '. This may be a problem due incorrect expected ordering.'",
    "+ '. This may be a problem due incorrect expected ordering. '",
    "+ 'I.e (\"delete\", \"show\", \"list\") != (\"show\", \"delete\", \"list\")'",
    "  )",
    "  )"
   ],
   "trigger": [
    "+",
    "'.",
    "This",
    "may",
    "be",
    "a",
    "problem",
    "due",
    "incorrect",
    "expected",
    "ordering.'",
    ")",
    ")"
   ],
   "count": 14,
   "accuracy": 1.0
  },
  {
   "code": [
    "- 404",
    "+ 302"
   ],
   "trigger": [
    "404"
   ],
   "count": 14,
   "accuracy": 0.7
  },
  {
   "code": [
    "- Transaction",
    "+ SectionObjective"
   ],
   "trigger": [
    "Transaction"
   ],
   "count": 13,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"directive_id\"",
    "+ \"directive\""
   ],
   "trigger": [
    "\"directive_id\""
   ],
   "count": 13,
   "accuracy": 1.0
  },
  {
   "code": [
    "  models",
    "  .",
    "- ControlAssessment",
    "+ Assessment"
   ],
   "trigger": [
    "models",
    ".",
    "ControlAssessment"
   ],
   "count": 13,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "- type",
    "+ isinstance",
    "  (",
    "+ ,",
    "- is",
    "  :"
   ],
   "trigger": [
    "if",
    "type",
    "(",
    "is",
    ":"
   ],
   "count": 13,
   "accuracy": 1.0
  },
  {
   "code": [
    "  for",
    "  in",
    "- xrange",
    "+ range",
    "  (",
    "  ,",
    "  )",
    "  :"
   ],
   "trigger": [
    "for",
    "in",
    "xrange",
    "(",
    ",",
    ")",
    ":"
   ],
   "count": 13,
   "accuracy": 1.0
  },
  {
   "code": [
    "  CustomAttributable",
    "  ,",
    "- Documentable",
    "+ EvidenceURL",
    "  ,",
    "  Commentable",
    "  ,",
    "  Personable",
    "  ,"
   ],
   "trigger": [
    "CustomAttributable",
    ",",
    "Documentable",
    ",",
    "Commentable",
    ",",
    "Personable",
    ","
   ],
   "count": 13,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- get_importables",
    "+ get_exportables",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "get_importables",
    "(",
    ")"
   ],
   "count": 13,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "  ggrc",
    "  .",
    "  models",
    "  .",
    "  object_document",
    "  import",
    "- Documentable",
    "+ EvidenceURL"
   ],
   "trigger": [
    "from",
    "ggrc",
    ".",
    "models",
    ".",
    "object_document",
    "import",
    "Documentable"
   ],
   "count": 13,
   "accuracy": 0.9285714285714286
  },
  {
   "code": [
    "- SkipTest",
    "+ ."
   ],
   "trigger": [
    "SkipTest"
   ],
   "count": 13,
   "accuracy": 0.8666666666666667
  },
  {
   "code": [
    "  .",
    "- get_importables",
    "+ get_exportables"
   ],
   "trigger": [
    ".",
    "get_importables"
   ],
   "count": 13,
   "accuracy": 0.8666666666666667
  },
  {
   "code": [
    "- query",
    "+ query_name",
    "  ="
   ],
   "trigger": [
    "query",
    "="
   ],
   "count": 13,
   "accuracy": 0.52
  },
  {
   "code": [
    "  (",
    "- str",
    "+ basestring",
    "  )"
   ],
   "trigger": [
    "(",
    "str",
    ")"
   ],
   "count": 13,
   "accuracy": 0.24528301886792453
  },
  {
   "code": [
    "- 0",
    "+ 1"
   ],
   "trigger": [
    "0"
   ],
   "count": 13,
   "accuracy": 0.21367521367521367
  },
  {
   "code": [
    "  self",
    "  .",
    "  assertRedirects",
    "  (",
    "  response",
    "  ,",
    "- \"/\"",
    "+ \"/login\"",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "assertRedirects",
    "(",
    "response",
    ",",
    "\"/\"",
    ")"
   ],
   "count": 13,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  assertContains",
    "  (",
    "  resp",
    "  ,",
    "- u\"You can keep working for a higher grade\"",
    "+ u\"You can continue working on the course.\"",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "assertContains",
    "(",
    "resp",
    ",",
    "u\"You",
    "can",
    "keep",
    "working",
    "for",
    "a",
    "higher",
    "grade\"",
    ")"
   ],
   "count": 13,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  assertContains",
    "  (",
    "  noshib_response",
    "  ,",
    "  <missing ')'>",
    "  (",
    "- u\"Sign in or Register | {platform_name}\"",
    "+ u\"Sign in or Register {platform_name}\"",
    "  <missing ')'>"
   ],
   "trigger": [
    "self",
    ".",
    "assertContains",
    "(",
    "noshib_response",
    ",",
    "<missing",
    "')'>",
    "(",
    "u\"Sign",
    "in",
    "or",
    "Register",
    "|",
    "{platform_name}\"",
    "<missing",
    "')'>"
   ],
   "count": 13,
   "accuracy": 1.0
  },
  {
   "code": [
    "  course_org_filter",
    "  =",
    "  configuration_helpers",
    "  .",
    "- get_current_site_orgs",
    "+ get_value",
    "  (",
    "+ 'course_org_filter'",
    "  )"
   ],
   "trigger": [
    "course_org_filter",
    "=",
    "configuration_helpers",
    ".",
    "get_current_site_orgs",
    "(",
    ")"
   ],
   "count": 13,
   "accuracy": 1.0
  },
  {
   "code": [
    "  choices",
    "  =",
    "  settings",
    "  .",
    "- ALL_LANGUAGES",
    "+ ALL_LANGUAGES_DUPLICATE",
    "  ,"
   ],
   "trigger": [
    "choices",
    "=",
    "settings",
    ".",
    "ALL_LANGUAGES",
    ","
   ],
   "count": 13,
   "accuracy": 1.0
  },
  {
   "code": [
    "  :",
    "- \"('registration/password_reset_done.html', [])\"",
    "+ .",
    "+ format",
    "+ (",
    "+ bad_email",
    "+ )",
    "  ,"
   ],
   "trigger": [
    ":",
    "\"('registration/password_reset_done.html',",
    "[])\"",
    ","
   ],
   "count": 13,
   "accuracy": 1.0
  },
  {
   "code": [
    "  'httponly'",
    "  :",
    "- None",
    "+ True",
    "  ,"
   ],
   "trigger": [
    "'httponly'",
    ":",
    "None",
    ","
   ],
   "count": 13,
   "accuracy": 1.0
  },
  {
   "code": [
    "- xrange",
    "+ range",
    "  (",
    "  self",
    "  .",
    "  )"
   ],
   "trigger": [
    "xrange",
    "(",
    "self",
    ".",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- xrange",
    "+ range",
    "  (",
    "  0",
    "  ,"
   ],
   "trigger": [
    "xrange",
    "(",
    "0",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- xrange",
    "+ range",
    "  (",
    "  0",
    "  ,",
    "  )"
   ],
   "trigger": [
    "xrange",
    "(",
    "0",
    ",",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- unicode",
    "+ str",
    "  (",
    "  self",
    "  .",
    "  )"
   ],
   "trigger": [
    "unicode",
    "(",
    "self",
    ".",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- typing",
    "+ typing_overlay",
    "  .",
    "  NoReturn",
    "  )",
    "  :"
   ],
   "trigger": [
    "typing",
    ".",
    "NoReturn",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- tag_data",
    "+ encoded_tag",
    "  =",
    "  None"
   ],
   "trigger": [
    "tag_data",
    "=",
    "None"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ stats",
    "  .",
    "  MetricMetadata",
    "  .",
    "  ValueType",
    "  .",
    "  STR",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "MetricMetadata",
    ".",
    "ValueType",
    ".",
    "STR",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ stats",
    "  .",
    "  MetricMetadata",
    "  .",
    "  ValueType",
    "  .",
    "  INT",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "MetricMetadata",
    ".",
    "ValueType",
    ".",
    "INT",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ stats",
    "  .",
    "  MetricMetadata",
    "  .",
    "  ValueType",
    "  .",
    "  DISTRIBUTION",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "MetricMetadata",
    ".",
    "ValueType",
    ".",
    "DISTRIBUTION",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_standard",
    "  .",
    "  DomainEmailAddress",
    "  (",
    "  \"klm@localhost\"",
    "  )",
    "  ]"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "DomainEmailAddress",
    "(",
    "\"klm@localhost\"",
    ")",
    "]"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  EmbeddedRDFValue",
    "  (",
    "  payload",
    "  =",
    "  rdf_value",
    "  )",
    "  )",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "EmbeddedRDFValue",
    "(",
    "payload",
    "=",
    "rdf_value",
    ")",
    ")",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  DataBlob",
    "  (",
    "  string",
    "  =",
    "  \"test%s\"",
    "  %",
    "  i",
    "  )",
    "  ,"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "DataBlob",
    "(",
    "string",
    "=",
    "\"test%s\"",
    "%",
    "i",
    ")",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  REGISTRY",
    "  ]",
    "  =",
    "  test_lib",
    "  .",
    "  FakeRegistryVFSHandler"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    "REGISTRY",
    "]",
    "=",
    "test_lib",
    ".",
    "FakeRegistryVFSHandler"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  OS",
    "  ]",
    "  =",
    "  test_lib",
    "  .",
    "  FakeTestDataVFSHandler"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    "OS",
    "]",
    "=",
    "test_lib",
    ".",
    "FakeTestDataVFSHandler"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  OS",
    "  ]",
    "  =",
    "  test_lib",
    "  .",
    "  ClientVFSHandlerFixture"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    "OS",
    "]",
    "=",
    "test_lib",
    ".",
    "ClientVFSHandlerFixture"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  OS",
    "  )",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    "OS",
    ")",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  MEMORY",
    "  ]",
    "  =",
    "  test_lib",
    "  .",
    "  FakeTestDataVFSHandler"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    "MEMORY",
    "]",
    "=",
    "test_lib",
    ".",
    "FakeTestDataVFSHandler"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  (",
    "  **",
    "  statement",
    "  [",
    "  1",
    "  ]",
    "  )",
    "  ,"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec",
    "(",
    "**",
    "statement",
    "[",
    "1",
    "]",
    ")",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  (",
    "  )",
    "  ]",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "PathSpec",
    "(",
    ")",
    "]",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_foreman",
    "  .",
    "  ForemanAttributeInteger",
    "  .",
    "  Operator",
    "  .",
    "  GREATER_THAN",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ForemanAttributeInteger",
    ".",
    "Operator",
    ".",
    "GREATER_THAN",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  SignedMessageList",
    "  .",
    "  CompressionType",
    "  .",
    "  ZCOMPRESSION",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "SignedMessageList",
    ".",
    "CompressionType",
    ".",
    "ZCOMPRESSION",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrStatus",
    "  (",
    "  )",
    "  ,"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrStatus",
    "(",
    ")",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  AuthorizationState",
    "  .",
    "  UNAUTHENTICATED",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "AuthorizationState",
    ".",
    "UNAUTHENTICATED",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  AuthorizationState",
    "  .",
    "  DESYNCHRONIZED",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "AuthorizationState",
    ".",
    "DESYNCHRONIZED",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  AuthorizationState",
    "  .",
    "  AUTHENTICATED",
    "  )",
    "  :"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "AuthorizationState",
    ".",
    "AUTHENTICATED",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  Flow",
    "  .",
    "  State",
    "  .",
    "  TERMINATED",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "Flow",
    ".",
    "State",
    ".",
    "TERMINATED",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  Flow",
    "  .",
    "  State",
    "  .",
    "  RUNNING",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "Flow",
    ".",
    "State",
    ".",
    "RUNNING",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  Flow",
    "  .",
    "  State",
    "  .",
    "  ERROR",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "Flow",
    ".",
    "State",
    ".",
    "ERROR",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatFSRequest",
    "  ("
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "StatFSRequest",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry",
    "  objects",
    "  for",
    "  each",
    "  <missing 'in'>",
    "  found",
    "  <missing ':'>",
    "  file",
    "  ."
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "StatEntry",
    "objects",
    "for",
    "each",
    "<missing",
    "'in'>",
    "found",
    "<missing",
    "':'>",
    "file",
    "."
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry",
    "  .",
    "  RegistryType",
    "  .",
    "  REG_MULTI_SZ",
    "  )",
    "  ,"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "StatEntry",
    ".",
    "RegistryType",
    ".",
    "REG_MULTI_SZ",
    ")",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  KnowledgeBaseUser",
    "  or",
    "  None"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "KnowledgeBaseUser",
    "or",
    "None"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  KnowledgeBase",
    "  (",
    "  os",
    "  =",
    "  \"Windows\"",
    "  )",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "KnowledgeBase",
    "(",
    "os",
    "=",
    "\"Windows\"",
    ")",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  FingerprintResponse",
    "  ,"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "FingerprintResponse",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  EchoRequest",
    "  (",
    "  data",
    "  =",
    "  \"test\"",
    "  )",
    "  ,"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "EchoRequest",
    "(",
    "data",
    "=",
    "\"test\"",
    ")",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  .",
    "  Validate",
    "  (",
    "  msg",
    "  .",
    "  source",
    "  )",
    "  )",
    "  :"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ClientURN",
    ".",
    "Validate",
    "(",
    "msg",
    ".",
    "source",
    ")",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  self",
    "  .",
    "  client_id",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "self",
    ".",
    "client_id",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  client_name",
    "  )",
    "  .",
    "  Add",
    "  (",
    "  \"b2\"",
    "  )",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "client_name",
    ")",
    ".",
    "Add",
    "(",
    "\"b2\"",
    ")",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  client_name",
    "  )",
    "  .",
    "  Add",
    "  (",
    "  \"b\"",
    "  )",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "client_name",
    ")",
    ".",
    "Add",
    "(",
    "\"b\"",
    ")",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ output_plugin",
    "  .",
    "  OutputPluginDescriptor",
    "  (",
    "- rdfvalue",
    "+ output_plugin",
    "  .",
    "  OutputPluginDescriptor",
    "  ("
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "OutputPluginDescriptor",
    "(",
    "rdfvalue",
    ".",
    "OutputPluginDescriptor",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ output_plugin",
    "  .",
    "  OutputPluginDescriptor",
    "  (",
    "  plugin_name",
    "  =",
    "  \"CSVOutputPlugin\"",
    "  )",
    "  ]",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "OutputPluginDescriptor",
    "(",
    "plugin_name",
    "=",
    "\"CSVOutputPlugin\"",
    ")",
    "]",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ implementation",
    "  .",
    "  HuntRunnerArgs",
    "  (",
    "  )",
    "  ,",
    "  id",
    "  =",
    "  self",
    "  .",
    "  id",
    "  ,"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "HuntRunnerArgs",
    "(",
    ")",
    ",",
    "id",
    "=",
    "self",
    ".",
    "id",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ hunts_standard",
    "  .",
    "  ModifyHuntFlowArgs",
    "  (",
    "  )",
    "  )",
    "  .",
    "  ParseArgs",
    "  (",
    "  request",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ModifyHuntFlowArgs",
    "(",
    ")",
    ")",
    ".",
    "ParseArgs",
    "(",
    "request",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ grr_rdf",
    "  .",
    "  CronJobRunStatus",
    "  .",
    "  Status",
    "  .",
    "  OK",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "CronJobRunStatus",
    ".",
    "Status",
    ".",
    "OK",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ grr_rdf",
    "  .",
    "  CronJobRunStatus",
    "  .",
    "  Status",
    "  .",
    "  ERROR",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "CronJobRunStatus",
    ".",
    "Status",
    ".",
    "ERROR",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ flow",
    "  .",
    "  AuditEvent",
    "  ("
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "AuditEvent",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ export",
    "  .",
    "  ExportOptions",
    "  ,",
    "  args",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ExportOptions",
    ",",
    "args",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ artifact_lib",
    "  .",
    "  ArtifactCollectorFlowArgs",
    "  .",
    "  Dependency",
    "  .",
    "  USE_CACHED",
    "  )",
    "  and",
    "  ("
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ArtifactCollectorFlowArgs",
    ".",
    "Dependency",
    ".",
    "USE_CACHED",
    ")",
    "and",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ aff4_plugin",
    "  .",
    "  ApiAff4IndexRendererArgs",
    "  (",
    "  aff4_path",
    "  =",
    "  \"tmp/foo\"",
    "  )",
    "  ,"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ApiAff4IndexRendererArgs",
    "(",
    "aff4_path",
    "=",
    "\"tmp/foo\"",
    ")",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- pretty_name",
    "+ title_from_camelcase"
   ],
   "trigger": [
    "pretty_name"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- flow",
    "+ flow_runner",
    "  .",
    "  FlowRunnerArgs",
    "  (",
    "  flow_name",
    "  =",
    "  self",
    "  .",
    "  flow_name",
    "  )",
    "  ,"
   ],
   "trigger": [
    "flow",
    ".",
    "FlowRunnerArgs",
    "(",
    "flow_name",
    "=",
    "self",
    ".",
    "flow_name",
    ")",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- artifact_lib",
    "+ artifact_registry",
    "  .",
    "  ArtifactRegistry",
    "  .",
    "  artifacts",
    "  =",
    "  self",
    "  .",
    "  original_artifact_reg"
   ],
   "trigger": [
    "artifact_lib",
    ".",
    "ArtifactRegistry",
    ".",
    "artifacts",
    "=",
    "self",
    ".",
    "original_artifact_reg"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- artifact_lib",
    "+ artifact_registry",
    "  .",
    "  ArtifactRegistry",
    "  .",
    "  RegisterArtifact",
    "  ("
   ],
   "trigger": [
    "artifact_lib",
    ".",
    "ArtifactRegistry",
    ".",
    "RegisterArtifact",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- artifact_lib",
    "+ artifact_registry",
    "  .",
    "  ArtifactRegistry",
    "  .",
    "  ClearRegistry",
    "  (",
    "  )"
   ],
   "trigger": [
    "artifact_lib",
    ".",
    "ArtifactRegistry",
    ".",
    "ClearRegistry",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- api_call_renderers",
    "+ http_api",
    "  .",
    "  RenderHttpResponse",
    "  (",
    "  request",
    "  )"
   ],
   "trigger": [
    "api_call_renderers",
    ".",
    "RenderHttpResponse",
    "(",
    "request",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- aff4",
    "+ users",
    "  .",
    "  GRRUser",
    "  .",
    "  SYSTEM_USERS",
    "  .",
    "  remove",
    "  (",
    "  \"test\"",
    "  )"
   ],
   "trigger": [
    "aff4",
    ".",
    "GRRUser",
    ".",
    "SYSTEM_USERS",
    ".",
    "remove",
    "(",
    "\"test\"",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- aff4",
    "+ collections",
    "  .",
    "  PackedVersionedCollection",
    "  .",
    "  AddToCollection",
    "  ("
   ],
   "trigger": [
    "aff4",
    ".",
    "PackedVersionedCollection",
    ".",
    "AddToCollection",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- _check_response",
    "+ _check_csv_response",
    "  (",
    "  response",
    "  ,",
    "  )"
   ],
   "trigger": [
    "_check_response",
    "(",
    "response",
    ",",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  GrrRekallSession",
    "  (",
    "  session",
    "  .",
    "- InteractiveSession",
    "+ Session",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "GrrRekallSession",
    "(",
    "session",
    ".",
    "InteractiveSession",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- DataStoreTest",
    "+ _DataStoreTest",
    "  )",
    "  :"
   ],
   "trigger": [
    "DataStoreTest",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- Constructs",
    "+ Construct",
    "  an",
    "  instance",
    "  ."
   ],
   "trigger": [
    "Constructs",
    "an",
    "instance",
    "."
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"end=3600000000&start=42000000\"",
    "+ \"start=42000000&end=3600000000\"",
    "  )"
   ],
   "trigger": [
    "\"end=3600000000&start=42000000\"",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"email\"",
    "+ email_plugin",
    "+ .",
    "+ EmailOutputPlugin",
    "+ .",
    "+ name",
    "  ,"
   ],
   "trigger": [
    "\"email\"",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"aff4:/flows/W:TransferStore\"",
    "+ \"TransferStore\""
   ],
   "trigger": [
    "\"aff4:/flows/W:TransferStore\""
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"Owner\"",
    "+ \"Manager\""
   ],
   "trigger": [
    "\"Owner\""
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"FingerprintFile\"",
    "+ \"HashFile\"",
    "  ,",
    "  \"Grep\"",
    "  ,",
    "  \"StatFile\"",
    "  )"
   ],
   "trigger": [
    "\"FingerprintFile\"",
    ",",
    "\"Grep\"",
    ",",
    "\"StatFile\"",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"\"\"A mixin for Mongo tests.\"\"\"",
    "+ \"\"\"A mixin for Mongo tests.\n\n  NOTE: Mongo DB is deprecated, some of these tests are failing but will not be\n  fixed.\n  \"\"\""
   ],
   "trigger": [
    "\"\"\"A",
    "mixin",
    "for",
    "Mongo",
    "tests.\"\"\""
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "+ get_resource_table_singular",
    "+ (",
    "  resource_type",
    "- .",
    "- lower",
    "- (",
    "  )"
   ],
   "trigger": [
    "resource_type",
    ".",
    "lower",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  main",
    "- (",
    "- FLAGS",
    "  (",
    "  sys",
    "  .",
    "  argv",
    "  )",
    "- )"
   ],
   "trigger": [
    "main",
    "(",
    "FLAGS",
    "(",
    "sys",
    ".",
    "argv",
    ")",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  yield",
    "- rdfvalue",
    "+ webhistory",
    "  .",
    "  BrowserHistoryItem",
    "  ("
   ],
   "trigger": [
    "yield",
    "rdfvalue",
    ".",
    "BrowserHistoryItem",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  yield",
    "- rdfvalue",
    "+ rdf_webhistory",
    "  .",
    "  BrowserHistoryItem",
    "  (",
    "  yield",
    "- rdfvalue",
    "+ rdf_webhistory",
    "  .",
    "  BrowserHistoryItem",
    "  ("
   ],
   "trigger": [
    "yield",
    "rdfvalue",
    ".",
    "BrowserHistoryItem",
    "(",
    "yield",
    "rdfvalue",
    ".",
    "BrowserHistoryItem",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  yield",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict",
    "  (",
    "  test_dict",
    "  )"
   ],
   "trigger": [
    "yield",
    "rdfvalue",
    ".",
    "Dict",
    "(",
    "test_dict",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  yield",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  HardwareInfo",
    "  (",
    "  serial_number",
    "  =",
    "  serial_number",
    "  )"
   ],
   "trigger": [
    "yield",
    "rdfvalue",
    ".",
    "HardwareInfo",
    "(",
    "serial_number",
    "=",
    "serial_number",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  with",
    "  utils",
    "  .",
    "  Stubber",
    "  (",
    "- artifact_lib",
    "+ artifact_registry",
    "  ,",
    "  \"ArtifactRegistry\"",
    "  ,",
    "  ArtifactRegistryMock",
    "  )",
    "  :"
   ],
   "trigger": [
    "with",
    "utils",
    ".",
    "Stubber",
    "(",
    "artifact_lib",
    ",",
    "\"ArtifactRegistry\"",
    ",",
    "ArtifactRegistryMock",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  with",
    "  self",
    "  .",
    "  assertRaises",
    "  (",
    "- artifact_lib",
    "+ artifact_registry",
    "  .",
    "  ArtifactDefinitionError",
    "  )",
    "  :"
   ],
   "trigger": [
    "with",
    "self",
    ".",
    "assertRaises",
    "(",
    "artifact_lib",
    ".",
    "ArtifactDefinitionError",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  value_class",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage"
   ],
   "trigger": [
    "value_class",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  value",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  session_id",
    "  =",
    "  \"session\"",
    "  )"
   ],
   "trigger": [
    "value",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    "session_id",
    "=",
    "\"session\"",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  users",
    "  .",
    "  Append",
    "  (",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  User",
    "  ("
   ],
   "trigger": [
    "users",
    ".",
    "Append",
    "(",
    "rdfvalue",
    ".",
    "User",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  user",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  User",
    "  (",
    "  username",
    "  =",
    "  \"user%s\"",
    "  %",
    "  i",
    "  )"
   ],
   "trigger": [
    "user",
    "=",
    "rdfvalue",
    ".",
    "User",
    "(",
    "username",
    "=",
    "\"user%s\"",
    "%",
    "i",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  urn",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  client_id",
    "  )"
   ],
   "trigger": [
    "urn",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "client_id",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  urn",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  aff4_path",
    "  )"
   ],
   "trigger": [
    "urn",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "aff4_path",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  urn",
    "  =",
    "- \"http://www.example.com\"",
    "+ \"www.example.com\"",
    "  ,"
   ],
   "trigger": [
    "urn",
    "=",
    "\"http://www.example.com\"",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  type_info",
    "  .",
    "- ProtoNested",
    "+ ProtoEmbedded",
    "  ,",
    "  name",
    "  =",
    "  \"name\"",
    "  )"
   ],
   "trigger": [
    "type_info",
    ".",
    "ProtoNested",
    ",",
    "name",
    "=",
    "\"name\"",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  type",
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  KeyValue"
   ],
   "trigger": [
    "type",
    "=",
    "rdfvalue",
    ".",
    "KeyValue"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  type",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  Type",
    "  .",
    "  STATUS",
    "  )"
   ],
   "trigger": [
    "type",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "Type",
    ".",
    "STATUS",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  type",
    "  =",
    "- rdfvalue",
    "+ rdf_crypto",
    "  .",
    "  AES128Key"
   ],
   "trigger": [
    "type",
    "=",
    "rdfvalue",
    ".",
    "AES128Key"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  type",
    "  =",
    "- rdfvalue",
    "+ artifact_lib",
    "  .",
    "  ArtifactName"
   ],
   "trigger": [
    "type",
    "=",
    "rdfvalue",
    ".",
    "ArtifactName"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  type",
    "  =",
    "- rdfvalue",
    "+ aff4",
    "  .",
    "  AFF4Attribute"
   ],
   "trigger": [
    "type",
    "=",
    "rdfvalue",
    ".",
    "AFF4Attribute"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  typ",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataStoreCommand",
    "  .",
    "  Command",
    "  .",
    "  RESOLVE_MULTI"
   ],
   "trigger": [
    "typ",
    "=",
    "rdfvalue",
    ".",
    "DataStoreCommand",
    ".",
    "Command",
    ".",
    "RESOLVE_MULTI"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  typ",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataStoreCommand",
    "  .",
    "  Command",
    "  .",
    "  MULTI_SET"
   ],
   "trigger": [
    "typ",
    "=",
    "rdfvalue",
    ".",
    "DataStoreCommand",
    ".",
    "Command",
    ".",
    "MULTI_SET"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  typ",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataStoreCommand",
    "  .",
    "  Command",
    "  .",
    "  MULTI_RESOLVE_REGEX"
   ],
   "trigger": [
    "typ",
    "=",
    "rdfvalue",
    ".",
    "DataStoreCommand",
    ".",
    "Command",
    ".",
    "MULTI_RESOLVE_REGEX"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  token",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataStoreAuthToken",
    "  (",
    "  self",
    "  .",
    "  post_data",
    "  )"
   ],
   "trigger": [
    "token",
    "=",
    "rdfvalue",
    ".",
    "DataStoreAuthToken",
    "(",
    "self",
    ".",
    "post_data",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  token",
    "  =",
    "- rdfvalue",
    "+ access_control",
    "  .",
    "  ACLToken",
    "  (",
    "  username",
    "  =",
    "  user",
    "  )"
   ],
   "trigger": [
    "token",
    "=",
    "rdfvalue",
    ".",
    "ACLToken",
    "(",
    "username",
    "=",
    "user",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  terminator",
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  AttributedDict",
    "  (",
    "  t800",
    "  )"
   ],
   "trigger": [
    "terminator",
    "=",
    "rdfvalue",
    ".",
    "AttributedDict",
    "(",
    "t800",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  task",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  task",
    "  )"
   ],
   "trigger": [
    "task",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    "task",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  task",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  serialized",
    "  )"
   ],
   "trigger": [
    "task",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    "serialized",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  tangent",
    "  .",
    "- grad",
    "+ autodiff"
   ],
   "trigger": [
    "tangent",
    ".",
    "grad"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  supported_pathtype",
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  TSK"
   ],
   "trigger": [
    "supported_pathtype",
    "=",
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    "TSK"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  supported_pathtype",
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  REGISTRY"
   ],
   "trigger": [
    "supported_pathtype",
    "=",
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    "REGISTRY"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  subject_urn",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  self",
    "  .",
    "  subject",
    "  )",
    "  ,"
   ],
   "trigger": [
    "subject_urn",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "self",
    ".",
    "subject",
    ")",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  subject_urn",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  client_id",
    "  )",
    "  ,"
   ],
   "trigger": [
    "subject_urn",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "client_id",
    ")",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  stored_proto",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  stored_proto",
    "  )"
   ],
   "trigger": [
    "stored_proto",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    "stored_proto",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  stored_message",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  stored_message",
    "  )"
   ],
   "trigger": [
    "stored_message",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    "stored_message",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  status",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrStatus",
    "  .",
    "  ReturnedStatus",
    "  .",
    "  WORKER_STUCK",
    "  ,"
   ],
   "trigger": [
    "status",
    "=",
    "rdfvalue",
    ".",
    "GrrStatus",
    ".",
    "ReturnedStatus",
    ".",
    "WORKER_STUCK",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  stats",
    "  =",
    "- rdfvalue",
    "+ stats_rdf",
    "  .",
    "  RunningStats",
    "  (",
    "  )"
   ],
   "trigger": [
    "stats",
    "=",
    "rdfvalue",
    ".",
    "RunningStats",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  state",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  RequestState",
    "  ("
   ],
   "trigger": [
    "state",
    "=",
    "rdfvalue",
    ".",
    "RequestState",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  state",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  Flow",
    "  .",
    "  State",
    "  .",
    "  RUNNING",
    "  ,"
   ],
   "trigger": [
    "state",
    "=",
    "rdfvalue",
    ".",
    "Flow",
    ".",
    "State",
    ".",
    "RUNNING",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  state",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataServerState",
    "  (",
    "  self",
    "  .",
    "  post_data",
    "  )"
   ],
   "trigger": [
    "state",
    "=",
    "rdfvalue",
    ".",
    "DataServerState",
    "(",
    "self",
    ".",
    "post_data",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  stat_entry",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry",
    "  (",
    "  response",
    "  )"
   ],
   "trigger": [
    "stat_entry",
    "=",
    "rdfvalue",
    ".",
    "StatEntry",
    "(",
    "response",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  stat",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataServerState",
    "  (",
    "  )"
   ],
   "trigger": [
    "stat",
    "=",
    "rdfvalue",
    ".",
    "DataServerState",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  startup_info",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StartupInfo",
    "  (",
    "  message",
    "  .",
    "- args",
    "+ payload",
    "  )"
   ],
   "trigger": [
    "startup_info",
    "=",
    "rdfvalue",
    ".",
    "StartupInfo",
    "(",
    "message",
    ".",
    "args",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  st",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry",
    "  (",
    "  st",
    "  )"
   ],
   "trigger": [
    "st",
    "=",
    "rdfvalue",
    ".",
    "StatEntry",
    "(",
    "st",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  signed_message_list",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  SignedMessageList",
    "  (",
    "  timestamp",
    "  =",
    "  timestamp",
    "  )"
   ],
   "trigger": [
    "signed_message_list",
    "=",
    "rdfvalue",
    ".",
    "SignedMessageList",
    "(",
    "timestamp",
    "=",
    "timestamp",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  signed_message_list",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  SignedMessageList",
    "  (",
    "  plain",
    "  )"
   ],
   "trigger": [
    "signed_message_list",
    "=",
    "rdfvalue",
    ".",
    "SignedMessageList",
    "(",
    "plain",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  service",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  OSXServiceInformation",
    "  ("
   ],
   "trigger": [
    "service",
    "=",
    "rdfvalue",
    ".",
    "OSXServiceInformation",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  send_to_socket_action",
    "  =",
    "- rdfvalue",
    "+ memory",
    "  .",
    "  MemoryCollectorSendToSocketAction",
    "  ("
   ],
   "trigger": [
    "send_to_socket_action",
    "=",
    "rdfvalue",
    ".",
    "MemoryCollectorSendToSocketAction",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- importable",
    "+ exportable",
    "  (",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "importable",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- _ExecuteQuery",
    "+ ExecuteQuery",
    "  (",
    "  <missing ')'>"
   ],
   "trigger": [
    "self",
    ".",
    "_ExecuteQuery",
    "(",
    "<missing",
    "')'>"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  state",
    "  =",
    "  state",
    "  or",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  FlowState",
    "  (",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "state",
    "=",
    "state",
    "or",
    "rdfvalue",
    ".",
    "FlowState",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  state",
    "  .",
    "  knowledge_base",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  KnowledgeBase",
    "  (",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "state",
    ".",
    "knowledge_base",
    "=",
    "rdfvalue",
    ".",
    "KnowledgeBase",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  state",
    "  .",
    "  Register",
    "  (",
    "  \"request\"",
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ListDirRequest",
    "  ("
   ],
   "trigger": [
    "self",
    ".",
    "state",
    ".",
    "Register",
    "(",
    "\"request\"",
    ",",
    "rdfvalue",
    ".",
    "ListDirRequest",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  request_data",
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict",
    "  (",
    "  request",
    "  .",
    "  data",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "request_data",
    "=",
    "rdfvalue",
    ".",
    "Dict",
    "(",
    "request",
    ".",
    "data",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  message",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  message",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "message",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    "message",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  mapping",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataServerMapping",
    "  (",
    "  res",
    "  .",
    "  data",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "mapping",
    "=",
    "rdfvalue",
    ".",
    "DataServerMapping",
    "(",
    "res",
    ".",
    "data",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  hunt_args",
    "  =",
    "- rdfvalue",
    "+ standard",
    "  .",
    "  GenericHuntArgs",
    "  ("
   ],
   "trigger": [
    "self",
    ".",
    "hunt_args",
    "=",
    "rdfvalue",
    ".",
    "GenericHuntArgs",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  graph",
    "  =",
    "- rdfvalue",
    "+ rdf_stats",
    "  .",
    "  Graph",
    "  (",
    "  title",
    "  =",
    "  \"User activity breakdown.\"",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "graph",
    "=",
    "rdfvalue",
    ".",
    "Graph",
    "(",
    "title",
    "=",
    "\"User",
    "activity",
    "breakdown.\"",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  common_name",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  \"C.%s\"",
    "  %",
    "  ("
   ],
   "trigger": [
    "self",
    ".",
    "common_name",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "\"C.%s\"",
    "%",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  client_users",
    "  [",
    "  user",
    "  ]",
    "  =",
    "- rdfvalue",
    "+ data_server",
    "  .",
    "  DataServerClientInformation",
    "  ("
   ],
   "trigger": [
    "self",
    ".",
    "client_users",
    "[",
    "user",
    "]",
    "=",
    "rdfvalue",
    ".",
    "DataServerClientInformation",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  client_id",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  self",
    "  .",
    "  urn",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "client_id",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "self",
    ".",
    "urn",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  client_id",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  client_id",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "client_id",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "client_id",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  client_communication",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  ClientCommunication",
    "  (",
    "  req",
    "  .",
    "  data",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "client_communication",
    "=",
    "rdfvalue",
    ".",
    "ClientCommunication",
    "(",
    "req",
    ".",
    "data",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  cipher_metadata",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  CipherMetadata",
    "  (",
    "  self",
    "  .",
    "  Decrypt",
    "  ("
   ],
   "trigger": [
    "self",
    ".",
    "cipher_metadata",
    "=",
    "rdfvalue",
    ".",
    "CipherMetadata",
    "(",
    "self",
    ".",
    "Decrypt",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  cipher",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  CipherProperties",
    "  (",
    "  self",
    "  .",
    "  serialized_cipher",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "cipher",
    "=",
    "rdfvalue",
    ".",
    "CipherProperties",
    "(",
    "self",
    ".",
    "serialized_cipher",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  cfg",
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  AttributedDict",
    "  (",
    "  parsed",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "cfg",
    "=",
    "rdfvalue",
    ".",
    "AttributedDict",
    "(",
    "parsed",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  assertRaises",
    "  (",
    "  ValueError",
    "  ,",
    "- rdfvalue",
    "+ aff4_rdfvalues",
    "  .",
    "  AFF4ObjectLabel",
    "  ,",
    "  <missing ')'>"
   ],
   "trigger": [
    "self",
    ".",
    "assertRaises",
    "(",
    "ValueError",
    ",",
    "rdfvalue",
    ".",
    "AFF4ObjectLabel",
    ",",
    "<missing",
    "')'>"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  assertIsInstance",
    "  (",
    "  result",
    "  ,",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "assertIsInstance",
    "(",
    "result",
    ",",
    "rdfvalue",
    ".",
    "Dict",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  assertIsInstance",
    "  (",
    "  result",
    "  ,",
    "- rdfvalue",
    "+ rdf_anomaly",
    "  .",
    "  Anomaly",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "assertIsInstance",
    "(",
    "result",
    ",",
    "rdfvalue",
    ".",
    "Anomaly",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  _ConfigureArgParserForRdfValue",
    "  (",
    "  parser",
    "  ,",
    "- rdfvalue",
    "+ export",
    "  .",
    "  ExportOptions",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "_ConfigureArgParserForRdfValue",
    "(",
    "parser",
    ",",
    "rdfvalue",
    ".",
    "ExportOptions",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  StartHunt",
    "  (",
    "  output_plugins",
    "  =",
    "  [",
    "- rdfvalue",
    "+ output_plugin",
    "  .",
    "  OutputPluginDescriptor",
    "  (",
    "  <missing ']'>"
   ],
   "trigger": [
    "self",
    ".",
    "StartHunt",
    "(",
    "output_plugins",
    "=",
    "[",
    "rdfvalue",
    ".",
    "OutputPluginDescriptor",
    "(",
    "<missing",
    "']'>"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  CallClient",
    "  (",
    "  \"StatFile\"",
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ListDirRequest",
    "  ("
   ],
   "trigger": [
    "self",
    ".",
    "CallClient",
    "(",
    "\"StatFile\"",
    ",",
    "rdfvalue",
    ".",
    "ListDirRequest",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  search_form",
    "  ,",
    "- query",
    "+ query_name",
    "  =",
    "  )"
   ],
   "trigger": [
    "search_form",
    ",",
    "query",
    "=",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  sample",
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  RDFValueArray",
    "  (",
    "  test_list",
    "  )"
   ],
   "trigger": [
    "sample",
    "=",
    "rdfvalue",
    ".",
    "RDFValueArray",
    "(",
    "test_list",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  sample",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrStatus",
    "  (",
    "  )"
   ],
   "trigger": [
    "sample",
    "=",
    "rdfvalue",
    ".",
    "GrrStatus",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  sample",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry",
    "  (",
    "  )"
   ],
   "trigger": [
    "sample",
    "=",
    "rdfvalue",
    ".",
    "StatEntry",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  sample",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  Interface",
    "  (",
    "  )"
   ],
   "trigger": [
    "sample",
    "=",
    "rdfvalue",
    ".",
    "Interface",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  sample",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  IOSample",
    "  ("
   ],
   "trigger": [
    "sample",
    "=",
    "rdfvalue",
    ".",
    "IOSample",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  sample",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  CpuSample",
    "  ("
   ],
   "trigger": [
    "sample",
    "=",
    "rdfvalue",
    ".",
    "CpuSample",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  sample",
    "  =",
    "- rdfvalue",
    "+ filestore",
    "  .",
    "  FileStoreHash",
    "  ("
   ],
   "trigger": [
    "sample",
    "=",
    "rdfvalue",
    ".",
    "FileStoreHash",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  sample",
    "  .",
    "  registry_type",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry",
    "  .",
    "  RegistryType",
    "  .",
    "  REG_SZ"
   ],
   "trigger": [
    "sample",
    ".",
    "registry_type",
    "=",
    "rdfvalue",
    ".",
    "StatEntry",
    ".",
    "RegistryType",
    ".",
    "REG_SZ"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "- unicode",
    "+ str",
    "  (",
    "  self",
    "  )"
   ],
   "trigger": [
    "return",
    "unicode",
    "(",
    "self",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "- rdfvalue",
    "+ rdf_foreman",
    "  .",
    "  ForemanAttributeRegex",
    "  ("
   ],
   "trigger": [
    "return",
    "rdfvalue",
    ".",
    "ForemanAttributeRegex",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  AuthorizationState",
    "  .",
    "  DESYNCHRONIZED"
   ],
   "trigger": [
    "return",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "AuthorizationState",
    ".",
    "DESYNCHRONIZED"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  value",
    "  )"
   ],
   "trigger": [
    "return",
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    "value",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  data",
    "  )"
   ],
   "trigger": [
    "return",
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    "data",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataServerRebalance",
    "  (",
    "  fp",
    "  .",
    "  read",
    "  (",
    "  )",
    "  )"
   ],
   "trigger": [
    "return",
    "rdfvalue",
    ".",
    "DataServerRebalance",
    "(",
    "fp",
    ".",
    "read",
    "(",
    ")",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  FolderInformation",
    "  (",
    "  **",
    "  response",
    "  )"
   ],
   "trigger": [
    "return",
    "rdfvalue",
    ".",
    "FolderInformation",
    "(",
    "**",
    "response",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientInformation",
    "  ("
   ],
   "trigger": [
    "return",
    "rdfvalue",
    ".",
    "ClientInformation",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "- rdfvalue",
    "+ filestore",
    "  .",
    "  FileStoreHash",
    "  ("
   ],
   "trigger": [
    "return",
    "rdfvalue",
    ".",
    "FileStoreHash",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "- checks_rdf",
    "+ checks",
    "  .",
    "  Check",
    "  (",
    "  **",
    "  cfg",
    "  )"
   ],
   "trigger": [
    "return",
    "checks_rdf",
    ".",
    "Check",
    "(",
    "**",
    "cfg",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "  rdfvalue",
    "  .",
    "- Config",
    "+ AttributedDict",
    "  (",
    "  config",
    "  )"
   ],
   "trigger": [
    "return",
    "rdfvalue",
    ".",
    "Config",
    "(",
    "config",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "  not",
    "  self",
    "- ==",
    "+ .",
    "+ __eq__",
    "+ (",
    "  other",
    "+ )"
   ],
   "trigger": [
    "return",
    "not",
    "self",
    "==",
    "other"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "  [",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict",
    "  (",
    "  **",
    "  self",
    "  .",
    "  _RESPONSES",
    "  )",
    "  ]"
   ],
   "trigger": [
    "return",
    "[",
    "rdfvalue",
    ".",
    "Dict",
    "(",
    "**",
    "self",
    ".",
    "_RESPONSES",
    ")",
    "]"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "  [",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  Uname",
    "  (",
    "  <missing ']'>"
   ],
   "trigger": [
    "return",
    "[",
    "rdfvalue",
    ".",
    "Uname",
    "(",
    "<missing",
    "']'>"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "  (",
    "- unicode",
    "+ str",
    "  (",
    "  )"
   ],
   "trigger": [
    "return",
    "(",
    "unicode",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "  (",
    "  user",
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  client_id",
    "  )",
    "  )"
   ],
   "trigger": [
    "return",
    "(",
    "user",
    ",",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "client_id",
    ")",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  results",
    "  .",
    "  append",
    "  (",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  urn",
    "  )",
    "  )"
   ],
   "trigger": [
    "results",
    ".",
    "append",
    "(",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "urn",
    ")",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  result_set",
    "  =",
    "- rdfvalue",
    "+ data_store",
    "  .",
    "  ResultSet",
    "  (",
    "  )"
   ],
   "trigger": [
    "result_set",
    "=",
    "rdfvalue",
    ".",
    "ResultSet",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  result",
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  KeyValue",
    "  (",
    "  )"
   ],
   "trigger": [
    "result",
    "=",
    "rdfvalue",
    ".",
    "KeyValue",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  result",
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  EmbeddedRDFValue",
    "  (",
    "  serialized_event",
    "  )"
   ],
   "trigger": [
    "result",
    "=",
    "rdfvalue",
    ".",
    "EmbeddedRDFValue",
    "(",
    "serialized_event",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  result",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  MessageList",
    "  (",
    "  data",
    "  )"
   ],
   "trigger": [
    "result",
    "=",
    "rdfvalue",
    ".",
    "MessageList",
    "(",
    "data",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  result",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  ClientCommunication",
    "  (",
    "  )"
   ],
   "trigger": [
    "result",
    "=",
    "rdfvalue",
    ".",
    "ClientCommunication",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  result",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  User",
    "  (",
    "  username",
    "  =",
    "  \"user%s\"",
    "  %",
    "  number",
    "  )"
   ],
   "trigger": [
    "result",
    "=",
    "rdfvalue",
    ".",
    "User",
    "(",
    "username",
    "=",
    "\"user%s\"",
    "%",
    "number",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  result",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  Process",
    "  ("
   ],
   "trigger": [
    "result",
    "=",
    "rdfvalue",
    ".",
    "Process",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  result",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ExecuteResponse",
    "  ("
   ],
   "trigger": [
    "result",
    "=",
    "rdfvalue",
    ".",
    "ExecuteResponse",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  result",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ExecutePythonResponse",
    "  ("
   ],
   "trigger": [
    "result",
    "=",
    "rdfvalue",
    ".",
    "ExecutePythonResponse",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  result",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ExecuteBinaryResponse",
    "  ("
   ],
   "trigger": [
    "result",
    "=",
    "rdfvalue",
    ".",
    "ExecuteBinaryResponse",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  responses_comms",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  ClientCommunication",
    "  ("
   ],
   "trigger": [
    "responses_comms",
    "=",
    "rdfvalue",
    ".",
    "ClientCommunication",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  responses",
    "  .",
    "  append",
    "  (",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  serialized",
    "  )",
    "  )"
   ],
   "trigger": [
    "responses",
    ".",
    "append",
    "(",
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    "serialized",
    ")",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  response_msg",
    "  =",
    "- rdfvalue",
    "+ rekall_types",
    "  .",
    "  RekallResponse",
    "  ("
   ],
   "trigger": [
    "response_msg",
    "=",
    "rdfvalue",
    ".",
    "RekallResponse",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  response_comms",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  ClientCommunication",
    "  (",
    "  encrypted_response",
    "  )"
   ],
   "trigger": [
    "response_comms",
    "=",
    "rdfvalue",
    ".",
    "ClientCommunication",
    "(",
    "encrypted_response",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  response",
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict",
    "  (",
    "  )"
   ],
   "trigger": [
    "response",
    "=",
    "rdfvalue",
    ".",
    "Dict",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  response",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  MessageList",
    "  (",
    "  )"
   ],
   "trigger": [
    "response",
    "=",
    "rdfvalue",
    ".",
    "MessageList",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  response",
    "  =",
    "- rdfvalue",
    "+ rdf_data_store",
    "  .",
    "  DataStoreResponse",
    "  (",
    "  reply",
    "  )"
   ],
   "trigger": [
    "response",
    "=",
    "rdfvalue",
    ".",
    "DataStoreResponse",
    "(",
    "reply",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  response",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StartupInfo",
    "  ("
   ],
   "trigger": [
    "response",
    "=",
    "rdfvalue",
    ".",
    "StartupInfo",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  response",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  Process",
    "  (",
    "  )"
   ],
   "trigger": [
    "response",
    "=",
    "rdfvalue",
    ".",
    "Process",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  response",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  BufferReference",
    "  (",
    "  args",
    "  )"
   ],
   "trigger": [
    "response",
    "=",
    "rdfvalue",
    ".",
    "BufferReference",
    "(",
    "args",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  response",
    "  =",
    "- rdfvalue",
    "+ client",
    "  .",
    "  StatEntry",
    "  (",
    "  pathspec",
    "  =",
    "  pathspec",
    "  )"
   ],
   "trigger": [
    "response",
    "=",
    "rdfvalue",
    ".",
    "StatEntry",
    "(",
    "pathspec",
    "=",
    "pathspec",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  response",
    "  =",
    "  status",
    "  or",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrStatus",
    "  (",
    "  )"
   ],
   "trigger": [
    "response",
    "=",
    "status",
    "or",
    "rdfvalue",
    ".",
    "GrrStatus",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  response",
    "  .",
    "  status",
    "  =",
    "- rdfvalue",
    "+ rdf_data_store",
    "  .",
    "  DataStoreResponse",
    "  .",
    "  Status",
    "  .",
    "  TIMEOUT_ERROR"
   ],
   "trigger": [
    "response",
    ".",
    "status",
    "=",
    "rdfvalue",
    ".",
    "DataStoreResponse",
    ".",
    "Status",
    ".",
    "TIMEOUT_ERROR"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  response",
    "  .",
    "  status",
    "  =",
    "- rdfvalue",
    "+ rdf_data_store",
    "  .",
    "  DataStoreResponse",
    "  .",
    "  Status",
    "  .",
    "  DATA_STORE_ERROR"
   ],
   "trigger": [
    "response",
    ".",
    "status",
    "=",
    "rdfvalue",
    ".",
    "DataStoreResponse",
    ".",
    "Status",
    ".",
    "DATA_STORE_ERROR"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  resources",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientResources",
    "  (",
    "  )"
   ],
   "trigger": [
    "resources",
    "=",
    "rdfvalue",
    ".",
    "ClientResources",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  res",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  NetworkConnection",
    "  (",
    "  )"
   ],
   "trigger": [
    "res",
    "=",
    "rdfvalue",
    ".",
    "NetworkConnection",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  res",
    "  .",
    "  append",
    "  (",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry",
    "  ("
   ],
   "trigger": [
    "res",
    ".",
    "append",
    "(",
    "rdfvalue",
    ".",
    "StatEntry",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  request_state",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  RequestState",
    "  (",
    "  request_state",
    "  )"
   ],
   "trigger": [
    "request_state",
    "=",
    "rdfvalue",
    ".",
    "RequestState",
    "(",
    "request_state",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  request_comms",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  ClientCommunication",
    "  (",
    "  )"
   ],
   "trigger": [
    "request_comms",
    "=",
    "rdfvalue",
    ".",
    "ClientCommunication",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  request_comms",
    "  .",
    "  orig_request",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  HttpRequest",
    "  ("
   ],
   "trigger": [
    "request_comms",
    ".",
    "orig_request",
    "=",
    "rdfvalue",
    ".",
    "HttpRequest",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  request",
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict",
    "  (",
    "  )"
   ],
   "trigger": [
    "request",
    "=",
    "rdfvalue",
    ".",
    "Dict",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  request",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  RequestState",
    "  (",
    "  serialized",
    "  )"
   ],
   "trigger": [
    "request",
    "=",
    "rdfvalue",
    ".",
    "RequestState",
    "(",
    "serialized",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  request",
    "  =",
    "- rdfvalue",
    "+ rdf_data_store",
    "  .",
    "  DataStoreRequest",
    "  (",
    "  sync",
    "  =",
    "  sync",
    "  )"
   ],
   "trigger": [
    "request",
    "=",
    "rdfvalue",
    ".",
    "DataStoreRequest",
    "(",
    "sync",
    "=",
    "sync",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  request",
    "  =",
    "- rdfvalue",
    "+ rdf_data_store",
    "  .",
    "  DataStoreRequest",
    "  (",
    "  subject",
    "  =",
    "  subjects",
    "  )"
   ],
   "trigger": [
    "request",
    "=",
    "rdfvalue",
    ".",
    "DataStoreRequest",
    "(",
    "subject",
    "=",
    "subjects",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  request",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataStoreRegistrationRequest",
    "  (",
    "  self",
    "  .",
    "  post_data",
    "  )"
   ],
   "trigger": [
    "request",
    "=",
    "rdfvalue",
    ".",
    "DataStoreRegistrationRequest",
    "(",
    "self",
    ".",
    "post_data",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  request",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ListDirRequest",
    "  (",
    "  )"
   ],
   "trigger": [
    "request",
    "=",
    "rdfvalue",
    ".",
    "ListDirRequest",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  request",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ExecutePythonRequest",
    "  (",
    "  python_code",
    "  =",
    "  signed_blob",
    "  )"
   ],
   "trigger": [
    "request",
    "=",
    "rdfvalue",
    ".",
    "ExecutePythonRequest",
    "(",
    "python_code",
    "=",
    "signed_blob",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  request",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  BufferReference",
    "  ("
   ],
   "trigger": [
    "request",
    "=",
    "rdfvalue",
    ".",
    "BufferReference",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  reply",
    "  =",
    "- rdfvalue",
    "+ protodict",
    "  .",
    "  RDFValueArray",
    "  (",
    "  )"
   ],
   "trigger": [
    "reply",
    "=",
    "rdfvalue",
    ".",
    "RDFValueArray",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  regex_rules",
    "  =",
    "  [",
    "- rdfvalue",
    "+ rdf_foreman",
    "  .",
    "  ForemanAttributeRegex",
    "  (",
    "  <missing ']'>"
   ],
   "trigger": [
    "regex_rules",
    "=",
    "[",
    "rdfvalue",
    ".",
    "ForemanAttributeRegex",
    "(",
    "<missing",
    "']'>"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  reg_str",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry",
    "  .",
    "  RegistryType",
    "  .",
    "  REG_SZ"
   ],
   "trigger": [
    "reg_str",
    "=",
    "rdfvalue",
    ".",
    "StatEntry",
    ".",
    "RegistryType",
    ".",
    "REG_SZ"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  rebalance",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataServerRebalance",
    "  (",
    "  res",
    "  .",
    "  data",
    "  )"
   ],
   "trigger": [
    "rebalance",
    "=",
    "rdfvalue",
    ".",
    "DataServerRebalance",
    "(",
    "res",
    ".",
    "data",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  reb",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataServerRebalance",
    "  (",
    "  self",
    "  .",
    "  post_data",
    "  )"
   ],
   "trigger": [
    "reb",
    "=",
    "rdfvalue",
    ".",
    "DataServerRebalance",
    "(",
    "self",
    ".",
    "post_data",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  rdfvalue_class",
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec"
   ],
   "trigger": [
    "rdfvalue_class",
    "=",
    "rdfvalue",
    ".",
    "PathSpec"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  rdfvalue_class",
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  GlobExpression"
   ],
   "trigger": [
    "rdfvalue_class",
    "=",
    "rdfvalue",
    ".",
    "GlobExpression"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  rdfvalue_class",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  User"
   ],
   "trigger": [
    "rdfvalue_class",
    "=",
    "rdfvalue",
    ".",
    "User"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  rdf_response_message",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  message",
    "  )"
   ],
   "trigger": [
    "rdf_response_message",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    "message",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  rdf_msg",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  msg",
    "  )"
   ],
   "trigger": [
    "rdf_msg",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    "msg",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  rdf_dict",
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict",
    "  (",
    "  )"
   ],
   "trigger": [
    "rdf_dict",
    "=",
    "rdfvalue",
    ".",
    "Dict",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  queue",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  MessageList",
    "  (",
    "  )"
   ],
   "trigger": [
    "queue",
    "=",
    "rdfvalue",
    ".",
    "MessageList",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  proto_obj",
    "  =",
    "- rdfvalue",
    "+ aff4_users",
    "  .",
    "  GUISettings",
    "  (",
    "  )",
    "  ,"
   ],
   "trigger": [
    "proto_obj",
    "=",
    "rdfvalue",
    ".",
    "GUISettings",
    "(",
    ")",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  profile_folders",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  FolderInformation",
    "  (",
    "  **",
    "  folders_found",
    "  )"
   ],
   "trigger": [
    "profile_folders",
    "=",
    "rdfvalue",
    ".",
    "FolderInformation",
    "(",
    "**",
    "folders_found",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  process",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  Process",
    "  ("
   ],
   "trigger": [
    "process",
    "=",
    "rdfvalue",
    ".",
    "Process",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  priority",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  Priority",
    "  .",
    "  MEDIUM_PRIORITY",
    "  ,"
   ],
   "trigger": [
    "priority",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "Priority",
    ".",
    "MEDIUM_PRIORITY",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  priority",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  Priority",
    "  .",
    "  MEDIUM_PRIORITY",
    "  )",
    "  :"
   ],
   "trigger": [
    "priority",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "Priority",
    ".",
    "MEDIUM_PRIORITY",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  priority",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  Priority",
    "  .",
    "  LOW_PRIORITY",
    "  )"
   ],
   "trigger": [
    "priority",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "Priority",
    ".",
    "LOW_PRIORITY",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  priority",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  Priority",
    "  .",
    "  HIGH_PRIORITY",
    "  )"
   ],
   "trigger": [
    "priority",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "Priority",
    ".",
    "HIGH_PRIORITY",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  plugins",
    "  =",
    "- rdfvalue",
    "+ output_plugin",
    "  .",
    "  OutputPluginDescriptor",
    "  ("
   ],
   "trigger": [
    "plugins",
    "=",
    "rdfvalue",
    ".",
    "OutputPluginDescriptor",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  plugin_descriptor",
    "  =",
    "- rdfvalue",
    "+ output_plugin",
    "  .",
    "  OutputPluginDescriptor",
    "  ("
   ],
   "trigger": [
    "plugin_descriptor",
    "=",
    "rdfvalue",
    ".",
    "OutputPluginDescriptor",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  payload",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  ClientCommunication",
    "  (",
    "  )"
   ],
   "trigger": [
    "payload",
    "=",
    "rdfvalue",
    ".",
    "ClientCommunication",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pathtype",
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  TSK",
    "  )"
   ],
   "trigger": [
    "pathtype",
    "=",
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    "TSK",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pathtype",
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  MEMORY",
    "  ,"
   ],
   "trigger": [
    "pathtype",
    "=",
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    "MEMORY",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pathtype",
    "  =",
    "- rdfvalue",
    "+ paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  REGISTRY",
    "  ,"
   ],
   "trigger": [
    "pathtype",
    "=",
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    "REGISTRY",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pathspecs",
    "  .",
    "  append",
    "  (",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  ("
   ],
   "trigger": [
    "pathspecs",
    ".",
    "append",
    "(",
    "rdfvalue",
    ".",
    "PathSpec",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pathspec",
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  (",
    "  pathspec_pb_copy",
    "  )"
   ],
   "trigger": [
    "pathspec",
    "=",
    "rdfvalue",
    ".",
    "PathSpec",
    "(",
    "pathspec_pb_copy",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pathspec",
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  (",
    "  next_node",
    "  )"
   ],
   "trigger": [
    "pathspec",
    "=",
    "rdfvalue",
    ".",
    "PathSpec",
    "(",
    "next_node",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  path",
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  GlobExpression",
    "  (",
    "  u\"%%Users.homedir%%\\\\.ssh\"",
    "  )"
   ],
   "trigger": [
    "path",
    "=",
    "rdfvalue",
    ".",
    "GlobExpression",
    "(",
    "u\"%%Users.homedir%%\\\\.ssh\"",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  parser",
    "  =",
    "- config_file",
    "+ config_file_parsers",
    "  .",
    "  SshdConfigParser",
    "  (",
    "  )"
   ],
   "trigger": [
    "parser",
    "=",
    "config_file",
    ".",
    "SshdConfigParser",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  out_rdfvalue",
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict"
   ],
   "trigger": [
    "out_rdfvalue",
    "=",
    "rdfvalue",
    ".",
    "Dict"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  out_rdfvalue",
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  DataBlob"
   ],
   "trigger": [
    "out_rdfvalue",
    "=",
    "rdfvalue",
    ".",
    "DataBlob"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  out_rdfvalue",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  User"
   ],
   "trigger": [
    "out_rdfvalue",
    "=",
    "rdfvalue",
    ".",
    "User"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  out_rdfvalue",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  Uname"
   ],
   "trigger": [
    "out_rdfvalue",
    "=",
    "rdfvalue",
    ".",
    "Uname"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  out_rdfvalue",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  Process"
   ],
   "trigger": [
    "out_rdfvalue",
    "=",
    "rdfvalue",
    ".",
    "Process"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  out_rdfvalue",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  OSXServiceInformation"
   ],
   "trigger": [
    "out_rdfvalue",
    "=",
    "rdfvalue",
    ".",
    "OSXServiceInformation"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  out_rdfvalue",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  LogMessage",
    "  (",
    "  data",
    "  =",
    "  \"Deleted: %s\"",
    "  %",
    "  deleted",
    "  )"
   ],
   "trigger": [
    "out_rdfvalue",
    "=",
    "rdfvalue",
    ".",
    "LogMessage",
    "(",
    "data",
    "=",
    "\"Deleted:",
    "%s\"",
    "%",
    "deleted",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  out_rdfvalue",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  Interface"
   ],
   "trigger": [
    "out_rdfvalue",
    "=",
    "rdfvalue",
    ".",
    "Interface"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  out_rdfvalue",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  Filesystem"
   ],
   "trigger": [
    "out_rdfvalue",
    "=",
    "rdfvalue",
    ".",
    "Filesystem"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  out_rdfvalue",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientInformation"
   ],
   "trigger": [
    "out_rdfvalue",
    "=",
    "rdfvalue",
    ".",
    "ClientInformation"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  notification",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  Notification",
    "  ("
   ],
   "trigger": [
    "notification",
    "=",
    "rdfvalue",
    ".",
    "Notification",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  notification",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrNotification",
    "  (",
    "  session_id",
    "  =",
    "  session_id",
    "  )"
   ],
   "trigger": [
    "notification",
    "=",
    "rdfvalue",
    ".",
    "GrrNotification",
    "(",
    "session_id",
    "=",
    "session_id",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  notification",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrNotification",
    "  (",
    "  serialized_notification",
    "  )"
   ],
   "trigger": [
    "notification",
    "=",
    "rdfvalue",
    ".",
    "GrrNotification",
    "(",
    "serialized_notification",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  notification",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrNotification",
    "  (",
    "  **",
    "  kw",
    "  )"
   ],
   "trigger": [
    "notification",
    "=",
    "rdfvalue",
    ".",
    "GrrNotification",
    "(",
    "**",
    "kw",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  new_state",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  FlowState",
    "  (",
    "  )"
   ],
   "trigger": [
    "new_state",
    "=",
    "rdfvalue",
    ".",
    "FlowState",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  new_s",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  User",
    "  (",
    "  )"
   ],
   "trigger": [
    "new_s",
    "=",
    "rdfvalue",
    ".",
    "User",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  new_config",
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict",
    "  ("
   ],
   "trigger": [
    "new_config",
    "=",
    "rdfvalue",
    ".",
    "Dict",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  msg",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  ("
   ],
   "trigger": [
    "msg",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  message_type",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  Type",
    "  .",
    "  STATUS",
    "  )"
   ],
   "trigger": [
    "message_type",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "Type",
    ".",
    "STATUS",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  message_type",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  Type",
    "  .",
    "  ITERATOR",
    "  )"
   ],
   "trigger": [
    "message_type",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "Type",
    ".",
    "ITERATOR",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  message_list",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  MessageList",
    "  (",
    "  )"
   ],
   "trigger": [
    "message_list",
    "=",
    "rdfvalue",
    ".",
    "MessageList",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  message",
    "  =",
    "- rdfvalue",
    "- .",
    "- DataBlob",
    "- (",
    "  message",
    "  .",
    "+ payload",
    "- args",
    "- )",
    "  .",
    "  string"
   ],
   "trigger": [
    "message",
    "=",
    "rdfvalue",
    ".",
    "DataBlob",
    "(",
    "message",
    ".",
    "args",
    ")",
    ".",
    "string"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  message",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  serialized_message",
    "  )"
   ],
   "trigger": [
    "message",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    "serialized_message",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  message",
    "  .",
    "  auth_state",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  AuthorizationState",
    "  .",
    "  AUTHENTICATED"
   ],
   "trigger": [
    "message",
    ".",
    "auth_state",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "AuthorizationState",
    ".",
    "AUTHENTICATED"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  measurements",
    "  .",
    "  Measurement",
    "  (",
    "  measurement_name",
    "  )",
    "  .",
    "- WithUnitCode",
    "+ WithUnits",
    "  ("
   ],
   "trigger": [
    "measurements",
    ".",
    "Measurement",
    "(",
    "measurement_name",
    ")",
    ".",
    "WithUnitCode",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  mapping",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataServerMapping",
    "  (",
    "  self",
    "  .",
    "  post_data",
    "  )"
   ],
   "trigger": [
    "mapping",
    "=",
    "rdfvalue",
    ".",
    "DataServerMapping",
    "(",
    "self",
    ".",
    "post_data",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  mapping",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataServerMapping",
    "  (",
    "  mapping_str",
    "  )"
   ],
   "trigger": [
    "mapping",
    "=",
    "rdfvalue",
    ".",
    "DataServerMapping",
    "(",
    "mapping_str",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  m",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  SignedMessageList",
    "  (",
    "  )"
   ],
   "trigger": [
    "m",
    "=",
    "rdfvalue",
    ".",
    "SignedMessageList",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  m",
    "  .",
    "- SetWireFormat",
    "+ SetPrimitive",
    "  (",
    "  \"timestamp\"",
    "  ,",
    "  now",
    "  )"
   ],
   "trigger": [
    "m",
    ".",
    "SetWireFormat",
    "(",
    "\"timestamp\"",
    ",",
    "now",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  list",
    "  of",
    "- rdfvalue",
    "+ output_plugin",
    "  .",
    "  OutputPluginDescriptor",
    "  objects"
   ],
   "trigger": [
    "list",
    "of",
    "rdfvalue",
    ".",
    "OutputPluginDescriptor",
    "objects"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  layout_template",
    "  =",
    "  \"\"",
    "  \"<div class=\"",
    "- control",
    "+ form",
    "  -",
    "  group",
    "  >"
   ],
   "trigger": [
    "layout_template",
    "=",
    "\"\"",
    "\"<div",
    "class=\"",
    "control",
    "-",
    "group",
    ">"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  kb_user",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  KnowledgeBaseUser",
    "  (",
    "  )"
   ],
   "trigger": [
    "kb_user",
    "=",
    "rdfvalue",
    ".",
    "KnowledgeBaseUser",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  kb",
    "  .",
    "  users",
    "  .",
    "  Append",
    "  (",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  KnowledgeBaseUser",
    "  ("
   ],
   "trigger": [
    "kb",
    ".",
    "users",
    ".",
    "Append",
    "(",
    "rdfvalue",
    ".",
    "KnowledgeBaseUser",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  isinstance",
    "  (",
    "  v",
    "  ,",
    "- typing",
    "+ typing_overlay",
    "  .",
    "  TypeVar",
    "  )",
    "  :"
   ],
   "trigger": [
    "isinstance",
    "(",
    "v",
    ",",
    "typing",
    ".",
    "TypeVar",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  invalid",
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  AttributedDict",
    "  (",
    "  **",
    "  cfg",
    "  )"
   ],
   "trigger": [
    "invalid",
    "=",
    "rdfvalue",
    ".",
    "AttributedDict",
    "(",
    "**",
    "cfg",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  install_request",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  DriverInstallTemplate",
    "  ("
   ],
   "trigger": [
    "install_request",
    "=",
    "rdfvalue",
    ".",
    "DriverInstallTemplate",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  initial_ttl",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  )",
    "  .",
    "  task_ttl"
   ],
   "trigger": [
    "initial_ttl",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    ")",
    ".",
    "task_ttl"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  in_rdfvalue",
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  DataBlob"
   ],
   "trigger": [
    "in_rdfvalue",
    "=",
    "rdfvalue",
    ".",
    "DataBlob"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  in_rdfvalue",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  DriverInstallTemplate"
   ],
   "trigger": [
    "in_rdfvalue",
    "=",
    "rdfvalue",
    ".",
    "DriverInstallTemplate"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  result",
    "  !=",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  AuthorizationState",
    "  .",
    "  AUTHENTICATED",
    "  :"
   ],
   "trigger": [
    "if",
    "result",
    "!=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "AuthorizationState",
    ".",
    "AUTHENTICATED",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  priority",
    "  >=",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  Priority",
    "  .",
    "  HIGH_PRIORITY",
    "  :"
   ],
   "trigger": [
    "if",
    "priority",
    ">=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "Priority",
    ".",
    "HIGH_PRIORITY",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  not",
    "  isinstance",
    "  (",
    "  obj",
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry",
    "  )",
    "  :"
   ],
   "trigger": [
    "if",
    "not",
    "isinstance",
    "(",
    "obj",
    ",",
    "rdfvalue",
    ".",
    "StatEntry",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  not",
    "  isinstance",
    "  (",
    "  client_id",
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  )",
    "  :"
   ],
   "trigger": [
    "if",
    "not",
    "isinstance",
    "(",
    "client_id",
    ",",
    "rdfvalue",
    ".",
    "ClientURN",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  message_type",
    "  not",
    "  in",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  Notification",
    "  .",
    "  notification_types",
    "  :"
   ],
   "trigger": [
    "if",
    "message_type",
    "not",
    "in",
    "rdfvalue",
    ".",
    "Notification",
    ".",
    "notification_types",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  issubclass",
    "  (",
    "  result",
    "  ,",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "if",
    "issubclass",
    "(",
    "result",
    ",",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  isinstance",
    "  (",
    "  result",
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  Interface",
    "  )",
    "  :"
   ],
   "trigger": [
    "if",
    "isinstance",
    "(",
    "result",
    ",",
    "rdfvalue",
    ".",
    "Interface",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  isinstance",
    "  (",
    "  result",
    "  ,",
    "- rdfvalue",
    "+ rdf_anomaly",
    "  .",
    "  Anomaly",
    "  )",
    "  :"
   ],
   "trigger": [
    "if",
    "isinstance",
    "(",
    "result",
    ",",
    "rdfvalue",
    ".",
    "Anomaly",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  isinstance",
    "  (",
    "  result",
    "  ,",
    "- rdfvalue",
    "+ export",
    "  .",
    "  ExportedMatch",
    "  )",
    "  ]"
   ],
   "trigger": [
    "if",
    "isinstance",
    "(",
    "result",
    ",",
    "rdfvalue",
    ".",
    "ExportedMatch",
    ")",
    "]"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  isinstance",
    "  (",
    "  result",
    "  ,",
    "- rdfvalue",
    "+ export",
    "  .",
    "  ExportedFile",
    "  )",
    "  ]"
   ],
   "trigger": [
    "if",
    "isinstance",
    "(",
    "result",
    ",",
    "rdfvalue",
    ".",
    "ExportedFile",
    ")",
    "]"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  isinstance",
    "  (",
    "  response",
    "  ,",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict",
    "  )",
    "  :"
   ],
   "trigger": [
    "if",
    "isinstance",
    "(",
    "response",
    ",",
    "rdfvalue",
    ".",
    "Dict",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  isinstance",
    "  (",
    "  reply",
    "  ,",
    "- rdfvalue",
    "+ endtoend",
    "  .",
    "  EndToEndTestResult",
    "  )",
    "  :"
   ],
   "trigger": [
    "if",
    "isinstance",
    "(",
    "reply",
    ",",
    "rdfvalue",
    ".",
    "EndToEndTestResult",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  isinstance",
    "  (",
    "  queue",
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  )",
    "  :"
   ],
   "trigger": [
    "if",
    "isinstance",
    "(",
    "queue",
    ",",
    "rdfvalue",
    ".",
    "ClientURN",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  isinstance",
    "  (",
    "  persistence",
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  WindowsServiceInformation",
    "  )",
    "  :"
   ],
   "trigger": [
    "if",
    "isinstance",
    "(",
    "persistence",
    ",",
    "rdfvalue",
    ".",
    "WindowsServiceInformation",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  isinstance",
    "  (",
    "  payload",
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  FindSpec",
    "  )",
    "  :"
   ],
   "trigger": [
    "if",
    "isinstance",
    "(",
    "payload",
    ",",
    "rdfvalue",
    ".",
    "FindSpec",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  isinstance",
    "  (",
    "  fd",
    "  ,",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  RDFValueArray",
    "  )",
    "  :"
   ],
   "trigger": [
    "if",
    "isinstance",
    "(",
    "fd",
    ",",
    "rdfvalue",
    ".",
    "RDFValueArray",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  isinstance",
    "  (",
    "  address_list",
    "  ,",
    "- rdfvalue",
    "+ rdf_standard",
    "  .",
    "  DomainEmailAddress",
    "  )",
    "  :"
   ],
   "trigger": [
    "if",
    "isinstance",
    "(",
    "address_list",
    ",",
    "rdfvalue",
    ".",
    "DomainEmailAddress",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  isinstance",
    "  (",
    "  address",
    "  ,",
    "- rdfvalue",
    "+ rdf_standard",
    "  .",
    "  DomainEmailAddress",
    "  )",
    "  :"
   ],
   "trigger": [
    "if",
    "isinstance",
    "(",
    "address",
    ",",
    "rdfvalue",
    ".",
    "DomainEmailAddress",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  isinstance",
    "  (",
    "  ,",
    "- abstract",
    "+ mixin",
    "  .",
    "  Class",
    "  )",
    "  :"
   ],
   "trigger": [
    "if",
    "isinstance",
    "(",
    ",",
    "abstract",
    ".",
    "Class",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  artifact_to_parse",
    "  not",
    "  in",
    "- artifact_lib",
    "+ artifact_registry",
    "  .",
    "  ArtifactRegistry",
    "  .",
    "  artifacts",
    "  :"
   ],
   "trigger": [
    "if",
    "artifact_to_parse",
    "not",
    "in",
    "artifact_lib",
    ".",
    "ArtifactRegistry",
    ".",
    "artifacts",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  hunt_args",
    "  =",
    "- rdfvalue",
    "+ hunts_standard",
    "  .",
    "  ModifyHuntFlowArgs",
    "  ("
   ],
   "trigger": [
    "hunt_args",
    "=",
    "rdfvalue",
    ".",
    "ModifyHuntFlowArgs",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  hash_entry",
    "  =",
    "- rdfvalue",
    "+ rdf_crypto",
    "  .",
    "  Hash",
    "  ("
   ],
   "trigger": [
    "hash_entry",
    "=",
    "rdfvalue",
    ".",
    "Hash",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  grr_message",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  session_id",
    "  =",
    "  \"W:test\"",
    "  )"
   ],
   "trigger": [
    "grr_message",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    "session_id",
    "=",
    "\"W:test\"",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  grep_spec",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  GrepSpec",
    "  ("
   ],
   "trigger": [
    "grep_spec",
    "=",
    "rdfvalue",
    ".",
    "GrepSpec",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  graph",
    "  =",
    "- rdfvalue",
    "+ rdf_stats",
    "  .",
    "  Graph",
    "  (",
    "  title",
    "  =",
    "  \"%s day actives\"",
    "  %",
    "  number",
    "  )"
   ],
   "trigger": [
    "graph",
    "=",
    "rdfvalue",
    ".",
    "Graph",
    "(",
    "title",
    "=",
    "\"%s",
    "day",
    "actives\"",
    "%",
    "number",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  graph",
    "  =",
    "- aff4",
    "+ stats_aff4",
    "  .",
    "  ClientFleetStats",
    "  .",
    "  SchemaCls",
    "  .",
    "  LAST_CONTACTED_HISTOGRAM",
    "  (",
    "  )"
   ],
   "trigger": [
    "graph",
    "=",
    "aff4",
    ".",
    "ClientFleetStats",
    ".",
    "SchemaCls",
    ".",
    "LAST_CONTACTED_HISTOGRAM",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  glob_expression",
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  GlobExpression",
    "  ("
   ],
   "trigger": [
    "glob_expression",
    "=",
    "rdfvalue",
    ".",
    "GlobExpression",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "- tests",
    "+ integration",
    "  .",
    "  import",
    "  TestCase"
   ],
   "trigger": [
    "from",
    "tests",
    ".",
    "import",
    "TestCase"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "- tests",
    "+ integration",
    "  .",
    "  ggrc",
    "  import",
    "  TestCase"
   ],
   "trigger": [
    "from",
    "tests",
    ".",
    "ggrc",
    "import",
    "TestCase"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "  grr",
    "  .",
    "  lib",
    "+ .",
    "+ rdfvalues",
    "  import",
    "- rdfvalues",
    "+ registry_init"
   ],
   "trigger": [
    "from",
    "grr",
    ".",
    "lib",
    "import",
    "rdfvalues"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "  grr",
    "  .",
    "  lib",
    "  import",
    "- client_index",
    "+ queues"
   ],
   "trigger": [
    "from",
    "grr",
    ".",
    "lib",
    "import",
    "client_index"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  foreman_rule",
    "  =",
    "- rdfvalue",
    "+ rdf_foreman",
    "  .",
    "  ForemanRule",
    "  ("
   ],
   "trigger": [
    "foreman_rule",
    "=",
    "rdfvalue",
    ".",
    "ForemanRule",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  for",
    "  in",
    "- xrange",
    "+ range",
    "  (",
    "  .",
    "  )",
    "  :"
   ],
   "trigger": [
    "for",
    "in",
    "xrange",
    "(",
    ".",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  for",
    "  i",
    "  in",
    "- xrange",
    "+ range",
    "  (",
    "  )",
    "  :"
   ],
   "trigger": [
    "for",
    "i",
    "in",
    "xrange",
    "(",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  flow_runner_args",
    "  =",
    "- rdfvalue",
    "+ flow_runner",
    "  .",
    "  FlowRunnerArgs",
    "  (",
    "  flow_name",
    "  =",
    "  \"DummyLogFlow\"",
    "  )",
    "  ,"
   ],
   "trigger": [
    "flow_runner_args",
    "=",
    "rdfvalue",
    ".",
    "FlowRunnerArgs",
    "(",
    "flow_name",
    "=",
    "\"DummyLogFlow\"",
    ")",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  finding",
    "  =",
    "  [",
    "- \"Configured protocols: [2, 1]\"",
    "+ \"Configured protocols: 2,1\"",
    "  ]",
    "  ,"
   ],
   "trigger": [
    "finding",
    "=",
    "[",
    "\"Configured",
    "protocols:",
    "[2,",
    "1]\"",
    "]",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  fast_proto",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  User",
    "  (",
    "  username",
    "  =",
    "  \"user\"",
    "  )"
   ],
   "trigger": [
    "fast_proto",
    "=",
    "rdfvalue",
    ".",
    "User",
    "(",
    "username",
    "=",
    "\"user\"",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  fast_proto",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  User",
    "  (",
    "  serialized_data",
    "  )"
   ],
   "trigger": [
    "fast_proto",
    "=",
    "rdfvalue",
    ".",
    "User",
    "(",
    "serialized_data",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  fast_proto",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  User",
    "  (",
    "  serialized",
    "  )"
   ],
   "trigger": [
    "fast_proto",
    "=",
    "rdfvalue",
    ".",
    "User",
    "(",
    "serialized",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  except",
    "  (",
    "  IOError",
    "  ,",
    "- artifact_lib",
    "+ artifact_registry",
    "  .",
    "  ArtifactDefinitionError",
    "  )",
    "  as",
    "  e",
    "  :"
   ],
   "trigger": [
    "except",
    "(",
    "IOError",
    ",",
    "artifact_lib",
    ".",
    "ArtifactDefinitionError",
    ")",
    "as",
    "e",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  event",
    "  =",
    "- rdfvalue",
    "+ timeline",
    "  .",
    "  Event",
    "  (",
    "  timestamp",
    "  =",
    "  t",
    "  )"
   ],
   "trigger": [
    "event",
    "=",
    "rdfvalue",
    ".",
    "Event",
    "(",
    "timestamp",
    "=",
    "t",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  event",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StartupInfo",
    "  (",
    "  message",
    "  .",
    "  args",
    "  )"
   ],
   "trigger": [
    "event",
    "=",
    "rdfvalue",
    ".",
    "StartupInfo",
    "(",
    "message",
    ".",
    "args",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  event",
    "  .",
    "  auth_state",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  AuthorizationState",
    "  .",
    "  UNAUTHENTICATED"
   ],
   "trigger": [
    "event",
    ".",
    "auth_state",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "AuthorizationState",
    ".",
    "UNAUTHENTICATED"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  event",
    "  .",
    "  auth_state",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  .",
    "  AuthorizationState",
    "  .",
    "  AUTHENTICATED"
   ],
   "trigger": [
    "event",
    ".",
    "auth_state",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    ".",
    "AuthorizationState",
    ".",
    "AUTHENTICATED"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  elif",
    "  isinstance",
    "  (",
    "  v",
    "  ,",
    "- typing",
    "+ typing_overlay",
    "  .",
    "  )",
    "  :"
   ],
   "trigger": [
    "elif",
    "isinstance",
    "(",
    "v",
    ",",
    "typing",
    ".",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  elif",
    "  isinstance",
    "  (",
    "  result",
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  DNSClientConfiguration",
    "  )",
    "  :"
   ],
   "trigger": [
    "elif",
    "isinstance",
    "(",
    "result",
    ",",
    "rdfvalue",
    ".",
    "DNSClientConfiguration",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  dump_option",
    "  =",
    "- rdfvalue",
    "+ memory",
    "  .",
    "  MemoryCollectorDumpOption",
    "  ("
   ],
   "trigger": [
    "dump_option",
    "=",
    "rdfvalue",
    ".",
    "MemoryCollectorDumpOption",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  df",
    "  =",
    "- grad",
    "+ autodiff",
    "  ("
   ],
   "trigger": [
    "df",
    "=",
    "grad",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  deps",
    "  =",
    "- rdfvalue",
    "+ artifact_lib",
    "  .",
    "  ArtifactCollectorFlowArgs",
    "  .",
    "  Dependency",
    "  .",
    "  IGNORE_DEPS"
   ],
   "trigger": [
    "deps",
    "=",
    "rdfvalue",
    ".",
    "ArtifactCollectorFlowArgs",
    ".",
    "Dependency",
    ".",
    "IGNORE_DEPS"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  default_ttl",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  )",
    "  .",
    "  task_ttl"
   ],
   "trigger": [
    "default_ttl",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    ")",
    ".",
    "task_ttl"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  default_metadata",
    "  =",
    "- rdfvalue",
    "+ export",
    "  .",
    "  ExportedMetadata",
    "  ("
   ],
   "trigger": [
    "default_metadata",
    "=",
    "rdfvalue",
    ".",
    "ExportedMetadata",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  default_metadata",
    "  :",
    "- rdfvalue",
    "+ export",
    "  .",
    "  ExportedMetadata",
    "  instance",
    "  with",
    "  basic"
   ],
   "trigger": [
    "default_metadata",
    ":",
    "rdfvalue",
    ".",
    "ExportedMetadata",
    "instance",
    "with",
    "basic"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  default",
    "  =",
    "  rdfvalue",
    "  .",
    "  RDFURN",
    "  (",
    "- \"http://www.google.com\"",
    "+ \"www.google.com\"",
    "  )",
    "  ,"
   ],
   "trigger": [
    "default",
    "=",
    "rdfvalue",
    ".",
    "RDFURN",
    "(",
    "\"http://www.google.com\"",
    ")",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  def",
    "- EmitProtoDescriptor",
    "+ EmitProtoFileDescriptor",
    "  (",
    "  cls",
    "  ,",
    "  package_name",
    "  )",
    "  :"
   ],
   "trigger": [
    "def",
    "EmitProtoDescriptor",
    "(",
    "cls",
    ",",
    "package_name",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  decoded",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  (",
    "  value",
    "  )"
   ],
   "trigger": [
    "decoded",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    "(",
    "value",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  data_store",
    "  .",
    "  default_token",
    "  =",
    "- rdfvalue",
    "+ access_control",
    "  .",
    "  ACLToken",
    "  ("
   ],
   "trigger": [
    "data_store",
    ".",
    "default_token",
    "=",
    "rdfvalue",
    ".",
    "ACLToken",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  data",
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  RDFValueArray",
    "  (",
    "  )"
   ],
   "trigger": [
    "data",
    "=",
    "rdfvalue",
    ".",
    "RDFValueArray",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  data",
    "  =",
    "  fd",
    "  .",
    "  Read",
    "  (",
    "- length",
    "+ to_read",
    "  +",
    "  pre_padding",
    "  )"
   ],
   "trigger": [
    "data",
    "=",
    "fd",
    ".",
    "Read",
    "(",
    "length",
    "+",
    "pre_padding",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  cron_args",
    "  =",
    "- rdfvalue",
    "+ cronjobs",
    "  .",
    "  CreateCronJobFlowArgs",
    "  (",
    "  allow_overruns",
    "  =",
    "  False",
    "  ,",
    "  <missing ')'>"
   ],
   "trigger": [
    "cron_args",
    "=",
    "rdfvalue",
    ".",
    "CreateCronJobFlowArgs",
    "(",
    "allow_overruns",
    "=",
    "False",
    ",",
    "<missing",
    "')'>"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  cron_args",
    "  =",
    "- rdfvalue",
    "+ cronjobs",
    "  .",
    "  CreateCronJobFlowArgs",
    "  (",
    "  )"
   ],
   "trigger": [
    "cron_args",
    "=",
    "rdfvalue",
    ".",
    "CreateCronJobFlowArgs",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  creds",
    "  =",
    "- rdfvalue",
    "+ data_server",
    "  .",
    "  DataServerClientCredentials",
    "  (",
    "  plain",
    "  )"
   ],
   "trigger": [
    "creds",
    "=",
    "rdfvalue",
    ".",
    "DataServerClientCredentials",
    "(",
    "plain",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  crash_details",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientCrash",
    "  ("
   ],
   "trigger": [
    "crash_details",
    "=",
    "rdfvalue",
    ".",
    "ClientCrash",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  config",
    "- HTFConfig",
    "+ Config",
    "  (",
    "  )"
   ],
   "trigger": [
    "config",
    "HTFConfig",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  config",
    "  =",
    "- HTFConfig",
    "+ Config",
    "  (",
    "  )"
   ],
   "trigger": [
    "config",
    "=",
    "HTFConfig",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  component",
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  (",
    "  component_str",
    "  )"
   ],
   "trigger": [
    "component",
    "=",
    "rdfvalue",
    ".",
    "PathSpec",
    "(",
    "component_str",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  cn",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  .",
    "  FromPublicKey",
    "  (",
    "  public_key",
    "  )"
   ],
   "trigger": [
    "cn",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    ".",
    "FromPublicKey",
    "(",
    "public_key",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  cmd",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataStoreCommand",
    "  .",
    "  Command"
   ],
   "trigger": [
    "cmd",
    "=",
    "rdfvalue",
    ".",
    "DataStoreCommand",
    ".",
    "Command"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  cmd",
    "  =",
    "- rdfvalue",
    "+ rdf_data_server",
    "  .",
    "  DataStoreCommand",
    "  (",
    "  cmd_str",
    "  )"
   ],
   "trigger": [
    "cmd",
    "=",
    "rdfvalue",
    ".",
    "DataStoreCommand",
    "(",
    "cmd_str",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  cls",
    "  .",
    "  type_infos_by_encoded_tag",
    "  [",
    "  field_desc",
    "  .",
    "- tag_data",
    "+ encoded_tag",
    "  ]",
    "  =",
    "  field_desc"
   ],
   "trigger": [
    "cls",
    ".",
    "type_infos_by_encoded_tag",
    "[",
    "field_desc",
    ".",
    "tag_data",
    "]",
    "=",
    "field_desc"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client_urn",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  client_urn",
    "  )"
   ],
   "trigger": [
    "client_urn",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "client_urn",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client_urn",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  client_id",
    "  )"
   ],
   "trigger": [
    "client_urn",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "client_id",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client_urn",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  \"C.%016X\"",
    "  %",
    "  0",
    "  )"
   ],
   "trigger": [
    "client_urn",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "\"C.%016X\"",
    "%",
    "0",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client_stats",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientStats",
    "  (",
    "  )"
   ],
   "trigger": [
    "client_stats",
    "=",
    "rdfvalue",
    ".",
    "ClientStats",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client_resources",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientResources",
    "  (",
    "  )",
    "  ,"
   ],
   "trigger": [
    "client_resources",
    "=",
    "rdfvalue",
    ".",
    "ClientResources",
    "(",
    ")",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client_mock",
    "  =",
    "  ListProcessesMock",
    "  (",
    "  <missing ')'>",
    "  [",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  Process",
    "  ("
   ],
   "trigger": [
    "client_mock",
    "=",
    "ListProcessesMock",
    "(",
    "<missing",
    "')'>",
    "[",
    "rdfvalue",
    ".",
    "Process",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client_id",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  \"C.1%015d\"",
    "  %",
    "  i",
    "  )"
   ],
   "trigger": [
    "client_id",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "\"C.1%015d\"",
    "%",
    "i",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client_id",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  \"C.0000000000000001\"",
    "  )",
    "  ,"
   ],
   "trigger": [
    "client_id",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "\"C.0000000000000001\"",
    ")",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client_id",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  \"C.%016X\"",
    "  %",
    "  0",
    "  )"
   ],
   "trigger": [
    "client_id",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "\"C.%016X\"",
    "%",
    "0",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client_id",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  \"C.\"",
    "  +",
    "  \"B\"",
    "  *",
    "  16",
    "  )"
   ],
   "trigger": [
    "client_id",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "\"C.\"",
    "+",
    "\"B\"",
    "*",
    "16",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client_id",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  \"C.\"",
    "  +",
    "  \"2\"",
    "  *",
    "  16",
    "  )"
   ],
   "trigger": [
    "client_id",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "\"C.\"",
    "+",
    "\"2\"",
    "*",
    "16",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client_id",
    "  :",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  to",
    "  send",
    "  the",
    "  request",
    "  to",
    "  ."
   ],
   "trigger": [
    "client_id",
    ":",
    "rdfvalue",
    ".",
    "ClientURN",
    "to",
    "send",
    "the",
    "request",
    "to",
    "."
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  client",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  client",
    "  )"
   ],
   "trigger": [
    "client",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "client",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  VariableGenericHuntArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "VariableGenericHuntArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  UpdateVFSFileArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "UpdateVFSFileArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  UpdateSparseImageChunksArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "UpdateSparseImageChunksArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  UpdateConfigurationArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "UpdateConfigurationArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  UpdateClientArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "UpdateClientArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  UninstallArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "UninstallArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  TimelineView",
    "  (",
    "- aff4_grr",
    "+ collections",
    "  .",
    "  AFF4CollectionView",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "TimelineView",
    "(",
    "aff4_grr",
    ".",
    "AFF4CollectionView",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  TerminateFlowArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "TerminateFlowArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  StatsStoreMetricsMetadata",
    "  (",
    "- rdfvalue",
    "+ structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "StatsStoreMetricsMetadata",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  SendingFlowArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "SendingFlowArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  ScanMemoryArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "ScanMemoryArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  SampleHuntArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "SampleHuntArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  SampleGetRendererWithAdditionalArgsArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "SampleGetRendererWithAdditionalArgsArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  RunningStats",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "RunningStats",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  RunReportFlowArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "RunReportFlowArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  RecursiveListDirectoryArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "RecursiveListDirectoryArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  PathSpec",
    "  (",
    "- structs",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "PathSpec",
    "(",
    "structs",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  OutputPluginDescriptor",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "OutputPluginDescriptor",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  OnlineNotificationArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "OnlineNotificationArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  Notification",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "Notification",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  NetworkAddress",
    "  (",
    "- rdfvalue",
    "+ structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "NetworkAddress",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  MultiGetFileArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "MultiGetFileArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  ModifyHuntFlowArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "ModifyHuntFlowArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  ManageCronJobFlowArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "ManageCronJobFlowArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  MakeNewAFF4SparseImageArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "MakeNewAFF4SparseImageArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  MRUFile",
    "  (",
    "- rdfvalue",
    "+ structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "MRUFile",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  LoadMemoryDriverArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "LoadMemoryDriverArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  ListVADBinariesArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "ListVADBinariesArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  ListDirectoryArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "ListDirectoryArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  LaunchBinaryArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "LaunchBinaryArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  KnowledgeBaseInitializationArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "KnowledgeBaseInitializationArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  KeepAliveArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "KeepAliveArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  InterrogateArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "InterrogateArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  Interface",
    "  (",
    "- rdfvalue",
    "+ structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "Interface",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  IOSample",
    "  (",
    "- rdfvalue",
    "+ structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "IOSample",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  GrrStatus",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "GrrStatus",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  GrrMessage",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "GrrMessage",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  GraphSeries",
    "  (",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  RDFValueArray",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "GraphSeries",
    "(",
    "rdfvalue",
    ".",
    "RDFValueArray",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  GlobalNotificationSet",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "GlobalNotificationSet",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  GlobArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "GlobArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  GetMBRArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "GetMBRArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  GenericHuntArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "GenericHuntArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  GUISettings",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "GUISettings",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  ForemanRules",
    "  (",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  RDFValueArray",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "ForemanRules",
    "(",
    "rdfvalue",
    ".",
    "RDFValueArray",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  ForemanRule",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "ForemanRule",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  FolderInformation",
    "  (",
    "- rdfvalue",
    "+ structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "FolderInformation",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  FlowRequest",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "FlowRequest",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  FirefoxHistoryArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "FirefoxHistoryArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  FileStoreImage",
    "  (",
    "- aff4",
    "+ aff4_grr",
    "  .",
    "  VFSBlobImage",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "FileStoreImage",
    "(",
    "aff4",
    ".",
    "VFSBlobImage",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  FetchBufferForSparseImageArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "FetchBufferForSparseImageArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  FastGrrMessageList",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "FastGrrMessageList",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  ExportHuntResultsFilesAsArchiveArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "ExportHuntResultsFilesAsArchiveArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  ExecutePythonHackArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "ExecutePythonHackArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  ExecuteCommandArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "ExecuteCommandArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  EmbeddedRDFValue",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "EmbeddedRDFValue",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  DriverInstallTemplate",
    "  (",
    "- rdfvalue",
    "+ structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "DriverInstallTemplate",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  DownloadMemoryImageArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "DownloadMemoryImageArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  Distribution",
    "  (",
    "- rdfvalue",
    "+ structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "Distribution",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  DiskVolumeInfoArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "DiskVolumeInfoArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  Dict",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "Dict",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  DeleteHuntFlowArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "DeleteHuntFlowArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  CreateGenericHuntFlowArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "CreateGenericHuntFlowArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  CreateCronJobFlowArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "CreateCronJobFlowArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  ConsoleDebugFlowArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "ConsoleDebugFlowArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  CollectArtifactDependenciesArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "CollectArtifactDependenciesArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  ClientStats",
    "  (",
    "- rdfvalue",
    "+ structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "ClientStats",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  ClientResourcesStats",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "ClientResourcesStats",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  ClientActionRunnerArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "ClientActionRunnerArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  CheckHuntAccessFlowArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "CheckHuntAccessFlowArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  Certificate",
    "  (",
    "- structs",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "Certificate",
    "(",
    "structs",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  CacheGrepArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "CacheGrepArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  BufferReference",
    "  (",
    "- rdfvalue",
    "+ structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "BufferReference",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  BadArgsFlow1Args",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "BadArgsFlow1Args",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  ArtifactFallbackCollectorArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "ArtifactFallbackCollectorArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  ApiStatsStoreMetricRendererArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "ApiStatsStoreMetricRendererArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  ApiHuntSummaryRendererArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "ApiHuntSummaryRendererArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  ApiClientsRemoveLabelsRendererArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "ApiClientsRemoveLabelsRendererArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  ApiClientSummaryRendererArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "ApiClientSummaryRendererArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  ApiAff4IndexRendererArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "ApiAff4IndexRendererArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  ApiAFF4ObjectRendererArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "ApiAFF4ObjectRendererArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  AnalyzeClientMemoryArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "AnalyzeClientMemoryArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  AFF4ObjectSummary",
    "  (",
    "- rdfvalue",
    "+ structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "AFF4ObjectSummary",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  ACLToken",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "ACLToken",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  cert",
    "  =",
    "- rdfvalue",
    "+ rdf_crypto",
    "  .",
    "  Certificate",
    "  (",
    "  message",
    "  .",
    "- args",
    "+ payload",
    "  )"
   ],
   "trigger": [
    "cert",
    "=",
    "rdfvalue",
    ".",
    "Certificate",
    "(",
    "message",
    ".",
    "args",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  blob_rdf",
    "  =",
    "- rdfvalue",
    "+ rdf_crypto",
    "  .",
    "  SignedBlob",
    "  (",
    "  )"
   ],
   "trigger": [
    "blob_rdf",
    "=",
    "rdfvalue",
    ".",
    "SignedBlob",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  attribute",
    "  =",
    "- aff4",
    "+ aff4_stats",
    "  .",
    "  ClientFleetStats",
    "  .",
    "  SchemaCls",
    "  .",
    "  RELEASE_HISTOGRAM"
   ],
   "trigger": [
    "attribute",
    "=",
    "aff4",
    ".",
    "ClientFleetStats",
    ".",
    "SchemaCls",
    ".",
    "RELEASE_HISTOGRAM"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  attribute",
    "  =",
    "- aff4",
    "+ aff4_stats",
    "  .",
    "  ClientFleetStats",
    "  .",
    "  SchemaCls",
    "  .",
    "  OS_HISTOGRAM"
   ],
   "trigger": [
    "attribute",
    "=",
    "aff4",
    ".",
    "ClientFleetStats",
    ".",
    "SchemaCls",
    ".",
    "OS_HISTOGRAM"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  attribute",
    "  =",
    "- aff4",
    "+ aff4_stats",
    "  .",
    "  ClientFleetStats",
    "  .",
    "  SchemaCls",
    "  .",
    "  LAST_CONTACTED_HISTOGRAM"
   ],
   "trigger": [
    "attribute",
    "=",
    "aff4",
    ".",
    "ClientFleetStats",
    ".",
    "SchemaCls",
    ".",
    "LAST_CONTACTED_HISTOGRAM"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  attribute",
    "  =",
    "- aff4",
    "+ aff4_stats",
    "  .",
    "  ClientFleetStats",
    "  .",
    "  SchemaCls",
    "  .",
    "  GRRVERSION_HISTOGRAM"
   ],
   "trigger": [
    "attribute",
    "=",
    "aff4",
    ".",
    "ClientFleetStats",
    ".",
    "SchemaCls",
    ".",
    "GRRVERSION_HISTOGRAM"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  assert",
    "  isinstance",
    "  (",
    "  ,",
    "- typing",
    "+ typing_overlay",
    "  .",
    "  NoReturn",
    "  )"
   ],
   "trigger": [
    "assert",
    "isinstance",
    "(",
    ",",
    "typing",
    ".",
    "NoReturn",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  artifact_reg",
    "  =",
    "- artifact_lib",
    "+ artifact_registry",
    "  .",
    "  ArtifactRegistry",
    "  .",
    "  artifacts"
   ],
   "trigger": [
    "artifact_reg",
    "=",
    "artifact_lib",
    ".",
    "ArtifactRegistry",
    ".",
    "artifacts"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  artifact_obj",
    "  =",
    "- artifact_lib",
    "+ artifact_registry",
    "  .",
    "  ArtifactRegistry",
    "  .",
    "  artifacts",
    "  [",
    "  artifact_name",
    "  ]"
   ],
   "trigger": [
    "artifact_obj",
    "=",
    "artifact_lib",
    ".",
    "ArtifactRegistry",
    ".",
    "artifacts",
    "[",
    "artifact_name",
    "]"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  art_reg",
    "  =",
    "- artifact_lib",
    "+ artifact_registry",
    "  .",
    "  ArtifactRegistry",
    "  .",
    "  artifacts"
   ],
   "trigger": [
    "art_reg",
    "=",
    "artifact_lib",
    ".",
    "ArtifactRegistry",
    ".",
    "artifacts"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  argv",
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict",
    "  (",
    "  foo",
    "  =",
    "  \"bar\"",
    "  )",
    "  )"
   ],
   "trigger": [
    "argv",
    "=",
    "rdfvalue",
    ".",
    "Dict",
    "(",
    "foo",
    "=",
    "\"bar\"",
    ")",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  args_type",
    "  =",
    "- rdfvalue",
    "+ processes",
    "  .",
    "  ListProcessesArgs"
   ],
   "trigger": [
    "args_type",
    "=",
    "rdfvalue",
    ".",
    "ListProcessesArgs"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  args_type",
    "  =",
    "- rdfvalue",
    "+ artifact_lib",
    "  .",
    "  ArtifactCollectorFlowArgs"
   ],
   "trigger": [
    "args_type",
    "=",
    "rdfvalue",
    ".",
    "ArtifactCollectorFlowArgs"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  args_type",
    "  =",
    "- rdfvalue",
    "+ aff4_users",
    "  .",
    "  GlobalNotification"
   ],
   "trigger": [
    "args_type",
    "=",
    "rdfvalue",
    ".",
    "GlobalNotification"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  args_type",
    "  =",
    "- rdfvalue",
    "+ aff4_users",
    "  .",
    "  GUISettings"
   ],
   "trigger": [
    "args_type",
    "=",
    "rdfvalue",
    ".",
    "GUISettings"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  args",
    "  =",
    "- rdfvalue",
    "+ grep",
    "  .",
    "  SearchFileContentArgs",
    "  (",
    "  paths",
    "  =",
    "  [",
    "  path",
    "  ]",
    "  )"
   ],
   "trigger": [
    "args",
    "=",
    "rdfvalue",
    ".",
    "SearchFileContentArgs",
    "(",
    "paths",
    "=",
    "[",
    "path",
    "]",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  args",
    "  =",
    "- rdfvalue",
    "+ filesystem",
    "  .",
    "  RecursiveListDirectoryArgs",
    "  (",
    "  )"
   ],
   "trigger": [
    "args",
    "=",
    "rdfvalue",
    ".",
    "RecursiveListDirectoryArgs",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  args",
    "  =",
    "- rdfvalue",
    "+ endtoend",
    "  .",
    "  EndToEndTestFlowArgs",
    "  (",
    "  )"
   ],
   "trigger": [
    "args",
    "=",
    "rdfvalue",
    ".",
    "EndToEndTestFlowArgs",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  arg",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  GetClientStatsRequest",
    "  (",
    "  start_time",
    "  =",
    "  start_time",
    "  )",
    "  )"
   ],
   "trigger": [
    "arg",
    "=",
    "rdfvalue",
    ".",
    "GetClientStatsRequest",
    "(",
    "start_time",
    "=",
    "start_time",
    ")",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  arg",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  GetClientStatsRequest",
    "  (",
    "  end_time",
    "  =",
    "  end_time",
    "  )",
    "  )"
   ],
   "trigger": [
    "arg",
    "=",
    "rdfvalue",
    ".",
    "GetClientStatsRequest",
    "(",
    "end_time",
    "=",
    "end_time",
    ")",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  additional_args",
    "  =",
    "- rdfvalue",
    "+ api_call_renderers",
    "  .",
    "  ApiCallAdditionalArgs",
    "  ("
   ],
   "trigger": [
    "additional_args",
    "=",
    "rdfvalue",
    ".",
    "ApiCallAdditionalArgs",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  action_name",
    "  =",
    "- rdfvalue",
    "+ cronjobs",
    "  .",
    "  ManageCronJobFlowArgs",
    "  .",
    "  Action",
    "  .",
    "  RUN"
   ],
   "trigger": [
    "action_name",
    "=",
    "rdfvalue",
    ".",
    "ManageCronJobFlowArgs",
    ".",
    "Action",
    ".",
    "RUN"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  action_name",
    "  =",
    "- rdfvalue",
    "+ cronjobs",
    "  .",
    "  ManageCronJobFlowArgs",
    "  .",
    "  Action",
    "  .",
    "  NOOP"
   ],
   "trigger": [
    "action_name",
    "=",
    "rdfvalue",
    ".",
    "ManageCronJobFlowArgs",
    ".",
    "Action",
    ".",
    "NOOP"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  action",
    "  .",
    "  Run",
    "  (",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  GetClientStatsRequest",
    "  ("
   ],
   "trigger": [
    "action",
    ".",
    "Run",
    "(",
    "rdfvalue",
    ".",
    "GetClientStatsRequest",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  _rdf_type",
    "  =",
    "- rdfvalue",
    "+ rdf_crypto",
    "  .",
    "  SignedBlob"
   ],
   "trigger": [
    "_rdf_type",
    "=",
    "rdfvalue",
    ".",
    "SignedBlob"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  [",
    "- rdfvalue",
    "+ stats",
    "  .",
    "  MetricFieldDefinition",
    "  (",
    "  <missing ']'>"
   ],
   "trigger": [
    "[",
    "rdfvalue",
    ".",
    "MetricFieldDefinition",
    "(",
    "<missing",
    "']'>"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  [",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrNotification",
    "  (",
    "  session_id",
    "  =",
    "  session_id",
    "  )",
    "  <missing ']'>"
   ],
   "trigger": [
    "[",
    "rdfvalue",
    ".",
    "GrrNotification",
    "(",
    "session_id",
    "=",
    "session_id",
    ")",
    "<missing",
    "']'>"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  [",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry",
    "  (",
    "  pathspec",
    "  =",
    "  pathspec",
    "  )",
    "  ]",
    "  ,"
   ],
   "trigger": [
    "[",
    "rdfvalue",
    ".",
    "StatEntry",
    "(",
    "pathspec",
    "=",
    "pathspec",
    ")",
    "]",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  [",
    "- \"aff4:/flows/W:Stats\"",
    "+ \"Stats\"",
    "  ]"
   ],
   "trigger": [
    "[",
    "\"aff4:/flows/W:Stats\"",
    "]"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  WMI_CMP_SYS_PRD",
    "  =",
    "  [",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict",
    "  (",
    "  <missing ']'>"
   ],
   "trigger": [
    "WMI_CMP_SYS_PRD",
    "=",
    "[",
    "rdfvalue",
    ".",
    "Dict",
    "(",
    "<missing",
    "']'>"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  List",
    "  of",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrNotification",
    "  objects"
   ],
   "trigger": [
    "List",
    "of",
    "rdfvalue",
    ".",
    "GrrNotification",
    "objects"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  LABELS",
    "  =",
    "  Attribute",
    "  (",
    "  \"aff4:labels_list\"",
    "  ,",
    "- rdfvalue",
    "+ aff4_rdfvalues",
    "  .",
    "  AFF4ObjectLabelsList",
    "  ,",
    "  <missing ')'>"
   ],
   "trigger": [
    "LABELS",
    "=",
    "Attribute",
    "(",
    "\"aff4:labels_list\"",
    ",",
    "rdfvalue",
    ".",
    "AFF4ObjectLabelsList",
    ",",
    "<missing",
    "')'>"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  HASH",
    "  =",
    "  Attribute",
    "  (",
    "  \"aff4:hashobject\"",
    "  ,",
    "- rdfvalue",
    "+ rdf_crypto",
    "  .",
    "  Hash",
    "  ,",
    "  <missing ')'>"
   ],
   "trigger": [
    "HASH",
    "=",
    "Attribute",
    "(",
    "\"aff4:hashobject\"",
    ",",
    "rdfvalue",
    ".",
    "Hash",
    ",",
    "<missing",
    "')'>"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  @",
    "  handler",
    "+ .",
    "+ passive",
    "  (",
    "  handlers",
    "- True",
    "  )"
   ],
   "trigger": [
    "@",
    "handler",
    "(",
    "handlers",
    "True",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- api_call_renderers",
    "+ http_api",
    "  .",
    "  ("
   ],
   "trigger": [
    "=",
    "api_call_renderers",
    ".",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "  self",
    "  .",
    "- convert",
    "- .",
    "- create_new_unsolvable",
    "+ new_unsolvable",
    "  (",
    "  node",
    "  )"
   ],
   "trigger": [
    "=",
    "self",
    ".",
    "convert",
    ".",
    "create_new_unsolvable",
    "(",
    "node",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "- typing",
    "+ typing_overlay",
    "  .",
    "  NoReturn",
    "  )"
   ],
   "trigger": [
    ".",
    "typing",
    ".",
    "NoReturn",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "- typing",
    "+ typing_overlay",
    "  .",
    "  )"
   ],
   "trigger": [
    ".",
    "typing",
    ".",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "- get_full_name",
    "+ full_name",
    "- (",
    "- )",
    "  =="
   ],
   "trigger": [
    ".",
    "get_full_name",
    "(",
    ")",
    "=="
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "- ThreatActor",
    "+ Threat",
    "  )"
   ],
   "trigger": [
    ".",
    "ThreatActor",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "  (",
    "- unicode",
    "+ str",
    "  )"
   ],
   "trigger": [
    ".",
    "(",
    "unicode",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "  (",
    "- unicode",
    "+ str",
    "  ("
   ],
   "trigger": [
    ".",
    "(",
    "unicode",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "- unicode",
    "+ str",
    "  (",
    "  )",
    "  )"
   ],
   "trigger": [
    "(",
    "unicode",
    "(",
    ")",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  ,",
    "  )",
    "  ,"
   ],
   "trigger": [
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ",",
    ")",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "- ThreatActor",
    "+ Threat",
    "  )"
   ],
   "trigger": [
    "(",
    "ThreatActor",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "- DataStoreTest",
    "+ _DataStoreTest",
    "  )"
   ],
   "trigger": [
    "(",
    "DataStoreTest",
    ")"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"st_mode\"",
    "  :",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatMode",
    "  (",
    "  33261",
    "  )",
    "  ,"
   ],
   "trigger": [
    "\"st_mode\"",
    ":",
    "rdfvalue",
    ".",
    "StatMode",
    "(",
    "33261",
    ")",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"runner_args\"",
    "  :",
    "- rdfvalue",
    "+ flow_runner",
    "  .",
    "  FlowRunnerArgs",
    "  (",
    "  output",
    "  =",
    "  test_output_path",
    "  )",
    "  }"
   ],
   "trigger": [
    "\"runner_args\"",
    ":",
    "rdfvalue",
    ".",
    "FlowRunnerArgs",
    "(",
    "output",
    "=",
    "test_output_path",
    ")",
    "}"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"pathspec\"",
    "  :",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  ("
   ],
   "trigger": [
    "\"pathspec\"",
    ":",
    "rdfvalue",
    ".",
    "PathSpec",
    "("
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"grep\"",
    "  :",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  BareGrepSpec",
    "  (",
    "  literal",
    "  =",
    "  \"ELF\"",
    "  )",
    "  ,"
   ],
   "trigger": [
    "\"grep\"",
    ":",
    "rdfvalue",
    ".",
    "BareGrepSpec",
    "(",
    "literal",
    "=",
    "\"ELF\"",
    ")",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"aff4:progress\"",
    "  ,",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  ProgressGraph",
    "  ,"
   ],
   "trigger": [
    "\"aff4:progress\"",
    ",",
    "rdfvalue",
    ".",
    "ProgressGraph",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"aff4:plist/query\"",
    "  ,",
    "- rdfvalue",
    "+ rdf_plist",
    "  .",
    "  PlistRequest",
    "  ,"
   ],
   "trigger": [
    "\"aff4:plist/query\"",
    ",",
    "rdfvalue",
    ".",
    "PlistRequest",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"aff4:info/packages\"",
    "  ,",
    "- rdfvalue",
    "+ client",
    "  .",
    "  SoftwarePackages",
    "  ,"
   ],
   "trigger": [
    "\"aff4:info/packages\"",
    ",",
    "rdfvalue",
    ".",
    "SoftwarePackages",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"\"",
    "- Reads",
    "+ Read",
    "  ."
   ],
   "trigger": [
    "\"\"",
    "Reads",
    "."
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"\"",
    "+ Generates",
    "- Handler",
    "- for",
    "  the",
    "- <missing 'in'>",
    "- <missing ':'>",
    "  ."
   ],
   "trigger": [
    "\"\"",
    "Handler",
    "for",
    "the",
    "<missing",
    "'in'>",
    "<missing",
    "':'>",
    "."
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"\"",
    "+ Generates",
    "- Handler",
    "- for",
    "  the",
    "- <missing 'in'>",
    "+ template",
    "  ."
   ],
   "trigger": [
    "\"\"",
    "Handler",
    "for",
    "the",
    "<missing",
    "'in'>",
    "."
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- _element",
    "+ element",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "_element",
    ".",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 0.9230769230769231
  },
  {
   "code": [
    "  from",
    "  grr",
    "  .",
    "  lib",
    "  import",
    "- artifact_lib",
    "+ artifact_registry"
   ],
   "trigger": [
    "from",
    "grr",
    ".",
    "lib",
    "import",
    "artifact_lib"
   ],
   "count": 12,
   "accuracy": 0.9230769230769231
  },
  {
   "code": [
    "- refresh",
    "+ render",
    "  (",
    "  self",
    "  )"
   ],
   "trigger": [
    "refresh",
    "(",
    "self",
    ")"
   ],
   "count": 12,
   "accuracy": 0.8571428571428571
  },
  {
   "code": [
    "  if",
    "- not",
    "  self",
    "  .",
    "+ is",
    "+ None",
    "  :"
   ],
   "trigger": [
    "if",
    "not",
    "self",
    ".",
    ":"
   ],
   "count": 12,
   "accuracy": 0.8571428571428571
  },
  {
   "code": [
    "- unicode",
    "+ str",
    "  (",
    "  .",
    "  ("
   ],
   "trigger": [
    "unicode",
    "(",
    ".",
    "("
   ],
   "count": 12,
   "accuracy": 0.75
  },
  {
   "code": [
    "  aff4_path",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  client_id",
    "  )",
    "  )"
   ],
   "trigger": [
    "aff4_path",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "client_id",
    ")",
    ")"
   ],
   "count": 12,
   "accuracy": 0.75
  },
  {
   "code": [
    "  =",
    "- unicode",
    "+ str",
    "  (",
    "  ."
   ],
   "trigger": [
    "=",
    "unicode",
    "(",
    "."
   ],
   "count": 12,
   "accuracy": 0.75
  },
  {
   "code": [
    "- abstract",
    "+ abstract_utils",
    "  .",
    "  T"
   ],
   "trigger": [
    "abstract",
    ".",
    "T"
   ],
   "count": 12,
   "accuracy": 0.6
  },
  {
   "code": [
    "  .",
    "- abstract",
    "+ abstract_utils",
    "  .",
    "  )"
   ],
   "trigger": [
    ".",
    "abstract",
    ".",
    ")"
   ],
   "count": 12,
   "accuracy": 0.6
  },
  {
   "code": [
    "- pass",
    "+ .",
    "+ (",
    "+ )"
   ],
   "trigger": [
    "pass"
   ],
   "count": 12,
   "accuracy": 0.5714285714285714
  },
  {
   "code": [
    "- notifications",
    "+ common",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "notifications",
    ".",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 0.5454545454545454
  },
  {
   "code": [
    "  supported_pathtype",
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  OS"
   ],
   "trigger": [
    "supported_pathtype",
    "=",
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    "OS"
   ],
   "count": 12,
   "accuracy": 0.5454545454545454
  },
  {
   "code": [
    "- get_full_name",
    "+ full_name",
    "  )"
   ],
   "trigger": [
    "get_full_name",
    ")"
   ],
   "count": 12,
   "accuracy": 0.5
  },
  {
   "code": [
    "- aff4",
    "+ aff4_collections",
    "  .",
    "  PackedVersionedCollection",
    "  .",
    "  AddToCollection",
    "  ("
   ],
   "trigger": [
    "aff4",
    ".",
    "PackedVersionedCollection",
    ".",
    "AddToCollection",
    "("
   ],
   "count": 12,
   "accuracy": 0.5
  },
  {
   "code": [
    "  subject_urn",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  ClientURN",
    "  (",
    "  client_id",
    "  )",
    "  )"
   ],
   "trigger": [
    "subject_urn",
    "=",
    "rdfvalue",
    ".",
    "ClientURN",
    "(",
    "client_id",
    ")",
    ")"
   ],
   "count": 12,
   "accuracy": 0.5
  },
  {
   "code": [
    "  response",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  StatEntry",
    "  (",
    "  )"
   ],
   "trigger": [
    "response",
    "=",
    "rdfvalue",
    ".",
    "StatEntry",
    "(",
    ")"
   ],
   "count": 12,
   "accuracy": 0.5
  },
  {
   "code": [
    "  pathtype",
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  REGISTRY",
    "  ,"
   ],
   "trigger": [
    "pathtype",
    "=",
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    "REGISTRY",
    ","
   ],
   "count": 12,
   "accuracy": 0.5
  },
  {
   "code": [
    "- curses",
    "+ app",
    "+ ."
   ],
   "trigger": [
    "curses"
   ],
   "count": 12,
   "accuracy": 0.46153846153846156
  },
  {
   "code": [
    "  for",
    "  in",
    "  .",
    "- itervalues",
    "+ values",
    "  (",
    "  )",
    "  :"
   ],
   "trigger": [
    "for",
    "in",
    ".",
    "itervalues",
    "(",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 0.46153846153846156
  },
  {
   "code": [
    "- typing",
    "+ typing_overlay",
    "  .",
    "  )",
    "  )",
    "  :"
   ],
   "trigger": [
    "typing",
    ".",
    ")",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 0.4
  },
  {
   "code": [
    "- \"aff4:/flows/W:CrashHandler\"",
    "+ \"CrashHandler\""
   ],
   "trigger": [
    "\"aff4:/flows/W:CrashHandler\""
   ],
   "count": 12,
   "accuracy": 0.375
  },
  {
   "code": [
    "- artifact_lib",
    "+ artifact_utils",
    "  .",
    "  ("
   ],
   "trigger": [
    "artifact_lib",
    ".",
    "("
   ],
   "count": 12,
   "accuracy": 0.3333333333333333
  },
  {
   "code": [
    "  class",
    "  (",
    "+ BasicFlowTest",
    "- test_lib",
    "- .",
    "- FlowTestsBaseclass",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "(",
    "test_lib",
    ".",
    "FlowTestsBaseclass",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 0.3333333333333333
  },
  {
   "code": [
    "  raise",
    "+ (",
    "- ."
   ],
   "trigger": [
    "raise",
    "."
   ],
   "count": 12,
   "accuracy": 0.3076923076923077
  },
  {
   "code": [
    "  from",
    "- tests",
    "+ integration",
    "  .",
    "  .",
    "  .",
    "  import"
   ],
   "trigger": [
    "from",
    "tests",
    ".",
    ".",
    ".",
    "import"
   ],
   "count": 12,
   "accuracy": 0.3
  },
  {
   "code": [
    "  .",
    "- status",
    "+ get_status",
    "+ (",
    "+ )"
   ],
   "trigger": [
    ".",
    "status"
   ],
   "count": 12,
   "accuracy": 0.2857142857142857
  },
  {
   "code": [
    "  =",
    "- {",
    "- }",
    "+ collections",
    "+ .",
    "+ OrderedDict",
    "+ (",
    "+ )"
   ],
   "trigger": [
    "=",
    "{",
    "}"
   ],
   "count": 12,
   "accuracy": 0.2727272727272727
  },
  {
   "code": [
    "- return",
    "- value",
    "+ raise",
    "+ NotImplementedError"
   ],
   "trigger": [
    "return",
    "value"
   ],
   "count": 12,
   "accuracy": 0.2222222222222222
  },
  {
   "code": [
    "  from",
    "  grr",
    "  .",
    "  lib",
    "+ .",
    "+ rdfvalues",
    "  import",
    "- server_plugins",
    "+ paths",
    "+ as",
    "+ rdf_paths"
   ],
   "trigger": [
    "from",
    "grr",
    ".",
    "lib",
    "import",
    "server_plugins"
   ],
   "count": 12,
   "accuracy": 0.21428571428571427
  },
  {
   "code": [
    "  from",
    "  grr",
    "  .",
    "  lib",
    "+ .",
    "+ aff4_objects",
    "  import",
    "- server_plugins",
    "+ users"
   ],
   "trigger": [
    "from",
    "grr",
    ".",
    "lib",
    "import",
    "server_plugins"
   ],
   "count": 12,
   "accuracy": 0.21428571428571427
  },
  {
   "code": [
    "  from",
    "  grr",
    "  .",
    "  lib",
    "  import",
    "- server_plugins",
    "+ artifact_registry"
   ],
   "trigger": [
    "from",
    "grr",
    ".",
    "lib",
    "import",
    "server_plugins"
   ],
   "count": 12,
   "accuracy": 0.21428571428571427
  },
  {
   "code": [
    "  from",
    "  grr",
    "  .",
    "  lib",
    "  import",
    "- server_plugins",
    "+ access_control"
   ],
   "trigger": [
    "from",
    "grr",
    ".",
    "lib",
    "import",
    "server_plugins"
   ],
   "count": 12,
   "accuracy": 0.21428571428571427
  },
  {
   "code": [
    "- 1",
    "+ .",
    "+ ."
   ],
   "trigger": [
    "1"
   ],
   "count": 12,
   "accuracy": 0.20535714285714285
  },
  {
   "code": [
    "- 1",
    "+ ."
   ],
   "trigger": [
    "1"
   ],
   "count": 12,
   "accuracy": 0.20535714285714285
  },
  {
   "code": [
    "- 'ci-app-pipeline.json'",
    "+ 'azure-ci-app-pipeline.json'"
   ],
   "trigger": [
    "'ci-app-pipeline.json'"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"is_cohorted\"",
    "+ \"is_divided\"",
    "  :"
   ],
   "trigger": [
    "\"is_cohorted\"",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- receving",
    "+ receiving",
    "  ="
   ],
   "trigger": [
    "self",
    ".",
    "receving",
    "="
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "  django",
    "  .",
    "+ urls",
    "- core",
    "- .",
    "- urlresolvers",
    "  import",
    "  reverse"
   ],
   "trigger": [
    "from",
    "django",
    ".",
    "core",
    ".",
    "urlresolvers",
    "import",
    "reverse"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  for",
    "  index",
    "  in",
    "  range",
    "  (",
    "- 3",
    "+ 2",
    "  )",
    "  :"
   ],
   "trigger": [
    "for",
    "index",
    "in",
    "range",
    "(",
    "3",
    ")",
    ":"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  IR_node",
    "  .",
    "- 'hasBias'",
    "+ 'use_bias'"
   ],
   "trigger": [
    "IR_node",
    ".",
    "'hasBias'"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  :",
    "  {",
    "  'key'",
    "  :",
    "  ,",
    "  'type'",
    "  :",
    "- '[int]'",
    "+ 'str'",
    "  }"
   ],
   "trigger": [
    ":",
    "{",
    "'key'",
    ":",
    ",",
    "'type'",
    ":",
    "'[int]'",
    "}"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  :",
    "  type",
    "  :",
    "  ~",
    "- bot",
    "+ botframework",
    "  .",
    "  connector",
    "  .",
    "  models",
    "  ."
   ],
   "trigger": [
    ":",
    "type",
    ":",
    "~",
    "bot",
    ".",
    "connector",
    ".",
    "models",
    "."
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"context\"",
    "  :",
    "+ context_override",
    "- eventtracker",
    "- .",
    "- get_tracker",
    "- (",
    "- )",
    "- .",
    "- resolve_context",
    "- (",
    "- )",
    "  ,"
   ],
   "trigger": [
    "\"context\"",
    ":",
    "eventtracker",
    ".",
    "get_tracker",
    "(",
    ")",
    ".",
    "resolve_context",
    "(",
    ")",
    ","
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"\"",
    "  resource",
    "+ ."
   ],
   "trigger": [
    "\"\"",
    "resource"
   ],
   "count": 12,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- 404",
    "+ 302",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "404",
    ")"
   ],
   "count": 12,
   "accuracy": 0.75
  },
  {
   "code": [
    "  self",
    "  .",
    "  (",
    "- 404",
    "+ 302",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "(",
    "404",
    ")"
   ],
   "count": 12,
   "accuracy": 0.75
  },
  {
   "code": [
    "  :",
    "  {",
    "  'key'",
    "  :",
    "  ,",
    "  'type'",
    "  :",
    "- 'number'",
    "+ 'float'",
    "  }",
    "  ,"
   ],
   "trigger": [
    ":",
    "{",
    "'key'",
    ":",
    ",",
    "'type'",
    ":",
    "'number'",
    "}",
    ","
   ],
   "count": 12,
   "accuracy": 0.6
  },
  {
   "code": [
    "  =",
    "- '0.6.0'",
    "+ '0.6.1'"
   ],
   "trigger": [
    "=",
    "'0.6.0'"
   ],
   "count": 12,
   "accuracy": 0.5
  },
  {
   "code": [
    "  :",
    "  type",
    "  :",
    "- number",
    "+ float"
   ],
   "trigger": [
    ":",
    "type",
    ":",
    "number"
   ],
   "count": 12,
   "accuracy": 0.4
  },
  {
   "code": [
    "- function",
    "+ cloud_function",
    "  ("
   ],
   "trigger": [
    "function",
    "("
   ],
   "count": 11,
   "accuracy": 1.0
  },
  {
   "code": [
    "- Queue",
    "+ queue",
    "  ."
   ],
   "trigger": [
    "Queue",
    "."
   ],
   "count": 11,
   "accuracy": 1.0
  },
  {
   "code": [
    "  _",
    "  ,",
    "  notif_data",
    "  =",
    "- notification",
    "+ notifications",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "_",
    ",",
    "notif_data",
    "=",
    "notification",
    ".",
    "(",
    ")"
   ],
   "count": 11,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "  util",
    "  .",
    "- TimeMillis",
    "+ time_millis",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "util",
    ".",
    "TimeMillis",
    "(",
    ")"
   ],
   "count": 11,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "- 'owner'",
    "+ 'contact'",
    "  ,"
   ],
   "trigger": [
    "(",
    "'owner'",
    ","
   ],
   "count": 11,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "- 'owner'",
    "+ 'contact'",
    "  )"
   ],
   "trigger": [
    "(",
    "'owner'",
    ")"
   ],
   "count": 11,
   "accuracy": 1.0
  },
  {
   "code": [
    "- unicode",
    "+ str",
    "  )",
    "  :"
   ],
   "trigger": [
    "unicode",
    ")",
    ":"
   ],
   "count": 11,
   "accuracy": 0.8461538461538461
  },
  {
   "code": [
    "- \"ControlAssessment\"",
    "+ \"Assessment\"",
    "  ,",
    "  ,"
   ],
   "trigger": [
    "\"ControlAssessment\"",
    ",",
    ","
   ],
   "count": 11,
   "accuracy": 0.4782608695652174
  },
  {
   "code": [
    "- 2",
    "+ 3"
   ],
   "trigger": [
    "2"
   ],
   "count": 11,
   "accuracy": 0.3888888888888889
  },
  {
   "code": [
    "  .",
    "- error",
    "+ exception",
    "  ("
   ],
   "trigger": [
    ".",
    "error",
    "("
   ],
   "count": 11,
   "accuracy": 0.3333333333333333
  },
  {
   "code": [
    "  =",
    "- 0",
    "+ 1"
   ],
   "trigger": [
    "=",
    "0"
   ],
   "count": 11,
   "accuracy": 0.29577464788732394
  },
  {
   "code": [
    "  self",
    "  .",
    "  .",
    "- query",
    "+ query_name"
   ],
   "trigger": [
    "self",
    ".",
    ".",
    "query"
   ],
   "count": 11,
   "accuracy": 0.23404255319148937
  },
  {
   "code": [
    "+ fail_quality",
    "- raise",
    "- BuildFailure",
    "  (",
    "+ ,"
   ],
   "trigger": [
    "raise",
    "BuildFailure",
    "("
   ],
   "count": 11,
   "accuracy": 1.0
  },
  {
   "code": [
    "+ fail_quality",
    "- raise",
    "- BuildFailure",
    "  ("
   ],
   "trigger": [
    "raise",
    "BuildFailure",
    "("
   ],
   "count": 11,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  assertRedirects",
    "  (",
    "  response",
    "  ,",
    "- '/'",
    "+ '/login'",
    "  ,",
    "  fetch_redirect_response",
    "  =",
    "  False",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "assertRedirects",
    "(",
    "response",
    ",",
    "'/'",
    ",",
    "fetch_redirect_response",
    "=",
    "False",
    ")"
   ],
   "count": 11,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- '0.1.0'",
    "+ '0.1.1'"
   ],
   "trigger": [
    "=",
    "'0.1.0'"
   ],
   "count": 11,
   "accuracy": 1.0
  },
  {
   "code": [
    "  'target'",
    "  :",
    "- '/'",
    "+ '/login'",
    "  ,"
   ],
   "trigger": [
    "'target'",
    ":",
    "'/'",
    ","
   ],
   "count": 11,
   "accuracy": 1.0
  },
  {
   "code": [
    "  'SQUELCH_PII_IN_LOGS'",
    "  :",
    "- False",
    "+ True",
    "  ,"
   ],
   "trigger": [
    "'SQUELCH_PII_IN_LOGS'",
    ":",
    "False",
    ","
   ],
   "count": 11,
   "accuracy": 1.0
  },
  {
   "code": [
    "- 'value'",
    "+ u'value'",
    "  :",
    "- \"('registration/password_reset_done.html', [])\"",
    "+ u\"('registration/password_reset_done.html', [('email', u'{}')])\"",
    "+ .",
    "+ format",
    "+ (",
    "+ bad_email",
    "+ )",
    "  ,"
   ],
   "trigger": [
    "'value'",
    ":",
    "\"('registration/password_reset_done.html',",
    "[])\"",
    ","
   ],
   "count": 11,
   "accuracy": 0.8461538461538461
  },
  {
   "code": [
    "- unicode",
    "+ str",
    "  (",
    "  name",
    "  )"
   ],
   "trigger": [
    "unicode",
    "(",
    "name",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- unicode",
    "+ str",
    "  (",
    "  )",
    "  ,"
   ],
   "trigger": [
    "unicode",
    "(",
    ")",
    ","
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- team_name",
    "+ signature"
   ],
   "trigger": [
    "team_name"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  WindowsVolume",
    "  .",
    "  WindowsDriveTypeEnum",
    "  .",
    "  DRIVE_CDROM",
    "  ]"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "WindowsVolume",
    ".",
    "WindowsDriveTypeEnum",
    ".",
    "DRIVE_CDROM",
    "]"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ filesystem",
    "  .",
    "  RecursiveListDirectoryArgs",
    "  (",
    "  )",
    "  )",
    "  .",
    "  ParseArgs",
    "  (",
    "  request",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "RecursiveListDirectoryArgs",
    "(",
    ")",
    ")",
    ".",
    "ParseArgs",
    "(",
    "request",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ client",
    "  .",
    "  KnowledgeBaseUser"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "KnowledgeBaseUser"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ ca_enroller",
    "  .",
    "+ Enroler",
    "+ .",
    "+ well_known_session_id",
    "- SessionID",
    "- (",
    "- \"aff4:/flows/CA:Enrol\"",
    "- )",
    "  )"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "SessionID",
    "(",
    "\"aff4:/flows/CA:Enrol\"",
    ")",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- rdfvalue",
    "+ aff4_plugin",
    "  .",
    "  ApiAff4RendererArgs",
    "  (",
    "  aff4_path",
    "  =",
    "  \"tmp/foo/bar\"",
    "  )",
    "  ,"
   ],
   "trigger": [
    "rdfvalue",
    ".",
    "ApiAff4RendererArgs",
    "(",
    "aff4_path",
    "=",
    "\"tmp/foo/bar\"",
    ")",
    ","
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  GOOD_HEADER_NOT_INTERFACE_SPECIFIC",
    "  +",
    "  GOOD_TERM_1",
    "  ,",
    "  <missing ')'>"
   ],
   "trigger": [
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "GOOD_HEADER_NOT_INTERFACE_SPECIFIC",
    "+",
    "GOOD_TERM_1",
    ",",
    "<missing",
    "')'>"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- notification_shard_counter",
    "+ notification_shard_counters",
    "  =",
    "- 0",
    "+ {",
    "+ }"
   ],
   "trigger": [
    "notification_shard_counter",
    "=",
    "0"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- logging",
    "- .",
    "- (",
    "- \"PyInstaller missing\"",
    "- )",
    "+ pass"
   ],
   "trigger": [
    "logging",
    ".",
    "(",
    "\"PyInstaller",
    "missing\"",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- abstract",
    "+ abstract_utils",
    "  .",
    "  T",
    "  )"
   ],
   "trigger": [
    "abstract",
    ".",
    "T",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- TryAppend",
    "+ TryAppendMac",
    "  (",
    "- \"mac\"",
    "- ,",
    "  mac",
    "  )"
   ],
   "trigger": [
    "TryAppend",
    "(",
    "\"mac\"",
    ",",
    "mac",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- TryAppend",
    "+ TryAppendMac",
    "  (",
    "- \"mac\"",
    "- ,",
    "  interface",
    "  .",
    "  mac_address",
    "  .",
    "  human_readable_address",
    "  )"
   ],
   "trigger": [
    "TryAppend",
    "(",
    "\"mac\"",
    ",",
    "interface",
    ".",
    "mac_address",
    ".",
    "human_readable_address",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- SUPPORTED_ARCHICTECTURES",
    "+ SUPPORTED_ARCHITECTURES",
    "  =",
    "  [",
    "  \"i386\"",
    "  ,",
    "  \"amd64\"",
    "  ]"
   ],
   "trigger": [
    "SUPPORTED_ARCHICTECTURES",
    "=",
    "[",
    "\"i386\"",
    ",",
    "\"amd64\"",
    "]"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  Click",
    "  (",
    "- \"css=button.DownloadButton:visible\"",
    "+ \"css=button.DownloadButton\"",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "Click",
    "(",
    "\"css=button.DownloadButton:visible\"",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- MonsoonError",
    "+ Error",
    "  (",
    "  )"
   ],
   "trigger": [
    "MonsoonError",
    "(",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- 300",
    "+ None",
    "  ,"
   ],
   "trigger": [
    "300",
    ","
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"due_on\"",
    "+ \"end_date\"",
    "  ,",
    "- \"requested_on\"",
    "+ \"start_date\"",
    "  :"
   ],
   "trigger": [
    "\"due_on\"",
    ",",
    "\"requested_on\"",
    ":"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"due_on\"",
    "+ \"end_date\"",
    "  ,"
   ],
   "trigger": [
    "\"due_on\"",
    ","
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"directive_id\"",
    "+ \"directive\"",
    "  :"
   ],
   "trigger": [
    "\"directive_id\"",
    ":"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"Results of this hunt can be downloaded as an archive\"",
    "+ \"Files referenced in this collection can be downloaded\"",
    "  )"
   ],
   "trigger": [
    "\"Results",
    "of",
    "this",
    "hunt",
    "can",
    "be",
    "downloaded",
    "as",
    "an",
    "archive\"",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"\"\"Take the results and yield results that passed through the filters.\"\"\"",
    "+ \"\"\"Take the results and yield results that passed through the filters.\n\n    The output of each filter is used as the input for successive filters.\n\n    Args:\n      raw_data: An iterable series of rdf values.\n\n    Returns:\n      A list of rdf values that matched all filters.\n    \"\"\""
   ],
   "trigger": [
    "\"\"\"Take",
    "the",
    "results",
    "and",
    "yield",
    "results",
    "that",
    "passed",
    "through",
    "the",
    "filters.\"\"\""
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"\"\"Module with GRRWorker/GRREnroller implementation.\"\"\"",
    "+ \"\"\"Module with GRRWorker implementation.\"\"\""
   ],
   "trigger": [
    "\"\"\"Module",
    "with",
    "GRRWorker/GRREnroller",
    "implementation.\"\"\""
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"\"\"Ensures that the Well known flows exist.\"\"\"",
    "+ \"\"\"Sets up flow-related stats.\"\"\"",
    "- \"\"\"Exports our vars.\"\"\""
   ],
   "trigger": [
    "\"\"\"Ensures",
    "that",
    "the",
    "Well",
    "known",
    "flows",
    "exist.\"\"\"",
    "\"\"\"Exports",
    "our",
    "vars.\"\"\""
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"\"\"A check was defined badly.\"\"\"",
    "+ \"\"\"A filter was defined badly.\"\"\"",
    "+ class",
    "+ ProcessingError",
    "+ (",
    "+ Error",
    "+ )",
    "+ :",
    "+ \"\"\"A filter encountered errors processing results.\"\"\""
   ],
   "trigger": [
    "\"\"\"A",
    "check",
    "was",
    "defined",
    "badly.\"\"\""
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "+ KEY_ESCAPE",
    "- curses",
    "- .",
    "- ascii",
    "- .",
    "- ESC",
    "  :",
    "  self",
    "  .",
    "  ,"
   ],
   "trigger": [
    "curses",
    ".",
    "ascii",
    ".",
    "ESC",
    ":",
    "self",
    ".",
    ","
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "+ 'Error in updating user.  Details are logged.'",
    "+ )",
    "- if",
    "- promoting",
    "- :",
    "- 'Error promoting. Has player solved challenges?'",
    "- )",
    "- raise"
   ],
   "trigger": [
    "if",
    "promoting",
    ":",
    "'Error",
    "promoting.",
    "Has",
    "player",
    "solved",
    "challenges?'",
    ")",
    "raise"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  }",
    "  class",
    "  ApiHuntsListRendererArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "}",
    "class",
    "ApiHuntsListRendererArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  value_class",
    "  =",
    "- structs",
    "+ rdf_structs",
    "  .",
    "  EnumNamedValue"
   ],
   "trigger": [
    "value_class",
    "=",
    "structs",
    ".",
    "EnumNamedValue"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  value_class",
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  EmbeddedRDFValue"
   ],
   "trigger": [
    "value_class",
    "=",
    "rdfvalue",
    ".",
    "EmbeddedRDFValue"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  value_class",
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  DataBlob"
   ],
   "trigger": [
    "value_class",
    "=",
    "rdfvalue",
    ".",
    "DataBlob"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  value_class",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  FlowState"
   ],
   "trigger": [
    "value_class",
    "=",
    "rdfvalue",
    ".",
    "FlowState"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  use_migrations",
    "  =",
    "- False",
    "+ True"
   ],
   "trigger": [
    "use_migrations",
    "=",
    "False"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  supported_pathtype",
    "  =",
    "- rdfvalue",
    "+ paths",
    "  .",
    "  PathSpec",
    "  .",
    "  PathType",
    "  .",
    "  OS"
   ],
   "trigger": [
    "supported_pathtype",
    "=",
    "rdfvalue",
    ".",
    "PathSpec",
    ".",
    "PathType",
    ".",
    "OS"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  sorted",
    "  (",
    "  list",
    "  (",
    "- policy",
    "+ policyparser",
    "  .",
    "  ACTIONS",
    "  )",
    "  )",
    "  )"
   ],
   "trigger": [
    "sorted",
    "(",
    "list",
    "(",
    "policy",
    ".",
    "ACTIONS",
    ")",
    ")",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  soft",
    "  =",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  SoftwarePackage",
    "  ("
   ],
   "trigger": [
    "soft",
    "=",
    "rdfvalue",
    ".",
    "SoftwarePackage",
    "("
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- refresh",
    "+ render",
    "  (",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "refresh",
    "(",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- assertProtoEqual",
    "+ assertRDFValueEqualToProto",
    "  (",
    "+ pathspec",
    "+ ,",
    "  pathspec_pb",
    "- ,",
    "- pathspec",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "assertProtoEqual",
    "(",
    "pathspec_pb",
    ",",
    "pathspec",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- assertProtoEqual",
    "+ assertRDFValueEqual",
    "  (",
    "  x",
    "  ,",
    "  y",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "assertProtoEqual",
    "(",
    "x",
    ",",
    "y",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- assertProtoEqual",
    "+ assertRDFValueEqual",
    "  (",
    "  stored_message",
    "  ,",
    "  message",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "assertProtoEqual",
    "(",
    "stored_message",
    ",",
    "message",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- assertProtoEqual",
    "+ assertRDFValueEqual",
    "  (",
    "  grr_message",
    "  ,",
    "  nanny_controller",
    "  .",
    "  GetTransactionLog",
    "  (",
    "  )",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "assertProtoEqual",
    "(",
    "grr_message",
    ",",
    "nanny_controller",
    ".",
    "GetTransactionLog",
    "(",
    ")",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- assertProtoEqual",
    "+ assertRDFValueEqual",
    "  (",
    "  decoded",
    "  ,",
    "  task",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "assertProtoEqual",
    "(",
    "decoded",
    ",",
    "task",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- _ExecuteQuery",
    "+ ExecuteQuery",
    "  (",
    "  \"\"",
    "  <missing ')'>"
   ],
   "trigger": [
    "self",
    ".",
    "_ExecuteQuery",
    "(",
    "\"\"",
    "<missing",
    "')'>"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- HTFConfig",
    "+ Config"
   ],
   "trigger": [
    "self",
    ".",
    "HTFConfig"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  pathspec",
    "  =",
    "- rdfvalue",
    "+ rdf_paths",
    "  .",
    "  PathSpec",
    "  (",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "pathspec",
    "=",
    "rdfvalue",
    ".",
    "PathSpec",
    "(",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  fd",
    "  ,",
    "- rdfvalue",
    "+ api_aff4_object_renderers",
    "  .",
    "  ApiRDFValueCollectionRendererArgs",
    "  ("
   ],
   "trigger": [
    "self",
    ".",
    "fd",
    ",",
    "rdfvalue",
    ".",
    "ApiRDFValueCollectionRendererArgs",
    "("
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  assertIsInstance",
    "  (",
    "  fd",
    "  ,",
    "- aff4",
    "+ aff4_grr",
    "  .",
    "  VFSGRRClient",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "assertIsInstance",
    "(",
    "fd",
    ",",
    "aff4",
    ".",
    "VFSGRRClient",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  =",
    "- HTFConfig",
    "+ Config"
   ],
   "trigger": [
    "self",
    ".",
    "=",
    "HTFConfig"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  sample",
    "  =",
    "- rdfvalue",
    "+ rdf_flows",
    "  .",
    "  GrrMessage",
    "  ("
   ],
   "trigger": [
    "sample",
    "=",
    "rdfvalue",
    ".",
    "GrrMessage",
    "("
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  rows",
    "  =",
    "  self",
    "  .",
    "- _ExecuteQuery",
    "+ ExecuteQuery",
    "  (",
    "  query",
    "  ,",
    "  args",
    "  )"
   ],
   "trigger": [
    "rows",
    "=",
    "self",
    ".",
    "_ExecuteQuery",
    "(",
    "query",
    ",",
    "args",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "- widget_info",
    "+ self",
    "  .",
    "- DropdownSettingsPrograms",
    "+ _dropdown_settings_cls",
    "  (",
    "  self",
    "  .",
    "  _driver",
    "  )"
   ],
   "trigger": [
    "return",
    "widget_info",
    ".",
    "DropdownSettingsPrograms",
    "(",
    "self",
    ".",
    "_driver",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "- unicode",
    "+ str",
    "  (",
    "  self",
    "  .",
    "  )"
   ],
   "trigger": [
    "return",
    "unicode",
    "(",
    "self",
    ".",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "- unicode",
    "+ str",
    "  (",
    "  item",
    "  )"
   ],
   "trigger": [
    "return",
    "unicode",
    "(",
    "item",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "- rdfvalue",
    "+ [",
    "+ rdf_protodict",
    "  .",
    "  AttributedDict",
    "  (",
    "  config",
    "  )",
    "+ ]"
   ],
   "trigger": [
    "return",
    "rdfvalue",
    ".",
    "AttributedDict",
    "(",
    "config",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "  self",
    "  .",
    "- _IncludeTypeInfoIfNeeded",
    "+ _IncludeTypeInfo",
    "  (",
    "  value",
    "  ,",
    "  value",
    "  )"
   ],
   "trigger": [
    "return",
    "self",
    ".",
    "_IncludeTypeInfoIfNeeded",
    "(",
    "value",
    ",",
    "value",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "  (",
    "- unicode",
    "+ str",
    "  (",
    "  )",
    "  )"
   ],
   "trigger": [
    "return",
    "(",
    "unicode",
    "(",
    ")",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  ret",
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  pol",
    "  ,",
    "  self",
    "  .",
    "  naming",
    "  )"
   ],
   "trigger": [
    "ret",
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "pol",
    ",",
    "self",
    ".",
    "naming",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  result",
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  pol",
    "  ,",
    "  self",
    "  .",
    "  naming",
    "  )"
   ],
   "trigger": [
    "result",
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "pol",
    ",",
    "self",
    ".",
    "naming",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  result",
    "  =",
    "  utils",
    "  .",
    "- SmartStr",
    "+ SmartUnicode",
    "  (",
    "  rdf_data",
    "  )"
   ],
   "trigger": [
    "result",
    "=",
    "utils",
    ".",
    "SmartStr",
    "(",
    "rdf_data",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  result",
    "  =",
    "  self",
    "  .",
    "- _ExecuteQuery",
    "+ ExecuteQuery",
    "  (",
    "  query",
    "  ,",
    "  args",
    "  )"
   ],
   "trigger": [
    "result",
    "=",
    "self",
    ".",
    "_ExecuteQuery",
    "(",
    "query",
    ",",
    "args",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  result",
    "  =",
    "  self",
    "  .",
    "- _ExecuteQuery",
    "+ ExecuteQuery",
    "  (",
    "  query",
    "  ,",
    "  [",
    "  ]",
    "  )"
   ],
   "trigger": [
    "result",
    "=",
    "self",
    ".",
    "_ExecuteQuery",
    "(",
    "query",
    ",",
    "[",
    "]",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  result",
    "  =",
    "  self",
    "  .",
    "  renderer",
    "  .",
    "  Render",
    "  (",
    "- rdfvalue",
    "+ hunt_plugin",
    "  .",
    "  ApiHuntsListRendererArgs",
    "  ("
   ],
   "trigger": [
    "result",
    "=",
    "self",
    ".",
    "renderer",
    ".",
    "Render",
    "(",
    "rdfvalue",
    ".",
    "ApiHuntsListRendererArgs",
    "("
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  response",
    "  =",
    "- rdfvalue",
    "+ rdf_rekall_types",
    "  .",
    "  RekallResponse",
    "  ("
   ],
   "trigger": [
    "response",
    "=",
    "rdfvalue",
    ".",
    "RekallResponse",
    "("
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  raise",
    "- ParseError",
    "+ VerbatimError",
    "  ("
   ],
   "trigger": [
    "raise",
    "ParseError",
    "("
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  raise",
    "+ DeviceError",
    "+ (",
    "+ ,",
    "- .",
    "- Error",
    "- ("
   ],
   "trigger": [
    "raise",
    ".",
    "Error",
    "("
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  raise",
    "  AttributeError",
    "  (",
    "- \"Invalid attribute\"",
    "+ \"Invalid attribute %s\"",
    "+ %",
    "+ name",
    "  )"
   ],
   "trigger": [
    "raise",
    "AttributeError",
    "(",
    "\"Invalid",
    "attribute\"",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pol_obj",
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  policy_text",
    "  ,",
    "  self",
    "  .",
    "  naming",
    "  )"
   ],
   "trigger": [
    "pol_obj",
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "policy_text",
    ",",
    "self",
    ".",
    "naming",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pol",
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  GOOD_STANDARD_HEADER_2",
    "  +",
    "  GOOD_STANDARD_TERM_2",
    "  ,",
    "  <missing ')'>"
   ],
   "trigger": [
    "pol",
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "GOOD_STANDARD_HEADER_2",
    "+",
    "GOOD_STANDARD_TERM_2",
    ",",
    "<missing",
    "')'>"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pol",
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  GOOD_STANDARD_HEADER_1",
    "  +",
    "  GOOD_STANDARD_TERM_2",
    "  ,",
    "  <missing ')'>"
   ],
   "trigger": [
    "pol",
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "GOOD_STANDARD_HEADER_1",
    "+",
    "GOOD_STANDARD_TERM_2",
    ",",
    "<missing",
    "')'>"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pol",
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  GOOD_STANDARD_HEADER_1",
    "  +",
    "  GOOD_STANDARD_TERM_1",
    "  ,",
    "  <missing ')'>"
   ],
   "trigger": [
    "pol",
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "GOOD_STANDARD_HEADER_1",
    "+",
    "GOOD_STANDARD_TERM_1",
    ",",
    "<missing",
    "')'>"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pol",
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  GOOD_STANDARD_HEADER_1",
    "  +",
    "  BAD_STANDARD_TERM_1",
    "  ,",
    "  <missing ')'>"
   ],
   "trigger": [
    "pol",
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "GOOD_STANDARD_HEADER_1",
    "+",
    "BAD_STANDARD_TERM_1",
    ",",
    "<missing",
    "')'>"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pol",
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  GOOD_HEADER_2",
    "  +",
    "  GOOD_TERM_2",
    "  ,",
    "  <missing ')'>"
   ],
   "trigger": [
    "pol",
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "GOOD_HEADER_2",
    "+",
    "GOOD_TERM_2",
    ",",
    "<missing",
    "')'>"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pol",
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  GOOD_HEADER_2",
    "  +",
    "  GOOD_TERM_12",
    "  +",
    "  GOOD_HEADER",
    "  +"
   ],
   "trigger": [
    "pol",
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "GOOD_HEADER_2",
    "+",
    "GOOD_TERM_12",
    "+",
    "GOOD_HEADER",
    "+"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pol",
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  GOOD_HEADER_1",
    "  +",
    "  GOOD_TERM_1",
    "  ,",
    "  <missing ')'>"
   ],
   "trigger": [
    "pol",
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "GOOD_HEADER_1",
    "+",
    "GOOD_TERM_1",
    ",",
    "<missing",
    "')'>"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pol",
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  GOOD_HEADER",
    "  +",
    "  GOOD_TERM_2",
    "  +",
    "  GOOD_HEADER_11",
    "  +"
   ],
   "trigger": [
    "pol",
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "GOOD_HEADER",
    "+",
    "GOOD_TERM_2",
    "+",
    "GOOD_HEADER_11",
    "+"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pol",
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  GOOD_HEADER",
    "  +",
    "  GOOD_TERM_1",
    "  +",
    "  GOOD_HEADER_2",
    "  +"
   ],
   "trigger": [
    "pol",
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "GOOD_HEADER",
    "+",
    "GOOD_TERM_1",
    "+",
    "GOOD_HEADER_2",
    "+"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pol",
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  BAD_STANDARD_HEADER_2",
    "  +",
    "  GOOD_STANDARD_TERM_2",
    "  ,",
    "  <missing ')'>"
   ],
   "trigger": [
    "pol",
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "BAD_STANDARD_HEADER_2",
    "+",
    "GOOD_STANDARD_TERM_2",
    ",",
    "<missing",
    "')'>"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  pol",
    "  =",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  BAD_STANDARD_HEADER_1",
    "  +",
    "  GOOD_STANDARD_TERM_2",
    "  ,",
    "  <missing ')'>"
   ],
   "trigger": [
    "pol",
    "=",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "BAD_STANDARD_HEADER_1",
    "+",
    "GOOD_STANDARD_TERM_2",
    ",",
    "<missing",
    "')'>"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  permissions",
    "  =",
    "  json_user",
    "  .",
    "  get",
    "  (",
    "  'permissions'",
    "  ,",
    "+ None",
    "- (",
    "- )",
    "  )"
   ],
   "trigger": [
    "permissions",
    "=",
    "json_user",
    ".",
    "get",
    "(",
    "'permissions'",
    ",",
    "(",
    ")",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  notifications_by_priority",
    "  =",
    "  qm",
    "  .",
    "  GetNotificationsByPriority",
    "  (",
    "- worker",
    "+ queues",
    "  .",
    "- DEFAULT_WORKER_QUEUE",
    "+ FLOWS",
    "  )"
   ],
   "trigger": [
    "notifications_by_priority",
    "=",
    "qm",
    ".",
    "GetNotificationsByPriority",
    "(",
    "worker",
    ".",
    "DEFAULT_WORKER_QUEUE",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  notifications",
    "  =",
    "  manager",
    "  .",
    "  GetNotifications",
    "  (",
    "- worker",
    "+ queues",
    "  .",
    "- DEFAULT_WORKER_QUEUE",
    "+ FLOWS",
    "  )"
   ],
   "trigger": [
    "notifications",
    "=",
    "manager",
    ".",
    "GetNotifications",
    "(",
    "worker",
    ".",
    "DEFAULT_WORKER_QUEUE",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  nftables",
    "  .",
    "  Nftables",
    "  (",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  GOOD_HEADER_1",
    "  +",
    "  EXPIRING_TERM",
    "  %"
   ],
   "trigger": [
    "nftables",
    ".",
    "Nftables",
    "(",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "GOOD_HEADER_1",
    "+",
    "EXPIRING_TERM",
    "%"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  name",
    "  =",
    "- unicode",
    "+ str",
    "  (",
    "  )"
   ],
   "trigger": [
    "name",
    "=",
    "unicode",
    "(",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  logo",
    "  .",
    "- refresh",
    "+ render",
    "  (",
    "  )"
   ],
   "trigger": [
    "logo",
    ".",
    "refresh",
    "(",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  logging",
    "  .",
    "  info",
    "  (",
    "- %",
    "+ ,"
   ],
   "trigger": [
    "logging",
    ".",
    "info",
    "(",
    "%"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  lib",
    "  .",
    "- base",
    "+ page",
    "  .",
    "- Modal",
    "+ modal",
    "+ .",
    "+ create_new_object",
    "+ .",
    "+ CreateNewObjectModal"
   ],
   "trigger": [
    "lib",
    ".",
    "base",
    ".",
    "Modal"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  jcl",
    "  =",
    "  juniper",
    "  .",
    "  Juniper",
    "  (",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  GOOD_HEADER_V6",
    "  +"
   ],
   "trigger": [
    "jcl",
    "=",
    "juniper",
    ".",
    "Juniper",
    "(",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "GOOD_HEADER_V6",
    "+"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  in_rdfvalue",
    "  =",
    "- rdfvalue",
    "+ rdf_protodict",
    "  .",
    "  Dict"
   ],
   "trigger": [
    "in_rdfvalue",
    "=",
    "rdfvalue",
    ".",
    "Dict"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  isinstance",
    "  (",
    "  user",
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  User",
    "  )",
    "  :"
   ],
   "trigger": [
    "if",
    "isinstance",
    "(",
    "user",
    ",",
    "rdfvalue",
    ".",
    "User",
    ")",
    ":"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  isinstance",
    "  (",
    "  reply",
    "  ,",
    "- rdfvalue",
    "+ rdf_client",
    "  .",
    "  Volume",
    "  )",
    "  :"
   ],
   "trigger": [
    "if",
    "isinstance",
    "(",
    "reply",
    ",",
    "rdfvalue",
    ".",
    "Volume",
    ")",
    ":"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "- jaxlib",
    "+ .",
    "+ lib",
    "  import",
    "  xla_bridge"
   ],
   "trigger": [
    "from",
    "jaxlib",
    "import",
    "xla_bridge"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "  grr",
    "  .",
    "  lib",
    "  .",
    "  flows",
    "  .",
    "- caenroll",
    "+ general",
    "  import",
    "  ca_enroller"
   ],
   "trigger": [
    "from",
    "grr",
    ".",
    "lib",
    ".",
    "flows",
    ".",
    "caenroll",
    "import",
    "ca_enroller"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "  ggrc",
    "  .",
    "  models",
    "  import",
    "- Request",
    "+ Assessment"
   ],
   "trigger": [
    "from",
    "ggrc",
    ".",
    "models",
    "import",
    "Request"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  for",
    "  in",
    "- xrange",
    "+ range",
    "  (",
    "  self",
    "  .",
    "  )",
    "  :"
   ],
   "trigger": [
    "for",
    "in",
    "xrange",
    "(",
    "self",
    ".",
    ")",
    ":"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  for",
    "  in",
    "- xrange",
    "+ range",
    "  (",
    "  0",
    "  ,",
    "  )",
    "  :"
   ],
   "trigger": [
    "for",
    "in",
    "xrange",
    "(",
    "0",
    ",",
    ")",
    ":"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  for",
    "  hash_type",
    "  ,",
    "  hash_digest",
    "  in",
    "  hashes",
    "  .",
    "- ListFields",
    "+ ListSetFields",
    "  (",
    "  )",
    "  :"
   ],
   "trigger": [
    "for",
    "hash_type",
    ",",
    "hash_digest",
    "in",
    "hashes",
    ".",
    "ListFields",
    "(",
    ")",
    ":"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  except",
    "  .",
    "- ,",
    "+ as",
    "  e",
    "  :"
   ],
   "trigger": [
    "except",
    ".",
    ",",
    "e",
    ":"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  descriptors",
    "  =",
    "- {",
    "- }",
    "+ collections",
    "+ .",
    "+ OrderedDict",
    "+ (",
    "+ )"
   ],
   "trigger": [
    "descriptors",
    "=",
    "{",
    "}"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  def",
    "- refresh",
    "+ render",
    "  (",
    "  self",
    "  )",
    "  :"
   ],
   "trigger": [
    "def",
    "refresh",
    "(",
    "self",
    ")",
    ":"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  def",
    "- _ProcessAnomaly",
    "+ _StoreAnomaly",
    "  (",
    "  self",
    "  ,",
    "  anomaly_value",
    "  )",
    "  :"
   ],
   "trigger": [
    "def",
    "_ProcessAnomaly",
    "(",
    "self",
    ",",
    "anomaly_value",
    ")",
    ":"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  def",
    "- ListFields",
    "+ ListSetFields",
    "  (",
    "  self",
    "  )",
    "  :"
   ],
   "trigger": [
    "def",
    "ListFields",
    "(",
    "self",
    ")",
    ":"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  data_store_test",
    "  .",
    "- DataStoreTest",
    "+ _DataStoreTest",
    "  )",
    "  :"
   ],
   "trigger": [
    "data_store_test",
    ".",
    "DataStoreTest",
    ")",
    ":"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "- DataStoreTest",
    "+ _DataStoreTest",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "DataStoreTest",
    ")",
    ":"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  User",
    "  (",
    "- rdfvalue",
    "+ structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "User",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  StartHuntFlowArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "StartHuntFlowArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  RequestApprovalWithReasonFlowArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "RequestApprovalWithReasonFlowArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  GrantApprovalWithReasonFlowArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "GrantApprovalWithReasonFlowArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  ApiRDFValueCollectionRendererArgs",
    "  (",
    "- rdfvalue",
    "+ rdf_structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "ApiRDFValueCollectionRendererArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  ApiCallAdditionalArgs",
    "  (",
    "- rdfvalue",
    "+ structs",
    "  .",
    "  RDFProtoStruct",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "ApiCallAdditionalArgs",
    "(",
    "rdfvalue",
    ".",
    "RDFProtoStruct",
    ")",
    ":"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  child",
    "  ,",
    "  [",
    "- rdfvalue",
    "+ api_aff4_object_renderers",
    "  .",
    "  ApiAFF4ObjectRendererArgs",
    "  (",
    "  <missing ']'>"
   ],
   "trigger": [
    "child",
    ",",
    "[",
    "rdfvalue",
    ".",
    "ApiAFF4ObjectRendererArgs",
    "(",
    "<missing",
    "']'>"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  acl",
    "  =",
    "  windows_ipsec",
    "  .",
    "  WindowsIPSec",
    "  (",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  ("
   ],
   "trigger": [
    "acl",
    "=",
    "windows_ipsec",
    ".",
    "WindowsIPSec",
    "(",
    "policy",
    ".",
    "ParsePolicy",
    "("
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  acl",
    "  =",
    "  windows_advfirewall",
    "  .",
    "  WindowsAdvFirewall",
    "  (",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  ("
   ],
   "trigger": [
    "acl",
    "=",
    "windows_advfirewall",
    ".",
    "WindowsAdvFirewall",
    "(",
    "policy",
    ".",
    "ParsePolicy",
    "("
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  acl",
    "  =",
    "  pcap",
    "  .",
    "  PcapFilter",
    "  (",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  ("
   ],
   "trigger": [
    "acl",
    "=",
    "pcap",
    ".",
    "PcapFilter",
    "(",
    "policy",
    ".",
    "ParsePolicy",
    "("
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  acl",
    "  =",
    "  packetfilter",
    "  .",
    "  PacketFilter",
    "  (",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  ("
   ],
   "trigger": [
    "acl",
    "=",
    "packetfilter",
    ".",
    "PacketFilter",
    "(",
    "policy",
    ".",
    "ParsePolicy",
    "("
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  acl",
    "  =",
    "  iptables",
    "  .",
    "  Iptables",
    "  (",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  (",
    "  IPV6_HEADER_1",
    "  +"
   ],
   "trigger": [
    "acl",
    "=",
    "iptables",
    ".",
    "Iptables",
    "(",
    "policy",
    ".",
    "ParsePolicy",
    "(",
    "IPV6_HEADER_1",
    "+"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  acl",
    "  =",
    "  gce",
    "  .",
    "  GCE",
    "  (",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  ("
   ],
   "trigger": [
    "acl",
    "=",
    "gce",
    ".",
    "GCE",
    "(",
    "policy",
    ".",
    "ParsePolicy",
    "("
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  acl",
    "  =",
    "  aruba",
    "  .",
    "  Aruba",
    "  (",
    "- policy",
    "+ policyparser",
    "  .",
    "  ParsePolicy",
    "  ("
   ],
   "trigger": [
    "acl",
    "=",
    "aruba",
    ".",
    "Aruba",
    "(",
    "policy",
    ".",
    "ParsePolicy",
    "("
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  access_control",
    "  .",
    "- BaseAccessControlManager",
    "+ BasicAccessControlManager"
   ],
   "trigger": [
    "access_control",
    ".",
    "BaseAccessControlManager"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  _locators",
    "  =",
    "  locator",
    "  .",
    "- ControlInfoWidget",
    "+ WidgetInfoSettingsButton"
   ],
   "trigger": [
    "_locators",
    "=",
    "locator",
    ".",
    "ControlInfoWidget"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  Test",
    "- behaviour",
    "+ behavior"
   ],
   "trigger": [
    "Test",
    "behaviour"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  PORT",
    "  =",
    "- 7000",
    "+ portpicker",
    "+ .",
    "+ PickUnusedPort",
    "+ (",
    "+ )"
   ],
   "trigger": [
    "PORT",
    "=",
    "7000"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- assertProtoEqual",
    "+ assertRDFValueEqualToProto",
    "  (",
    "  fast_proto",
    "  ,",
    "  proto",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "assertProtoEqual",
    "(",
    "fast_proto",
    ",",
    "proto",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  ContextImplication",
    "  .",
    "  source_context_id",
    "- ==",
    "+ is",
    "  None"
   ],
   "trigger": [
    "ContextImplication",
    ".",
    "source_context_id",
    "==",
    "None"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- unicode",
    "+ str",
    "  (",
    "  item",
    "  )"
   ],
   "trigger": [
    "=",
    "unicode",
    "(",
    "item",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- abstract",
    "+ abstract_utils",
    "  .",
    "  get_atomic_value",
    "  ("
   ],
   "trigger": [
    "=",
    "abstract",
    ".",
    "get_atomic_value",
    "("
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "  rdfvalue",
    "  .",
    "- Config",
    "+ AttributedDict",
    "  (",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "Config",
    "(",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "  rdfvalue",
    "  .",
    "  (",
    "- \"aff4:/flows/W:NannyMessage\"",
    "+ flow_name",
    "+ =",
    "+ \"NannyMessage\"",
    "  )"
   ],
   "trigger": [
    "=",
    "rdfvalue",
    ".",
    "(",
    "\"aff4:/flows/W:NannyMessage\"",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "- JsonType",
    "+ LongJsonType"
   ],
   "trigger": [
    ".",
    "JsonType"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "- HTFConfig",
    "+ Config",
    "  (",
    "  )"
   ],
   "trigger": [
    ".",
    "HTFConfig",
    "(",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "  (",
    "- unicode",
    "+ str",
    "  (",
    "  ."
   ],
   "trigger": [
    ".",
    "(",
    "unicode",
    "(",
    "."
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "  (",
    "- unicode",
    "+ str",
    "  (",
    "  )",
    "  )"
   ],
   "trigger": [
    ".",
    "(",
    "unicode",
    "(",
    ")",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "- 'control_assessments'",
    "+ 'assessments'",
    "  ,",
    "  )",
    "  ,"
   ],
   "trigger": [
    "(",
    "'control_assessments'",
    ",",
    ")",
    ","
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  (",
    "  models",
    "  .",
    "- ControlAssessment",
    "+ Assessment",
    "  )",
    "  ,"
   ],
   "trigger": [
    "(",
    "models",
    ".",
    "ControlAssessment",
    ")",
    ","
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"row_errors\"",
    "  :",
    "- [",
    "+ {"
   ],
   "trigger": [
    "\"row_errors\"",
    ":",
    "["
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"finding\"",
    "  :",
    "  [",
    "- \"Configured protocols: [2, 1]\"",
    "+ \"Configured protocols: 2,1\"",
    "  ]",
    "  ,"
   ],
   "trigger": [
    "\"finding\"",
    ":",
    "[",
    "\"Configured",
    "protocols:",
    "[2,",
    "1]\"",
    "]",
    ","
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"Crash Details\"",
    "  ,",
    "- \"aff4:/flows/W:CrashHandler\"",
    "+ \"aff4:/flows/\"",
    "+ ,",
    "+ \":CrashHandler\"",
    "  ,"
   ],
   "trigger": [
    "\"Crash",
    "Details\"",
    ",",
    "\"aff4:/flows/W:CrashHandler\"",
    ","
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"CLIENT_CRASH\"",
    "  ,",
    "- \"aff4:/flows/W:CrashHandler\"",
    "+ \"aff4:/flows/\"",
    "+ ,",
    "+ \":CrashHandler\"",
    "  ,"
   ],
   "trigger": [
    "\"CLIENT_CRASH\"",
    ",",
    "\"aff4:/flows/W:CrashHandler\"",
    ","
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"--arch\"",
    "  ,",
    "  required",
    "  =",
    "  True",
    "  ,",
    "  choices",
    "  =",
    "  maintenance_utils",
    "  .",
    "- SUPPORTED_ARCHICTECTURES",
    "+ SUPPORTED_ARCHITECTURES",
    "  ,"
   ],
   "trigger": [
    "\"--arch\"",
    ",",
    "required",
    "=",
    "True",
    ",",
    "choices",
    "=",
    "maintenance_utils",
    ".",
    "SUPPORTED_ARCHICTECTURES",
    ","
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"%s: Uploaded %s/%s\"",
    "  ,",
    "  self",
    "  .",
    "- path",
    "+ to_path",
    "+ (",
    "+ )",
    "  ,",
    "  offset",
    "  ,",
    "  file_length",
    "  )"
   ],
   "trigger": [
    "\"%s:",
    "Uploaded",
    "%s/%s\"",
    ",",
    "self",
    ".",
    "path",
    ",",
    "offset",
    ",",
    "file_length",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- gs",
    "+ app",
    "  .",
    "+ logger",
    "+ .",
    "  ("
   ],
   "trigger": [
    "gs",
    ".",
    "("
   ],
   "count": 10,
   "accuracy": 0.8333333333333334
  },
  {
   "code": [
    "- abstract",
    "+ abstract_utils",
    "  .",
    "  ,",
    "  )"
   ],
   "trigger": [
    "abstract",
    ".",
    ",",
    ")"
   ],
   "count": 10,
   "accuracy": 0.8333333333333334
  },
  {
   "code": [
    "- .",
    "  logger",
    "  .",
    "- error",
    "+ exception",
    "  (",
    "  )"
   ],
   "trigger": [
    ".",
    "logger",
    ".",
    "error",
    "(",
    ")"
   ],
   "count": 10,
   "accuracy": 0.8333333333333334
  },
  {
   "code": [
    "  =",
    "  .",
    "- [",
    "+ (",
    "  ."
   ],
   "trigger": [
    "=",
    ".",
    "[",
    "."
   ],
   "count": 10,
   "accuracy": 0.8333333333333334
  },
  {
   "code": [
    "  \"\"",
    "+ Generates",
    "- Handler",
    "- for",
    "  the",
    "- <missing 'in'>",
    "- <missing ':'>",
    "- page",
    "  ."
   ],
   "trigger": [
    "\"\"",
    "Handler",
    "for",
    "the",
    "<missing",
    "'in'>",
    "<missing",
    "':'>",
    "page",
    "."
   ],
   "count": 10,
   "accuracy": 0.8333333333333334
  },
  {
   "code": [
    "  \"\"",
    "+ Generates",
    "- Handler",
    "- for",
    "  the",
    "- <missing 'in'>",
    "- <missing ':'>",
    "+ template",
    "  ."
   ],
   "trigger": [
    "\"\"",
    "Handler",
    "for",
    "the",
    "<missing",
    "'in'>",
    "<missing",
    "':'>",
    "."
   ],
   "count": 10,
   "accuracy": 0.8333333333333334
  },
  {
   "code": [
    "- unicode",
    "+ str",
    "  (",
    "  item",
    "  )",
    "  )"
   ],
   "trigger": [
    "unicode",
    "(",
    "item",
    ")",
    ")"
   ],
   "count": 10,
   "accuracy": 0.75
  },
  {
   "code": [
    "  =",
    "- unicode",
    "+ str",
    "  (",
    "  .",
    "  )"
   ],
   "trigger": [
    "=",
    "unicode",
    "(",
    ".",
    ")"
   ],
   "count": 10,
   "accuracy": 0.7142857142857143
  },
  {
   "code": [
    "  .",
    "- abstract",
    "+ abstract_utils",
    "  .",
    "  ,"
   ],
   "trigger": [
    ".",
    "abstract",
    ".",
    ","
   ],
   "count": 10,
   "accuracy": 0.7142857142857143
  },
  {
   "code": [
    "  .",
    "  (",
    "- abstract",
    "+ abstract_utils",
    "  .",
    "  )"
   ],
   "trigger": [
    ".",
    "(",
    "abstract",
    ".",
    ")"
   ],
   "count": 10,
   "accuracy": 0.7142857142857143
  },
  {
   "code": [
    "+ from",
    "  import",
    "- re"
   ],
   "trigger": [
    "import",
    "re"
   ],
   "count": 10,
   "accuracy": 0.625
  },
  {
   "code": [
    "  return",
    "- unicode",
    "+ str",
    "  (",
    "  .",
    "  )",
    "  )"
   ],
   "trigger": [
    "return",
    "unicode",
    "(",
    ".",
    ")",
    ")"
   ],
   "count": 10,
   "accuracy": 0.625
  },
  {
   "code": [
    "  class",
    "  (",
    "- ArtifactTestHelper",
    "+ ArtifactTest",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "(",
    "ArtifactTestHelper",
    ")",
    ":"
   ],
   "count": 10,
   "accuracy": 0.5555555555555556
  },
  {
   "code": [
    "  artifact_test",
    "  .",
    "- ArtifactTestHelper",
    "+ ArtifactTest",
    "  )"
   ],
   "trigger": [
    "artifact_test",
    ".",
    "ArtifactTestHelper",
    ")"
   ],
   "count": 10,
   "accuracy": 0.5555555555555556
  },
  {
   "code": [
    "  .",
    "- abstract",
    "+ abstract_utils",
    "  .",
    "  T"
   ],
   "trigger": [
    ".",
    "abstract",
    ".",
    "T"
   ],
   "count": 10,
   "accuracy": 0.5555555555555556
  },
  {
   "code": [
    "  from",
    "- flask",
    "+ logging",
    "  import",
    "- current_app",
    "+ getLogger"
   ],
   "trigger": [
    "from",
    "flask",
    "import",
    "current_app"
   ],
   "count": 10,
   "accuracy": 0.5263157894736842
  },
  {
   "code": [
    "  from",
    "- flask",
    "+ logging",
    "  import",
    "- current_app",
    "+ getLogger"
   ],
   "trigger": [
    "from",
    "flask",
    "import",
    "current_app"
   ],
   "count": 10,
   "accuracy": 0.5263157894736842
  },
  {
   "code": [
    "+ from",
    "  import",
    "- time"
   ],
   "trigger": [
    "import",
    "time"
   ],
   "count": 10,
   "accuracy": 0.5
  },
  {
   "code": [
    "- pass",
    "+ self",
    "+ .",
    "+ (",
    "+ )"
   ],
   "trigger": [
    "pass"
   ],
   "count": 10,
   "accuracy": 0.47619047619047616
  },
  {
   "code": [
    "  (",
    "- str",
    "+ basestring",
    "  )",
    "  :"
   ],
   "trigger": [
    "(",
    "str",
    ")",
    ":"
   ],
   "count": 10,
   "accuracy": 0.43478260869565216
  },
  {
   "code": [
    "- logging",
    "+ logger",
    "  .",
    "  (",
    "  ,",
    "  )"
   ],
   "trigger": [
    "logging",
    ".",
    "(",
    ",",
    ")"
   ],
   "count": 10,
   "accuracy": 0.38461538461538464
  },
  {
   "code": [
    "  orm",
    "  .",
    "- joinedload",
    "+ subqueryload",
    "  (",
    "  )",
    "  )"
   ],
   "trigger": [
    "orm",
    ".",
    "joinedload",
    "(",
    ")",
    ")"
   ],
   "count": 10,
   "accuracy": 0.37037037037037035
  },
  {
   "code": [
    "  raise",
    "+ (",
    "- .",
    "  )"
   ],
   "trigger": [
    "raise",
    ".",
    ")"
   ],
   "count": 10,
   "accuracy": 0.3448275862068966
  },
  {
   "code": [
    "  class",
    "  (",
    "- object",
    "+ utils",
    "+ .",
    "+ VirtualMachineWeakrefMixin",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "(",
    "object",
    ")",
    ":"
   ],
   "count": 10,
   "accuracy": 0.29411764705882354
  },
  {
   "code": [
    "- abstract",
    "+ abstract_utils",
    "  .",
    "  :"
   ],
   "trigger": [
    "abstract",
    ".",
    ":"
   ],
   "count": 10,
   "accuracy": 0.23809523809523808
  },
  {
   "code": [
    "  ,",
    "- abstract",
    "+ abstract_utils",
    "  ."
   ],
   "trigger": [
    ",",
    "abstract",
    "."
   ],
   "count": 10,
   "accuracy": 0.21739130434782608
  },
  {
   "code": [
    "- _copy_and_repo",
    "+ _copy_and_reop",
    "  (",
    "  ,",
    "  IR_node",
    "  )"
   ],
   "trigger": [
    "_copy_and_repo",
    "(",
    ",",
    "IR_node",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- _copy_and_repo",
    "+ _copy_and_reop",
    "  (",
    "  ,",
    "  )"
   ],
   "trigger": [
    "_copy_and_repo",
    "(",
    ",",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- ServiceHealthReportCreatedEvent",
    "+ ServiceNewHealthReportEvent",
    "  ,",
    "  ServiceHealthReportExpiredEvent"
   ],
   "trigger": [
    "ServiceHealthReportCreatedEvent",
    ",",
    "ServiceHealthReportExpiredEvent"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"is_cohorted\"",
    "+ \"is_divided\"",
    "  :",
    "  ,"
   ],
   "trigger": [
    "\"is_cohorted\"",
    ":",
    ","
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"\"\"Gets or sets the id property.\"\"\""
   ],
   "trigger": [
    "\"\"\"Gets",
    "or",
    "sets",
    "the",
    "id",
    "property.\"\"\""
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"\"\"\n    Accepts incoming messages and routes them to a configured output\n    \"\"\"",
    "+ \"\"\"Accepts incoming messages and routes them to a configured output\"\"\""
   ],
   "trigger": [
    "\"\"\"\n",
    "",
    "",
    "",
    "Accepts",
    "incoming",
    "messages",
    "and",
    "routes",
    "them",
    "to",
    "a",
    "configured",
    "output\n",
    "",
    "",
    "",
    "\"\"\""
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  Factory",
    "- and",
    "- instance",
    "- resolving",
    "  for",
    "- <missing 'in'>",
    "- <missing ':'>"
   ],
   "trigger": [
    "Factory",
    "and",
    "instance",
    "resolving",
    "for",
    "<missing",
    "'in'>",
    "<missing",
    "':'>"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "+ \"\"\"Start receiving messages from streaming endpoint\"\"\"",
    "+ \"\"\"Stop incoming messages from streaming endpoint\"\"\"",
    "  \"\"",
    "  Send",
    "  messages",
    "  onwards"
   ],
   "trigger": [
    "\"\"",
    "Send",
    "messages",
    "onwards"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  uri_path_start",
    "  =",
    "  'http://localhost:'",
    "  +",
    "  str",
    "  (",
    "  self",
    "  .",
    "  port",
    "  )",
    "  +",
    "- path",
    "+ url_path"
   ],
   "trigger": [
    "uri_path_start",
    "=",
    "'http://localhost:'",
    "+",
    "str",
    "(",
    "self",
    ".",
    "port",
    ")",
    "+",
    "path"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  python_requires",
    "  =",
    "- '>=2.7,!=3.4,!=3.3,!=3.2,!=3.1,!=3.0,<=3.7'",
    "+ '>=2.7,!=3.4,!=3.3,!=3.2,!=3.1,!=3.0,<3.8'",
    "  ,"
   ],
   "trigger": [
    "python_requires",
    "=",
    "'>=2.7,!=3.4,!=3.3,!=3.2,!=3.1,!=3.0,<=3.7'",
    ","
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  msg",
    "  =",
    "  _",
    "  (",
    "- 'You can keep working for a higher grade, or request your certificate now.'",
    "+ 'You can continue working on the course.'",
    "  )"
   ],
   "trigger": [
    "msg",
    "=",
    "_",
    "(",
    "'You",
    "can",
    "keep",
    "working",
    "for",
    "a",
    "higher",
    "grade,",
    "or",
    "request",
    "your",
    "certificate",
    "now.'",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  href",
    "  =",
    "- 'http://edx.readthedocs.org/projects/edx-partner-course-staff/en/latest/'",
    "+ 'http://edx.readthedocs.org/projects/open-edx-building-and-running-a-course/en/'",
    "+ 'open-release-ficus.master/'"
   ],
   "trigger": [
    "href",
    "=",
    "'http://edx.readthedocs.org/projects/edx-partner-course-staff/en/latest/'"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  assert_equal",
    "  (",
    "  sum",
    "  ,",
    "- 4594",
    "+ 30513",
    "  ,",
    "  \"sum of all features is incorrect!\"",
    "  )"
   ],
   "trigger": [
    "assert_equal",
    "(",
    "sum",
    ",",
    "4594",
    ",",
    "\"sum",
    "of",
    "all",
    "features",
    "is",
    "incorrect!\"",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  assert",
    "  output4",
    "  .",
    "  shape",
    "  ==",
    "  (",
    "  5",
    "  ,",
    "- 7",
    "+ 13",
    "  )"
   ],
   "trigger": [
    "assert",
    "output4",
    ".",
    "shape",
    "==",
    "(",
    "5",
    ",",
    "7",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  assert",
    "  features",
    "  .",
    "  shape",
    "  ==",
    "  (",
    "  248",
    "  ,",
    "- 409",
    "+ 802",
    "  )"
   ],
   "trigger": [
    "assert",
    "features",
    ".",
    "shape",
    "==",
    "(",
    "248",
    ",",
    "409",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  assert",
    "  features",
    "  .",
    "  shape",
    "  ==",
    "  (",
    "  248",
    "  ,",
    "- 259",
    "+ 652",
    "  )"
   ],
   "trigger": [
    "assert",
    "features",
    ".",
    "shape",
    "==",
    "(",
    "248",
    ",",
    "259",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  assert",
    "  X",
    "  .",
    "  shape",
    "  ==",
    "  (",
    "  25",
    "  ,",
    "- 22",
    "+ 117",
    "  )"
   ],
   "trigger": [
    "assert",
    "X",
    ".",
    "shape",
    "==",
    "(",
    "25",
    ",",
    "22",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  assert",
    "  X",
    "  .",
    "  shape",
    "  ==",
    "  (",
    "  25",
    "  ,",
    "- 21",
    "+ 116",
    "  )"
   ],
   "trigger": [
    "assert",
    "X",
    ".",
    "shape",
    "==",
    "(",
    "25",
    ",",
    "21",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  EDX_PPA_KEY_SERVER",
    "  =",
    "- \"hkp://pgp.mit.edu:80\"",
    "+ \"keyserver.ubuntu.com\""
   ],
   "trigger": [
    "EDX_PPA_KEY_SERVER",
    "=",
    "\"hkp://pgp.mit.edu:80\""
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- '5.0.0'",
    "+ '6.0.0'"
   ],
   "trigger": [
    "=",
    "'5.0.0'"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "  open",
    "  (",
    "  ,",
    "- 'r'",
    "+ 'rU'",
    "  )"
   ],
   "trigger": [
    "=",
    "open",
    "(",
    ",",
    "'r'",
    ")"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  :",
    "  type",
    "  :",
    "  list",
    "  of",
    "- number",
    "+ int"
   ],
   "trigger": [
    ":",
    "type",
    ":",
    "list",
    "of",
    "number"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  :",
    "  param",
    "  name",
    "  :",
    "+ Name",
    "+ of",
    "+ the",
    "  Gateway",
    "  resource",
    "- name",
    "  ."
   ],
   "trigger": [
    ":",
    "param",
    "name",
    ":",
    "Gateway",
    "resource",
    "name",
    "."
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "- attempted",
    "+ first_attempted"
   ],
   "trigger": [
    ".",
    "attempted"
   ],
   "count": 10,
   "accuracy": 1.0
  },
  {
   "code": [
    "- +=",
    "- [",
    "+ .",
    "+ append",
    "+ (",
    "- ]",
    "+ )"
   ],
   "trigger": [
    "+=",
    "[",
    "]"
   ],
   "count": 10,
   "accuracy": 0.8333333333333334
  },
  {
   "code": [
    "  version",
    "  =",
    "- '4.0.0'",
    "+ '5.0.0'",
    "  ,"
   ],
   "trigger": [
    "version",
    "=",
    "'4.0.0'",
    ","
   ],
   "count": 10,
   "accuracy": 0.8333333333333334
  },
  {
   "code": [
    "  VERSION",
    "  =",
    "- \"6.4.0.23\"",
    "+ \"6.4.0.35\""
   ],
   "trigger": [
    "VERSION",
    "=",
    "\"6.4.0.23\""
   ],
   "count": 10,
   "accuracy": 0.7142857142857143
  },
  {
   "code": [
    "  version",
    "  =",
    "- '0.10.0'",
    "+ '0.11.0'"
   ],
   "trigger": [
    "version",
    "=",
    "'0.10.0'"
   ],
   "count": 10,
   "accuracy": 0.625
  },
  {
   "code": [
    "- logging",
    "+ logger",
    "  ."
   ],
   "trigger": [
    "logging",
    "."
   ],
   "count": 10,
   "accuracy": 0.38461538461538464
  },
  {
   "code": [
    "- logging",
    "+ logger",
    "  .",
    "  ("
   ],
   "trigger": [
    "logging",
    ".",
    "("
   ],
   "count": 10,
   "accuracy": 0.38461538461538464
  },
  {
   "code": [
    "- _copy_and_repo",
    "+ _copy_and_reop",
    "  (",
    "  ,",
    "  IR_node",
    "  ,",
    "  )"
   ],
   "trigger": [
    "_copy_and_repo",
    "(",
    ",",
    "IR_node",
    ",",
    ")"
   ],
   "count": 9,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "  i18n",
    "- .",
    "+ import",
    "  config",
    "- import",
    "- CONFIGURATION"
   ],
   "trigger": [
    "from",
    "i18n",
    ".",
    "config",
    "import",
    "CONFIGURATION"
   ],
   "count": 9,
   "accuracy": 1.0
  },
  {
   "code": [
    "  display_course",
    "  .",
    "- display_name_with_default",
    "+ display_number_with_default",
    "  ,"
   ],
   "trigger": [
    "display_course",
    ".",
    "display_name_with_default",
    ","
   ],
   "count": 9,
   "accuracy": 1.0
  },
  {
   "code": [
    "  course_name",
    "  =",
    "  self",
    "  .",
    "  course",
    "  .",
    "- display_number_with_default",
    "+ display_name_with_default"
   ],
   "trigger": [
    "course_name",
    "=",
    "self",
    ".",
    "course",
    ".",
    "display_number_with_default"
   ],
   "count": 9,
   "accuracy": 1.0
  },
  {
   "code": [
    "  course_name",
    "  =",
    "  display_course",
    "  .",
    "- display_number_with_default",
    "+ display_name_with_default"
   ],
   "trigger": [
    "course_name",
    "=",
    "display_course",
    ".",
    "display_number_with_default"
   ],
   "count": 9,
   "accuracy": 1.0
  },
  {
   "code": [
    "  CoremlParser",
    "  .",
    "- _copy_and_repo",
    "+ _copy_and_reop",
    "  (",
    "  ,",
    "  IR_node",
    "  )"
   ],
   "trigger": [
    "CoremlParser",
    ".",
    "_copy_and_repo",
    "(",
    ",",
    "IR_node",
    ")"
   ],
   "count": 9,
   "accuracy": 1.0
  },
  {
   "code": [
    "  CoremlParser",
    "  .",
    "- _copy_and_repo",
    "+ _copy_and_reop",
    "  (",
    "  ,",
    "  )"
   ],
   "trigger": [
    "CoremlParser",
    ".",
    "_copy_and_repo",
    "(",
    ",",
    ")"
   ],
   "count": 9,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- image_path",
    "+ test_input_path"
   ],
   "trigger": [
    "=",
    "image_path"
   ],
   "count": 9,
   "accuracy": 1.0
  },
  {
   "code": [
    "  ,",
    "- 404",
    "+ 302"
   ],
   "trigger": [
    ",",
    "404"
   ],
   "count": 9,
   "accuracy": 0.6923076923076923
  },
  {
   "code": [
    "- logging",
    "+ logger",
    "  .",
    "  )"
   ],
   "trigger": [
    "logging",
    ".",
    ")"
   ],
   "count": 9,
   "accuracy": 0.42857142857142855
  },
  {
   "code": [
    "- logging",
    "+ logger",
    "  .",
    "  (",
    "  )"
   ],
   "trigger": [
    "logging",
    ".",
    "(",
    ")"
   ],
   "count": 9,
   "accuracy": 0.42857142857142855
  },
  {
   "code": [
    "- get_cohort_id",
    "+ get_group_id_for_user",
    "  (",
    "  user",
    "  ,",
    "  )"
   ],
   "trigger": [
    "get_cohort_id",
    "(",
    "user",
    ",",
    ")"
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "- elif",
    "+ if",
    "  section",
    "  ==",
    "  'Arguments'",
    "  :"
   ],
   "trigger": [
    "elif",
    "section",
    "==",
    "'Arguments'",
    ":"
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "- elif",
    "+ if",
    "  has_pass",
    "  :"
   ],
   "trigger": [
    "elif",
    "has_pass",
    ":"
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "- 'broker'",
    "+ 'client'",
    "  :",
    "  {"
   ],
   "trigger": [
    "'broker'",
    ":",
    "{"
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "- 'Content-Length: 120\\r\\n\\r\\n{\"params\": {\"ScriptDatabaseOptions\": \"True\"}, \"jsonrpc\": \"2.0\", \"method\": \"scriptingService/ScriptDatabase\", \"id\": null}'",
    "+ b'Content-Length: 120\\r\\n\\r\\n{\"id\": null, \"jsonrpc\": \"2.0\", \"method\": \"scriptingService/ScriptDatabase\", \"params\": {\"ScriptDatabaseOptions\": \"True\"}}'"
   ],
   "trigger": [
    "'Content-Length:",
    "120\\r\\n\\r\\n{\"params\":",
    "{\"ScriptDatabaseOptions\":",
    "\"True\"},",
    "\"jsonrpc\":",
    "\"2.0\",",
    "\"method\":",
    "\"scriptingService/ScriptDatabase\",",
    "\"id\":",
    "null}'"
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "- '1\\tpython-line\\tspam.py\\t10\\tNone\\tNone\\tNone'",
    "+ '1\\tpython-line\\tspam.py\\t10\\tNone\\tNone\\tNone\\tNone'",
    "  )",
    "  )"
   ],
   "trigger": [
    "'1\\tpython-line\\tspam.py\\t10\\tNone\\tNone\\tNone'",
    ")",
    ")"
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"\"\"Gets or sets the id property.\"\"\"",
    "+ \"\"\"The id property.\n        \n        Returns:\n            (string). the property value. (defaults to: None)\n        \"\"\""
   ],
   "trigger": [
    "\"\"\"Gets",
    "or",
    "sets",
    "the",
    "id",
    "property.\"\"\""
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"\"\"Gets or sets the id property.\"\"\"",
    "+ \"\"\"The id property.\n        \n        Returns:\n            (string). the property value. (defaults to: None)\n        \"\"\"",
    "+ \"\"\"The id property.\n        \n        Args:\n            value (string). the property value.\n        \"\"\""
   ],
   "trigger": [
    "\"\"\"Gets",
    "or",
    "sets",
    "the",
    "id",
    "property.\"\"\""
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"\"\"\nInputReader\n\"\"\"",
    "+ \"\"\" InputReader \"\"\"",
    "- \"\"\"\n    Accepts incoming messages and routes them to a configured output\n    \"\"\"",
    "+ \"\"\"Accepts incoming messages and routes them to a configured output\"\"\""
   ],
   "trigger": [
    "\"\"\"\nInputReader\n\"\"\"",
    "\"\"\"\n",
    "",
    "",
    "",
    "Accepts",
    "incoming",
    "messages",
    "and",
    "routes",
    "them",
    "to",
    "a",
    "configured",
    "output\n",
    "",
    "",
    "",
    "\"\"\""
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"\"\"\nFactory for OutputWriter\n\"\"\"",
    "+ \"\"\" Factory for OutputWriter \"\"\""
   ],
   "trigger": [
    "\"\"\"\nFactory",
    "for",
    "OutputWriter\n\"\"\""
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"\"\"\n        Start receiving messages\n        \"\"\"",
    "+ \"\"\"Start receiving messages from streaming endpoint\"\"\"",
    "- \"\"\"\n        Stop incoming messages from server\n        \"\"\"",
    "+ \"\"\"Stop incoming messages from streaming endpoint\"\"\"",
    "  \"\"",
    "  Send",
    "  messages",
    "  onwards"
   ],
   "trigger": [
    "\"\"\"\n",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "Start",
    "receiving",
    "messages\n",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "\"\"\"",
    "\"\"\"\n",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "Stop",
    "incoming",
    "messages",
    "from",
    "server\n",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "\"\"\"",
    "\"\"",
    "Send",
    "messages",
    "onwards"
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "+ from",
    "+ enum",
    "  import",
    "- enum",
    "+ Enum",
    "  class",
    "  ContentTypes",
    "  (",
    "- enum",
    "+ Enum",
    "  )",
    "  :"
   ],
   "trigger": [
    "import",
    "enum",
    "class",
    "ContentTypes",
    "(",
    "enum",
    ")",
    ":"
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "  version",
    "  =",
    "- '0.11.1'",
    "+ '0.11.2'"
   ],
   "trigger": [
    "version",
    "=",
    "'0.11.1'"
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- locations_to_scores",
    "+ problem_scores"
   ],
   "trigger": [
    "self",
    ".",
    "locations_to_scores"
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "  patch",
    "  (",
    "- 'lms.djangoapps.instructor_task.tasks_helper._get_current_task'",
    "+ 'lms.djangoapps.instructor_task.tasks_helper.runner._get_current_task'",
    "  )"
   ],
   "trigger": [
    "patch",
    "(",
    "'lms.djangoapps.instructor_task.tasks_helper._get_current_task'",
    ")"
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "+ int",
    "+ (",
    "  axis",
    "+ )",
    "  ==",
    "- \"-1\"",
    "+ -",
    "+ 1",
    "  :"
   ],
   "trigger": [
    "if",
    "axis",
    "==",
    "\"-1\"",
    ":"
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "  .",
    "- treefeaturizer",
    "+ _treefeaturizer",
    "  import"
   ],
   "trigger": [
    "from",
    ".",
    "treefeaturizer",
    "import"
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "  .",
    "- onevsrestclassifier",
    "+ _onevsrestclassifier",
    "  import"
   ],
   "trigger": [
    "from",
    ".",
    "onevsrestclassifier",
    "import"
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "  .",
    "- naivebayesclassifier",
    "+ _naivebayesclassifier",
    "  import"
   ],
   "trigger": [
    "from",
    ".",
    "naivebayesclassifier",
    "import"
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "  .",
    "- mutualinformationselector",
    "+ _mutualinformationselector",
    "  import"
   ],
   "trigger": [
    "from",
    ".",
    "mutualinformationselector",
    "import"
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "  .",
    "- countselector",
    "+ _countselector",
    "  import"
   ],
   "trigger": [
    "from",
    ".",
    "countselector",
    "import"
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "  .",
    "  .",
    "- mutualinformationselector",
    "+ _mutualinformationselector",
    "  import"
   ],
   "trigger": [
    "from",
    ".",
    ".",
    "mutualinformationselector",
    "import"
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "  for",
    "  index",
    "  in",
    "  range",
    "  (",
    "- 2",
    "+ 3",
    "  )",
    "  :"
   ],
   "trigger": [
    "for",
    "index",
    "in",
    "range",
    "(",
    "2",
    ")",
    ":"
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "  course_org_filter",
    "  =",
    "  configuration_helpers",
    "  .",
    "- get_value",
    "+ get_current_site_orgs",
    "  (",
    "- 'course_org_filter'",
    "  )"
   ],
   "trigger": [
    "course_org_filter",
    "=",
    "configuration_helpers",
    ".",
    "get_value",
    "(",
    "'course_org_filter'",
    ")"
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "  IR_node",
    "  .",
    "  attr",
    "  [",
    "- 'hasBias'",
    "+ 'use_bias'",
    "  ]",
    "  .",
    "  b"
   ],
   "trigger": [
    "IR_node",
    ".",
    "attr",
    "[",
    "'hasBias'",
    "]",
    ".",
    "b"
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "  IR_node",
    "  .",
    "  attr",
    "  [",
    "- 'hasBias'",
    "+ 'use_bias'",
    "  ]",
    "  ."
   ],
   "trigger": [
    "IR_node",
    ".",
    "attr",
    "[",
    "'hasBias'",
    "]",
    "."
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "  CoremlParser",
    "  .",
    "- _copy_and_repo",
    "+ _copy_and_reop",
    "  (",
    "  ,",
    "  IR_node",
    "  ,",
    "  )"
   ],
   "trigger": [
    "CoremlParser",
    ".",
    "_copy_and_repo",
    "(",
    ",",
    "IR_node",
    ",",
    ")"
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- '0.6.2'",
    "+ '0.6.4'"
   ],
   "trigger": [
    "=",
    "'0.6.2'"
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "  :",
    "  {",
    "  'key'",
    "  :",
    "  ,",
    "  'type'",
    "  :",
    "- 'int'",
    "+ 'str'",
    "  }",
    "  ,"
   ],
   "trigger": [
    ":",
    "{",
    "'key'",
    ":",
    ",",
    "'type'",
    ":",
    "'int'",
    "}",
    ","
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "  :",
    "  {",
    "  'key'",
    "  :",
    "  ,",
    "  'type'",
    "  :",
    "- '[int]'",
    "+ 'str'",
    "  }",
    "  ,"
   ],
   "trigger": [
    ":",
    "{",
    "'key'",
    ":",
    ",",
    "'type'",
    ":",
    "'[int]'",
    "}",
    ","
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "  :",
    "  {",
    "  'key'",
    "  :",
    "  ,",
    "  'type'",
    "  :",
    "- '[DeployPhase]'",
    "+ '[object]'",
    "  }",
    "  ,"
   ],
   "trigger": [
    ":",
    "{",
    "'key'",
    ":",
    ",",
    "'type'",
    ":",
    "'[DeployPhase]'",
    "}",
    ","
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "  :",
    "  type",
    "  :",
    "  ~",
    "  azure",
    "  .",
    "  servicefabric",
    "  .",
    "  models",
    "  .",
    "- BackupEpoch",
    "+ Epoch"
   ],
   "trigger": [
    ":",
    "type",
    ":",
    "~",
    "azure",
    ".",
    "servicefabric",
    ".",
    "models",
    ".",
    "BackupEpoch"
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "  .",
    "- grammar_options",
    "+ grammar",
    "  ."
   ],
   "trigger": [
    ".",
    "grammar_options",
    "."
   ],
   "count": 8,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "  .",
    "- pipeline",
    "+ _pipeline",
    "  import"
   ],
   "trigger": [
    "from",
    ".",
    "pipeline",
    "import"
   ],
   "count": 8,
   "accuracy": 0.8
  },
  {
   "code": [
    "  [",
    "- 'api-version=6.0'",
    "+ 'api-version=6.4'",
    "  ,",
    "  'ContinuationToken=ct'",
    "  ]",
    "  )"
   ],
   "trigger": [
    "[",
    "'api-version=6.0'",
    ",",
    "'ContinuationToken=ct'",
    "]",
    ")"
   ],
   "count": 8,
   "accuracy": 0.8
  },
  {
   "code": [
    "  self",
    "  .",
    "  ,",
    "- 404",
    "+ 302",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    ",",
    "404",
    ")"
   ],
   "count": 8,
   "accuracy": 0.7272727272727273
  },
  {
   "code": [
    "  self",
    "  .",
    "  (",
    "  ,",
    "- 404",
    "+ 302",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "(",
    ",",
    "404",
    ")"
   ],
   "count": 8,
   "accuracy": 0.7272727272727273
  },
  {
   "code": [
    "  :",
    "  {",
    "  'key'",
    "  :",
    "  ,",
    "  'type'",
    "  :",
    "- 'number'",
    "+ 'int'",
    "  }",
    "  ,"
   ],
   "trigger": [
    ":",
    "{",
    "'key'",
    ":",
    ",",
    "'type'",
    ":",
    "'number'",
    "}",
    ","
   ],
   "count": 8,
   "accuracy": 0.4
  },
  {
   "code": [
    "- 2",
    "+ 1"
   ],
   "trigger": [
    "2"
   ],
   "count": 8,
   "accuracy": 0.36363636363636365
  },
  {
   "code": [
    "  =",
    "- '0.6.0'",
    "+ '0.6.2'"
   ],
   "trigger": [
    "=",
    "'0.6.0'"
   ],
   "count": 8,
   "accuracy": 0.3333333333333333
  },
  {
   "code": [
    "  :",
    "  type",
    "  :",
    "- int",
    "+ str"
   ],
   "trigger": [
    ":",
    "type",
    ":",
    "int"
   ],
   "count": 8,
   "accuracy": 0.2857142857142857
  },
  {
   "code": [
    "  from",
    "+ ."
   ],
   "trigger": [
    "from"
   ],
   "count": 8,
   "accuracy": 0.26666666666666666
  },
  {
   "code": [
    "  =",
    "- False",
    "+ None"
   ],
   "trigger": [
    "=",
    "False"
   ],
   "count": 8,
   "accuracy": 0.21621621621621623
  },
  {
   "code": [
    "- else",
    "+ elif",
    "  :"
   ],
   "trigger": [
    "else",
    ":"
   ],
   "count": 7,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "  django",
    "  .",
    "+ urls",
    "- core",
    "- .",
    "- urlresolvers",
    "  import",
    "  ,"
   ],
   "trigger": [
    "from",
    "django",
    ".",
    "core",
    ".",
    "urlresolvers",
    "import",
    ","
   ],
   "count": 7,
   "accuracy": 1.0
  },
  {
   "code": [
    "  class",
    "  UnitTestLibraries",
    "  (",
    "- ModuleStoreTestCase",
    "+ CourseTestCase",
    "  )",
    "  :"
   ],
   "trigger": [
    "class",
    "UnitTestLibraries",
    "(",
    "ModuleStoreTestCase",
    ")",
    ":"
   ],
   "count": 7,
   "accuracy": 1.0
  },
  {
   "code": [
    "  status_code",
    "  ,",
    "- 404",
    "+ 302"
   ],
   "trigger": [
    "status_code",
    ",",
    "404"
   ],
   "count": 7,
   "accuracy": 0.875
  },
  {
   "code": [
    "  self",
    "  .",
    "  (",
    "  .",
    "  ,",
    "- 404",
    "+ 302",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "(",
    ".",
    ",",
    "404",
    ")"
   ],
   "count": 7,
   "accuracy": 0.7777777777777778
  },
  {
   "code": [
    "  self",
    "  .",
    "  .",
    "  ,",
    "- 404",
    "+ 302",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    ".",
    ",",
    "404",
    ")"
   ],
   "count": 7,
   "accuracy": 0.6363636363636364
  },
  {
   "code": [
    "- user_cohort_id",
    "+ user_group_id",
    "  ,"
   ],
   "trigger": [
    "user_cohort_id",
    ","
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- print_stderr",
    "+ print",
    "  (",
    "  self",
    "  .",
    "  graph",
    "  )"
   ],
   "trigger": [
    "print_stderr",
    "(",
    "self",
    ".",
    "graph",
    ")"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- is_commentable_cohorted",
    "+ is_commentable_divided"
   ],
   "trigger": [
    "is_commentable_cohorted"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- get_cohort_id",
    "+ get_group_id_for_user",
    "  (",
    "  request",
    "  .",
    "  user",
    "  ,",
    "  )"
   ],
   "trigger": [
    "get_cohort_id",
    "(",
    "request",
    ".",
    "user",
    ",",
    ")"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- get_cohort_id",
    "+ get_group_id_for_user",
    "  (",
    "  request",
    "  .",
    "  )"
   ],
   "trigger": [
    "get_cohort_id",
    "(",
    "request",
    ".",
    ")"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- elif",
    "+ if",
    "  int_scheme",
    "  :",
    "- elif",
    "+ if",
    "  singleton_scheme",
    "  :"
   ],
   "trigger": [
    "elif",
    "int_scheme",
    ":",
    "elif",
    "singleton_scheme",
    ":"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- compute_grades_for_course",
    "+ compute_grades_for_course_v2"
   ],
   "trigger": [
    "compute_grades_for_course"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- compile_game",
    "+ _compile_game",
    "  (",
    "  game",
    "  ,",
    "  )"
   ],
   "trigger": [
    "compile_game",
    "(",
    "game",
    ",",
    ")"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- attempted",
    "+ first_attempted",
    "  =",
    "- False",
    "+ None"
   ],
   "trigger": [
    "attempted",
    "=",
    "False"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- Output",
    "- Writer",
    "+ OutputWriter"
   ],
   "trigger": [
    "Output",
    "Writer"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "  storage",
    "+ ."
   ],
   "trigger": [
    "from",
    "storage"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- 'knack==0.3.3'",
    "+ 'knack==0.4.1'",
    "  ,"
   ],
   "trigger": [
    "'knack==0.3.3'",
    ","
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- 'knack==0.2.0'",
    "+ 'knack==0.3.3'",
    "  ,"
   ],
   "trigger": [
    "'knack==0.2.0'",
    ","
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- 'is_cohorted'",
    "+ 'is_divided'",
    "  :",
    "  ,"
   ],
   "trigger": [
    "'is_cohorted'",
    ":",
    ","
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- 'Content-Length: 120\\r\\n\\r\\n{\"params\": {\"ScriptDatabaseOptions\": \"True\"}, \"jsonrpc\": \"2.0\", \"method\": \"scriptingService/ScriptDatabase\", \"id\": null}'",
    "- 'Content-Length: 115\\r\\n\\r\\n{\"params\": {\"ScriptCollations\": \"True\"}, \"jsonrpc\": \"2.0\", \"method\": \"scriptingService/ScriptDatabase\", \"id\": null}'",
    "+ b'Content-Length: 120\\r\\n\\r\\n{\"id\": null, \"jsonrpc\": \"2.0\", \"method\": \"scriptingService/ScriptDatabase\", \"params\": {\"ScriptDatabaseOptions\": \"True\"}}'",
    "+ b'Content-Length: 115\\r\\n\\r\\n{\"id\": null, \"jsonrpc\": \"2.0\", \"method\": \"scriptingService/ScriptDatabase\", \"params\": {\"ScriptCollations\": \"True\"}}'",
    "- 'Content-Length: 113\\r\\n\\r\\n{\"params\": {\"ScriptDefaults\": \"True\"}, \"jsonrpc\": \"2.0\", \"method\": \"scriptingService/ScriptDatabase\", \"id\": null}'",
    "+ b'Content-Length: 113\\r\\n\\r\\n{\"id\": null, \"jsonrpc\": \"2.0\", \"method\": \"scriptingService/ScriptDatabase\", \"params\": {\"ScriptDefaults\": \"True\"}}'"
   ],
   "trigger": [
    "'Content-Length:",
    "120\\r\\n\\r\\n{\"params\":",
    "{\"ScriptDatabaseOptions\":",
    "\"True\"},",
    "\"jsonrpc\":",
    "\"2.0\",",
    "\"method\":",
    "\"scriptingService/ScriptDatabase\",",
    "\"id\":",
    "null}'",
    "'Content-Length:",
    "115\\r\\n\\r\\n{\"params\":",
    "{\"ScriptCollations\":",
    "\"True\"},",
    "\"jsonrpc\":",
    "\"2.0\",",
    "\"method\":",
    "\"scriptingService/ScriptDatabase\",",
    "\"id\":",
    "null}'",
    "'Content-Length:",
    "113\\r\\n\\r\\n{\"params\":",
    "{\"ScriptDefaults\":",
    "\"True\"},",
    "\"jsonrpc\":",
    "\"2.0\",",
    "\"method\":",
    "\"scriptingService/ScriptDatabase\",",
    "\"id\":",
    "null}'"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- '1\\tpython-line\\tspam.py\\t10\\tNone\\tNone\\tNone'",
    "+ '1\\tpython-line\\tspam.py\\t10\\tNone\\tNone\\tNone\\tNone'",
    "  )",
    "  ,",
    "  )",
    "  ,"
   ],
   "trigger": [
    "'1\\tpython-line\\tspam.py\\t10\\tNone\\tNone\\tNone'",
    ")",
    ",",
    ")",
    ","
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- '''\n        Gets the default AzureStorageConfig configuration specified by the AZURE_ STORAGE_ACCOUNT and STORAGE_KEY properties.\n        '''",
    "+ \"\"\"Gets the default AzureStorageConfig configuration specified by the\n        AZURE_ STORAGE_ACCOUNT and STORAGE_KEY properties.\"\"\""
   ],
   "trigger": [
    "'''\n",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "Gets",
    "the",
    "default",
    "AzureStorageConfig",
    "configuration",
    "specified",
    "by",
    "the",
    "AZURE_",
    "STORAGE_ACCOUNT",
    "and",
    "STORAGE_KEY",
    "properties.\n",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "'''"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- '''\n        Gets the default AzureCosmosDbConfig configuration specified by the AZURE_ COSMOS_TABLE, COSMOS_ACCOUNT, and COSMOS_KEY properties.\n        '''",
    "+ \"\"\"Gets the default AzureCosmosDbConfig configuration specified by the\n        AZURE_ COSMOS_TABLE, COSMOS_ACCOUNT, and COSMOS_KEY properties.\"\"\""
   ],
   "trigger": [
    "'''\n",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "Gets",
    "the",
    "default",
    "AzureCosmosDbConfig",
    "configuration",
    "specified",
    "by",
    "the",
    "AZURE_",
    "COSMOS_TABLE,",
    "COSMOS_ACCOUNT,",
    "and",
    "COSMOS_KEY",
    "properties.\n",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "'''"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- '''\n        Azure Resource Group\n        '''",
    "+ \"\"\"Azure Resource Group.\n\n        \"\"\""
   ],
   "trigger": [
    "'''\n",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "Azure",
    "Resource",
    "Group\n",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "'''"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"Enrollment Tracks\"",
    "+ \"Enrollment Track Groups\""
   ],
   "trigger": [
    "\"Enrollment",
    "Tracks\""
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"\"\"Initializes the current instance of the object (can be overridden).\"\"\"",
    "- \"\"\"Writes the contents of this object and returns the content as a dict object.\"\"\"",
    "+ \"\"\"Initializes the current instance of the object.\n        \"\"\"",
    "+ \"\"\"Writes the contents of this object and returns the content as a dict object.\n        \n        Returns:\n            (dict). the object that represents the same data as the current instance.\n        \"\"\""
   ],
   "trigger": [
    "\"\"\"Initializes",
    "the",
    "current",
    "instance",
    "of",
    "the",
    "object",
    "(can",
    "be",
    "overridden).\"\"\"",
    "\"\"\"Writes",
    "the",
    "contents",
    "of",
    "this",
    "object",
    "and",
    "returns",
    "the",
    "content",
    "as",
    "a",
    "dict",
    "object.\"\"\""
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"\"\"Gets or sets the name property.\"\"\"",
    "+ \"\"\"The name property.\n        \n        Returns:\n            (string). the property value. (defaults to: None)\n        \"\"\"",
    "+ \"\"\"The name property.\n        \n        Args:\n            value (string). the property value.\n        \"\"\""
   ],
   "trigger": [
    "\"\"\"Gets",
    "or",
    "sets",
    "the",
    "name",
    "property.\"\"\""
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"\"\"Gets or sets the name property.\"\"\"",
    "+ \"\"\"The name property.\n        \n        Returns:\n            (string). the property value. (defaults to: None)\n        \"\"\""
   ],
   "trigger": [
    "\"\"\"Gets",
    "or",
    "sets",
    "the",
    "name",
    "property.\"\"\""
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"\"\"\n    Wrapper of AzureResource implementing Resource abstract base class\n    \"\"\"",
    "+ \"\"\"Wrapper of AzureResource implementing Resource abstract base class.\"\"\"",
    "- '''\n        Create AzureResource from dictionary with necessary values\n        '''",
    "+ \"\"\"Create AzureResource from dictionary with necessary values.\n\n        \"\"\""
   ],
   "trigger": [
    "\"\"\"\n",
    "",
    "",
    "",
    "Wrapper",
    "of",
    "AzureResource",
    "implementing",
    "Resource",
    "abstract",
    "base",
    "class\n",
    "",
    "",
    "",
    "\"\"\"",
    "'''\n",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "Create",
    "AzureResource",
    "from",
    "dictionary",
    "with",
    "necessary",
    "values\n",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "'''"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"\"\"\n    Configuration required for use of Azure CosmosDB provider\n    \"\"\"",
    "+ \"\"\"Configuration required for use of Azure CosmosDB provider.\"\"\""
   ],
   "trigger": [
    "\"\"\"\n",
    "",
    "",
    "",
    "Configuration",
    "required",
    "for",
    "use",
    "of",
    "Azure",
    "CosmosDB",
    "provider\n",
    "",
    "",
    "",
    "\"\"\""
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"\"\"\n    Configuration required for usage of AzureStorage service\n    \"\"\"",
    "+ \"\"\"Configuration required for usage of AzureStorage service.\"\"\""
   ],
   "trigger": [
    "\"\"\"\n",
    "",
    "",
    "",
    "Configuration",
    "required",
    "for",
    "usage",
    "of",
    "AzureStorage",
    "service\n",
    "",
    "",
    "",
    "\"\"\""
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"\"\"\n    Configuration required for usage of AzureResourceService\n    \"\"\"",
    "+ \"\"\"Configuration required for usage of AzureResourceService.\"\"\""
   ],
   "trigger": [
    "\"\"\"\n",
    "",
    "",
    "",
    "Configuration",
    "required",
    "for",
    "usage",
    "of",
    "AzureResourceService\n",
    "",
    "",
    "",
    "\"\"\""
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"\"\"\n        Setup logging configuration\n        \"\"\"",
    "+ \"\"\"Setup logging configuration.\"\"\""
   ],
   "trigger": [
    "\"\"\"\n",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "Setup",
    "logging",
    "configuration\n",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "\"\"\""
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"\"\"\n        Helper function for creating a Azure Storage Queue from the storage_config property defined inside of AzureConfig\n        \"\"\"",
    "+ \"\"\"Helper function for creating a Azure Storage Queue from the\n        storage_config property defined inside of AzureConfig.\"\"\""
   ],
   "trigger": [
    "\"\"\"\n",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "Helper",
    "function",
    "for",
    "creating",
    "a",
    "Azure",
    "Storage",
    "Queue",
    "from",
    "the",
    "storage_config",
    "property",
    "defined",
    "inside",
    "of",
    "AzureConfig\n",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "\"\"\""
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "+ set_mock_endpoint",
    "+ (",
    "- environ",
    "- [",
    "- 'SF_TEST_ENDPOINT'",
    "- ]",
    "- =",
    "  self",
    "  .",
    "  old_endpoint",
    "+ )"
   ],
   "trigger": [
    "environ",
    "[",
    "'SF_TEST_ENDPOINT'",
    "]",
    "=",
    "self",
    ".",
    "old_endpoint"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "+ async_property",
    "+ =",
    "  no_wait",
    "  ,",
    "  api_version",
    "  =",
    "- \"6.1\"",
    "+ \"6.2\""
   ],
   "trigger": [
    "no_wait",
    ",",
    "api_version",
    "=",
    "\"6.1\""
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  Factory",
    "- and",
    "- instance",
    "- resolving",
    "  for",
    "+ InputReader",
    "- input",
    "- <missing 'in'>",
    "- reader",
    "- <missing ':'>"
   ],
   "trigger": [
    "Factory",
    "and",
    "instance",
    "resolving",
    "for",
    "input",
    "<missing",
    "'in'>",
    "reader",
    "<missing",
    "':'>"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "+ \"\"\"Initializes a new instance of the class.\n        \"\"\"",
    "- \"\"\"Gets or sets the id property.\"\"\"",
    "+ \"\"\"The id property.\n        \n        Returns:\n            (string). the property value. (defaults to: None)\n        \"\"\"",
    "+ \"\"\"The id property.\n        \n        Args:\n            value (string). the property value.\n        \"\"\""
   ],
   "trigger": [
    "\"\"\"Gets",
    "or",
    "sets",
    "the",
    "id",
    "property.\"\"\""
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  with",
    "  patch",
    "  (",
    "- 'lms.djangoapps.instructor_task.tasks_helper._get_current_task'",
    "+ 'lms.djangoapps.instructor_task.tasks_helper.runner._get_current_task'",
    "  )",
    "  :"
   ],
   "trigger": [
    "with",
    "patch",
    "(",
    "'lms.djangoapps.instructor_task.tasks_helper._get_current_task'",
    ")",
    ":"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  version",
    "  =",
    "- '5.0.0'",
    "+ '6.0.0'",
    "  ,"
   ],
   "trigger": [
    "version",
    "=",
    "'5.0.0'",
    ","
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  version",
    "  =",
    "- '0.11.1'",
    "+ '0.11.2'",
    "  release",
    "  =",
    "- '0.11.1'",
    "+ '0.11.2'"
   ],
   "trigger": [
    "version",
    "=",
    "'0.11.1'",
    "release",
    "=",
    "'0.11.1'"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  version",
    "  =",
    "- '0.1.0'",
    "+ '0.1.1'",
    "  ,"
   ],
   "trigger": [
    "version",
    "=",
    "'0.1.0'",
    ","
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  url",
    "  =",
    "- '/Names/{nameId}/$/GetProperty'",
    "+ self",
    "+ .",
    "+ .",
    "+ metadata",
    "+ [",
    "+ 'url'",
    "+ ]"
   ],
   "trigger": [
    "url",
    "=",
    "'/Names/{nameId}/$/GetProperty'"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  url",
    "  =",
    "- '/ImageStore/{contentPath}'",
    "+ self",
    "+ .",
    "+ .",
    "+ metadata",
    "+ [",
    "+ 'url'",
    "+ ]"
   ],
   "trigger": [
    "url",
    "=",
    "'/ImageStore/{contentPath}'"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- receving",
    "+ receiving",
    "  =",
    "  True"
   ],
   "trigger": [
    "self",
    ".",
    "receving",
    "=",
    "True"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- receving",
    "+ receiving",
    "  =",
    "  False"
   ],
   "trigger": [
    "self",
    ".",
    "receving",
    "=",
    "False"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- locations_to_scores",
    "+ problem_scores",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "locations_to_scores",
    ")"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "- _send_buffer_size",
    "+ _timeout",
    "  =",
    "  seconds"
   ],
   "trigger": [
    "self",
    ".",
    "_send_buffer_size",
    "=",
    "seconds"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  return",
    "  self",
    "  .",
    "- receving",
    "+ receiving"
   ],
   "trigger": [
    "return",
    "self",
    ".",
    "receving"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  raise",
    "+ Exception",
    "- deploymentexceptions",
    "- .",
    "  ("
   ],
   "trigger": [
    "raise",
    "deploymentexceptions",
    ".",
    "("
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  raise",
    "  CLIError",
    "  (",
    "- \"Connection endpoint not found\"",
    "+ \"Connection endpoint not found. \"",
    "+ \"Before running sfctl commands, connect to a cluster using \"",
    "+ \"the 'sfctl cluster select' command.\"",
    "  )"
   ],
   "trigger": [
    "raise",
    "CLIError",
    "(",
    "\"Connection",
    "endpoint",
    "not",
    "found\"",
    ")"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  msg",
    "  =",
    "  self",
    "  .",
    "  consumer",
    "  .",
    "  poll",
    "  (",
    "+ 0.00000001",
    "- timeout",
    "- =",
    "- 1.0",
    "  )"
   ],
   "trigger": [
    "msg",
    "=",
    "self",
    ".",
    "consumer",
    ".",
    "poll",
    "(",
    "timeout",
    "=",
    "1.0",
    ")"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  kwargs",
    "  [",
    "- 'groups'",
    "+ 'group'",
    "  ]",
    "  =",
    "  source_node_conv",
    "  .",
    "  nGroups"
   ],
   "trigger": [
    "kwargs",
    "[",
    "'groups'",
    "]",
    "=",
    "source_node_conv",
    ".",
    "nGroups"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  internal_context",
    "  .",
    "  sdk_version",
    "  =",
    "  platform_moniker",
    "  +",
    "- ':0.11.1'",
    "+ ':0.11.2'"
   ],
   "trigger": [
    "internal_context",
    ".",
    "sdk_version",
    "=",
    "platform_moniker",
    "+",
    "':0.11.1'"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  img",
    "  =",
    "  (",
    "- image_path",
    "+ test_input_path",
    "  )"
   ],
   "trigger": [
    "img",
    "=",
    "(",
    "image_path",
    ")"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  if",
    "  (",
    "  not",
    "  self",
    "  .",
    "  stream",
    "- is",
    "- None",
    "+ .",
    "+ closed",
    "  )",
    "  :"
   ],
   "trigger": [
    "if",
    "(",
    "not",
    "self",
    ".",
    "stream",
    "is",
    "None",
    ")",
    ":"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  for",
    "  style_layer",
    "  in",
    "- feature",
    "+ FEATURES",
    "  :"
   ],
   "trigger": [
    "for",
    "style_layer",
    "in",
    "feature",
    ":"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  f",
    "  =",
    "  open",
    "  (",
    "  ,",
    "- 'r'",
    "+ 'rU'",
    "  )"
   ],
   "trigger": [
    "f",
    "=",
    "open",
    "(",
    ",",
    "'r'",
    ")"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  elif",
    "  isinstance",
    "  (",
    "  val",
    "  ,",
    "- int",
    "+ six",
    "+ .",
    "+ integer_types",
    "  )",
    "  :"
   ],
   "trigger": [
    "elif",
    "isinstance",
    "(",
    "val",
    ",",
    "int",
    ")",
    ":"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  and",
    "  entities",
    "  .",
    "  This",
    "  version",
    "  is",
    "  compatible",
    "  with",
    "  Service",
    "  Fabric",
    "- 6.0",
    "+ 6.1"
   ],
   "trigger": [
    "and",
    "entities",
    ".",
    "This",
    "version",
    "is",
    "compatible",
    "with",
    "Service",
    "Fabric",
    "6.0"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  an",
    "+ EventHubStreamingClient",
    "- streaming",
    "- client",
    "  ."
   ],
   "trigger": [
    "an",
    "streaming",
    "client",
    "."
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  @",
    "  pytest",
    "  .",
    "  mark",
    "  .",
    "- integration1",
    "+ integration"
   ],
   "trigger": [
    "@",
    "pytest",
    ".",
    "mark",
    ".",
    "integration1"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- get_cohort_id",
    "+ get_group_id_for_user",
    "  (",
    "  user",
    "  ,",
    "  course_key",
    "  )"
   ],
   "trigger": [
    "=",
    "get_cohort_id",
    "(",
    "user",
    ",",
    "course_key",
    ")"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- '1.0.0a18'",
    "+ '1.0.0a19'"
   ],
   "trigger": [
    "=",
    "'1.0.0a18'"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- '1.0.0a15'",
    "+ '1.0.0a18'"
   ],
   "trigger": [
    "=",
    "'1.0.0a15'"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- '1.0.0a0'",
    "+ '1.0.0a1'"
   ],
   "trigger": [
    "=",
    "'1.0.0a0'"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "- '0.1.3'",
    "+ '0.1.4'"
   ],
   "trigger": [
    "=",
    "'0.1.3'"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  =",
    "  .",
    "- grammar_options",
    "+ grammar",
    "  ."
   ],
   "trigger": [
    "=",
    ".",
    "grammar_options",
    "."
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  :",
    "  {",
    "  'key'",
    "  :",
    "  ,",
    "  'type'",
    "  :",
    "- '[number]'",
    "+ '[int]'",
    "  }"
   ],
   "trigger": [
    ":",
    "{",
    "'key'",
    ":",
    ",",
    "'type'",
    ":",
    "'[number]'",
    "}"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  'pipeline/azure-ci-app-pipeline.jsonnet'",
    "  :",
    "- 'ci-app-pipeline.json'",
    "+ 'azure-ci-app-pipeline.json'"
   ],
   "trigger": [
    "'pipeline/azure-ci-app-pipeline.jsonnet'",
    ":",
    "'ci-app-pipeline.json'"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  'grade'",
    "  :",
    "- '67'",
    "+ '0.67'",
    "  ,"
   ],
   "trigger": [
    "'grade'",
    ":",
    "'67'",
    ","
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  '.env'",
    "  ,",
    "  'Pipfile'",
    "  ,",
    "  'logging.yaml'",
    "  ,",
    "- 'ci-app-pipeline.json'",
    "+ 'azure-ci-app-pipeline.json'"
   ],
   "trigger": [
    "'.env'",
    ",",
    "'Pipfile'",
    ",",
    "'logging.yaml'",
    ",",
    "'ci-app-pipeline.json'"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"ip\"",
    "  :",
    "- _get_request_ip",
    "+ get_request_ip",
    "  (",
    "  request",
    "  )",
    "  ,"
   ],
   "trigger": [
    "\"ip\"",
    ":",
    "_get_request_ip",
    "(",
    "request",
    ")",
    ","
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"ip\"",
    "  :",
    "+ _get_request_ip",
    "+ (",
    "  request_info",
    "- .",
    "- get",
    "- (",
    "- 'ip'",
    "  ,",
    "  'unknown'",
    "  )",
    "  ,"
   ],
   "trigger": [
    "\"ip\"",
    ":",
    "request_info",
    ".",
    "get",
    "(",
    "'ip'",
    ",",
    "'unknown'",
    ")",
    ","
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"\"",
    "  Updates",
    "  Azure",
    "  resource",
    "+ ."
   ],
   "trigger": [
    "\"\"",
    "Updates",
    "Azure",
    "resource"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"\"",
    "  Gets",
    "  API",
    "  version",
    "  for",
    "  resource",
    "  <missing 'in'>",
    "  type",
    "+ .",
    "  <missing ':'>"
   ],
   "trigger": [
    "\"\"",
    "Gets",
    "API",
    "version",
    "for",
    "resource",
    "<missing",
    "'in'>",
    "type",
    "<missing",
    "':'>"
   ],
   "count": 6,
   "accuracy": 1.0
  },
  {
   "code": [
    "  self",
    "  .",
    "  assertEqual",
    "  (",
    "- 404",
    "+ 302",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "assertEqual",
    "(",
    "404",
    ")"
   ],
   "count": 6,
   "accuracy": 0.8571428571428571
  },
  {
   "code": [
    "  self",
    "  .",
    "  .",
    "  status_code",
    "  ,",
    "- 404",
    "+ 302",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    ".",
    "status_code",
    ",",
    "404",
    ")"
   ],
   "count": 6,
   "accuracy": 0.8571428571428571
  },
  {
   "code": [
    "  self",
    "  .",
    "  (",
    "  .",
    "  status_code",
    "  ,",
    "- 404",
    "+ 302",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "(",
    ".",
    "status_code",
    ",",
    "404",
    ")"
   ],
   "count": 6,
   "accuracy": 0.8571428571428571
  },
  {
   "code": [
    "- 2",
    "+ 1",
    "  ,"
   ],
   "trigger": [
    "2",
    ","
   ],
   "count": 6,
   "accuracy": 0.75
  },
  {
   "code": [
    "- 'azure-servicefabric==6.2.0.0'",
    "+ 'azure-servicefabric==6.3.0.0'",
    "  ,"
   ],
   "trigger": [
    "'azure-servicefabric==6.2.0.0'",
    ","
   ],
   "count": 6,
   "accuracy": 0.75
  },
  {
   "code": [
    "  =",
    "- image_path",
    "+ test_input_path",
    "+ (",
    "+ architecture_name",
    "+ )"
   ],
   "trigger": [
    "=",
    "image_path"
   ],
   "count": 6,
   "accuracy": 0.6666666666666666
  },
  {
   "code": [
    "- logging",
    "+ logger",
    "  .",
    "  debug",
    "  (",
    "  )"
   ],
   "trigger": [
    "logging",
    ".",
    "debug",
    "(",
    ")"
   ],
   "count": 6,
   "accuracy": 0.6
  },
  {
   "code": [
    "  return",
    "- None",
    "+ response"
   ],
   "trigger": [
    "return",
    "None"
   ],
   "count": 6,
   "accuracy": 0.6
  },
  {
   "code": [
    "  __version__",
    "  =",
    "- '0.6.0'",
    "+ '0.6.1'"
   ],
   "trigger": [
    "__version__",
    "=",
    "'0.6.0'"
   ],
   "count": 6,
   "accuracy": 0.6
  },
  {
   "code": [
    "  version",
    "  =",
    "- '0.6.0'",
    "+ '0.6.1'",
    "  ,"
   ],
   "trigger": [
    "version",
    "=",
    "'0.6.0'",
    ","
   ],
   "count": 6,
   "accuracy": 0.5
  },
  {
   "code": [
    "  version",
    "  =",
    "- '0.10.0'",
    "+ '0.11.3'",
    "  release",
    "  =",
    "- '0.10.0'",
    "+ '0.11.3'"
   ],
   "trigger": [
    "version",
    "=",
    "'0.10.0'",
    "release",
    "=",
    "'0.10.0'"
   ],
   "count": 6,
   "accuracy": 0.5
  },
  {
   "code": [
    "  version",
    "  =",
    "- '0.10.0'",
    "+ '0.11.0'",
    "  release",
    "  =",
    "- '0.10.0'",
    "+ '0.11.0'"
   ],
   "trigger": [
    "version",
    "=",
    "'0.10.0'",
    "release",
    "=",
    "'0.10.0'"
   ],
   "count": 6,
   "accuracy": 0.5
  },
  {
   "code": [
    "  internal_context",
    "  .",
    "  sdk_version",
    "  =",
    "  platform_moniker",
    "  +",
    "- ':0.10.0'",
    "+ ':0.11.3'"
   ],
   "trigger": [
    "internal_context",
    ".",
    "sdk_version",
    "=",
    "platform_moniker",
    "+",
    "':0.10.0'"
   ],
   "count": 6,
   "accuracy": 0.5
  },
  {
   "code": [
    "  internal_context",
    "  .",
    "  sdk_version",
    "  =",
    "  platform_moniker",
    "  +",
    "- ':0.10.0'",
    "+ ':0.11.0'"
   ],
   "trigger": [
    "internal_context",
    ".",
    "sdk_version",
    "=",
    "platform_moniker",
    "+",
    "':0.10.0'"
   ],
   "count": 6,
   "accuracy": 0.5
  },
  {
   "code": [
    "  =",
    "- '1.0.0a19'",
    "+ '1.0.0a21'"
   ],
   "trigger": [
    "=",
    "'1.0.0a19'"
   ],
   "count": 6,
   "accuracy": 0.42857142857142855
  },
  {
   "code": [
    "  =",
    "- '1.0.0a19'",
    "+ '1.0.0a20'"
   ],
   "trigger": [
    "=",
    "'1.0.0a19'"
   ],
   "count": 6,
   "accuracy": 0.42857142857142855
  },
  {
   "code": [
    "  if",
    "+ not",
    "- ==",
    "  :"
   ],
   "trigger": [
    "if",
    "==",
    ":"
   ],
   "count": 6,
   "accuracy": 0.23076923076923078
  },
  {
   "code": [
    "  .",
    "  =",
    "- False",
    "+ None"
   ],
   "trigger": [
    ".",
    "=",
    "False"
   ],
   "count": 6,
   "accuracy": 0.20689655172413793
  },
  {
   "code": [
    "- logging",
    "+ logger",
    "  .",
    "  debug",
    "  (",
    "  ,",
    "  )"
   ],
   "trigger": [
    "logging",
    ".",
    "debug",
    "(",
    ",",
    ")"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "- _copy_and_repo",
    "+ _copy_and_reop",
    "  (",
    "  source_node",
    "  ,",
    "  IR_node",
    "  ,",
    "  )"
   ],
   "trigger": [
    "_copy_and_repo",
    "(",
    "source_node",
    ",",
    "IR_node",
    ",",
    ")"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "- 'latest/releasing_course/export_import_course.html#import-a-course'",
    "+ 'open-release-ficus.master/releasing_course/export_import_course.html#import-a-course'"
   ],
   "trigger": [
    "'latest/releasing_course/export_import_course.html#import-a-course'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "- 'latest/releasing_course/export_import_course.html#export-a-course'",
    "+ 'open-release-ficus.master/releasing_course/export_import_course.html#export-a-course'"
   ],
   "trigger": [
    "'latest/releasing_course/export_import_course.html#export-a-course'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "- 'latest/course_components/libraries.html#import-a-library'",
    "+ 'open-release-ficus.master/course_components/libraries.html#import-a-library'"
   ],
   "trigger": [
    "'latest/course_components/libraries.html#import-a-library'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "- 'latest/course_components/libraries.html#give-other-users-access-to-your-library'",
    "+ 'open-release-ficus.master/course_components/libraries.html#give-other-users-access-to-your-library'"
   ],
   "trigger": [
    "'latest/course_components/libraries.html#give-other-users-access-to-your-library'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "- 'latest/course_components/libraries.html#export-a-library'",
    "+ 'open-release-ficus.master/course_components/libraries.html#export-a-library'"
   ],
   "trigger": [
    "'latest/course_components/libraries.html#export-a-library'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "- 'en/latest/set_up_course/course_staffing.html#add-course-team-members'",
    "+ 'en/open-release-ficus.master/set_up_course/course_staffing.html#add-course-team-members'"
   ],
   "trigger": [
    "'en/latest/set_up_course/course_staffing.html#add-course-team-members'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "- 'en/latest/index.html'",
    "+ 'en/open-release-ficus.master/index.html'"
   ],
   "trigger": [
    "'en/latest/index.html'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "- 'en/latest/grading/index.html'",
    "+ 'en/open-release-ficus.master/grading/index.html'"
   ],
   "trigger": [
    "'en/latest/grading/index.html'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "- 'en/latest/getting_started/get_started.html'",
    "+ 'en/open-release-ficus.master/getting_started/get_started.html'"
   ],
   "trigger": [
    "'en/latest/getting_started/get_started.html'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "- 'en/latest/course_features/cohorts/cohorted_courseware.html'",
    "+ 'en/open-release-ficus.master/course_features/cohorts/cohorted_courseware.html'"
   ],
   "trigger": [
    "'en/latest/course_features/cohorts/cohorted_courseware.html'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "- 'en/latest/course_components/libraries.html'",
    "+ 'en/open-release-ficus.master/course_components/libraries.html'"
   ],
   "trigger": [
    "'en/latest/course_components/libraries.html'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "- 'en/latest/course_assets/pages.html'",
    "+ 'en/open-release-ficus.master/course_assets/pages.html'"
   ],
   "trigger": [
    "'en/latest/course_assets/pages.html'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "- 'en/latest/course_assets/handouts_updates.html'",
    "+ 'en/open-release-ficus.master/course_assets/handouts_updates.html'"
   ],
   "trigger": [
    "'en/latest/course_assets/handouts_updates.html'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "- 'en/latest/course_assets/course_files.html'",
    "+ 'en/open-release-ficus.master/course_assets/course_files.html'"
   ],
   "trigger": [
    "'en/latest/course_assets/course_files.html'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "- '1\\tpython-line\\tspam.py\\t10\\tNone\\tNone\\tNone\\tNone\\tNone'",
    "+ '1\\tpython-line\\tspam.py\\t10\\tNone\\tNone\\tNone\\tNone\\tNone\\tALL'",
    "  )",
    "  )"
   ],
   "trigger": [
    "'1\\tpython-line\\tspam.py\\t10\\tNone\\tNone\\tNone\\tNone\\tNone'",
    ")",
    ")"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "- '/en/latest/set_up_course/setting_up_student_view.html'",
    "+ '/en/open-release-ficus.master/set_up_course/setting_up_student_view.html'"
   ],
   "trigger": [
    "'/en/latest/set_up_course/setting_up_student_view.html'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "- '/en/latest/set_up_course/creating_course_certificates.html'",
    "+ '/en/open-release-ficus.master/set_up_course/creating_course_certificates.html'"
   ],
   "trigger": [
    "'/en/latest/set_up_course/creating_course_certificates.html'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "- '/en/latest/index.html'",
    "+ '/en/open-release-ficus.master/index.html'"
   ],
   "trigger": [
    "'/en/latest/index.html'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "- '/en/latest/getting_started/get_started.html'",
    "+ '/en/open-release-ficus.master/getting_started/get_started.html'"
   ],
   "trigger": [
    "'/en/latest/getting_started/get_started.html'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "- '/en/latest/developing_course/course_units.html'",
    "+ '/en/open-release-ficus.master/developing_course/course_units.html'"
   ],
   "trigger": [
    "'/en/latest/developing_course/course_units.html'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "- '/en/latest/developing_course/course_outline.html'",
    "+ '/en/open-release-ficus.master/developing_course/course_outline.html'"
   ],
   "trigger": [
    "'/en/latest/developing_course/course_outline.html'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "- '/en/latest/course_assets/textbooks.html'",
    "+ '/en/open-release-ficus.master/course_assets/textbooks.html'"
   ],
   "trigger": [
    "'/en/latest/course_assets/textbooks.html'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "- \"en/latest/course_components/libraries.html\"",
    "+ \"en/open-release-ficus.master/course_components/libraries.html\""
   ],
   "trigger": [
    "\"en/latest/course_components/libraries.html\""
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "+ return",
    "- start_stub",
    "- (",
    "- requires",
    "- .",
    "- group",
    "- (",
    "- 'server'",
    "- )",
    "- )"
   ],
   "trigger": [
    "start_stub",
    "(",
    "requires",
    ".",
    "group",
    "(",
    "'server'",
    ")",
    ")"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "  u\"instructions\"",
    "  :",
    "- u\"The name that will identify you in your courses - <strong>(cannot be changed later)</strong>\"",
    "+ u\"The name that will identify you in your courses - (cannot be changed later)\"",
    "  ,"
   ],
   "trigger": [
    "u\"instructions\"",
    ":",
    "u\"The",
    "name",
    "that",
    "will",
    "identify",
    "you",
    "in",
    "your",
    "courses",
    "-",
    "<strong>(cannot",
    "be",
    "changed",
    "later)</strong>\"",
    ","
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "  raise",
    "  CLIError",
    "  (",
    "- '--project must be specified. The value should be the ID or name of a team project.'",
    "+ '--project must be specified. The value should be the ID or name of a team project. '"
   ],
   "trigger": [
    "raise",
    "CLIError",
    "(",
    "'--project",
    "must",
    "be",
    "specified.",
    "The",
    "value",
    "should",
    "be",
    "the",
    "ID",
    "or",
    "name",
    "of",
    "a",
    "team",
    "project.'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "  label",
    "  =",
    "  _",
    "  (",
    "- u\"I agree to the {platform_name} {terms_of_service}\"",
    "+ u\"I agree to the {terms_of_service}\"",
    "  )",
    "  .",
    "  format",
    "  ("
   ],
   "trigger": [
    "label",
    "=",
    "_",
    "(",
    "u\"I",
    "agree",
    "to",
    "the",
    "{platform_name}",
    "{terms_of_service}\"",
    ")",
    ".",
    "format",
    "("
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "  href",
    "  =",
    "- 'http://edx.readthedocs.io/projects/open-edx-building-and-running-a-course/en/latest/course_features'",
    "+ 'http://edx.readthedocs.io/projects/open-edx-building-and-running-a-course/en'",
    "+ '/open-release-ficus.master/course_features'"
   ],
   "trigger": [
    "href",
    "=",
    "'http://edx.readthedocs.io/projects/open-edx-building-and-running-a-course/en/latest/course_features'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "  href",
    "  =",
    "- 'http://edx.readthedocs.io/projects/edx-guide-for-students/en/latest/SFD_instructor_dash_help.html'",
    "+ 'http://edx.readthedocs.io/projects/open-edx-learner-guide/en/'",
    "+ 'open-release-ficus.master/SFD_instructor_dash_help.html'"
   ],
   "trigger": [
    "href",
    "=",
    "'http://edx.readthedocs.io/projects/edx-guide-for-students/en/latest/SFD_instructor_dash_help.html'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "  from",
    "+ flaky",
    "- bok_choy",
    "- .",
    "- javascript",
    "  import",
    "- js_defined",
    "+ flaky"
   ],
   "trigger": [
    "from",
    "bok_choy",
    ".",
    "javascript",
    "import",
    "js_defined"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "  __version__",
    "  =",
    "- '0.1.0'",
    "+ '0.1.1'"
   ],
   "trigger": [
    "__version__",
    "=",
    "'0.1.0'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "  VERSION",
    "  =",
    "- \"0.1.0b2\"",
    "+ \"0.1.1\""
   ],
   "trigger": [
    "VERSION",
    "=",
    "\"0.1.0b2\""
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "  USER_URL",
    "  =",
    "- \"https://graph.facebook.com/v2.3/me\"",
    "+ FacebookOAuth2",
    "+ .",
    "+ USER_DATA_URL"
   ],
   "trigger": [
    "USER_URL",
    "=",
    "\"https://graph.facebook.com/v2.3/me\""
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "  DOC_LINK_BASE_URL",
    "  =",
    "- 'http://edx.readthedocs.io/projects/edx-guide-for-students'",
    "+ 'http://edx.readthedocs.io/projects/open-edx-learner-guide'"
   ],
   "trigger": [
    "DOC_LINK_BASE_URL",
    "=",
    "'http://edx.readthedocs.io/projects/edx-guide-for-students'"
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"label\"",
    "  :",
    "- u\"I agree to the {platform_name} {link_label}\"",
    "+ u\"I agree to the {link_label}\"",
    "  .",
    "  format",
    "  ("
   ],
   "trigger": [
    "\"label\"",
    ":",
    "u\"I",
    "agree",
    "to",
    "the",
    "{platform_name}",
    "{link_label}\"",
    ".",
    "format",
    "("
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"label\"",
    "  :",
    "- u\"I agree to the {platform_name} Terms of Service\"",
    "+ u\"I agree to the Terms of Service\"",
    "  .",
    "  format",
    "  ("
   ],
   "trigger": [
    "\"label\"",
    ":",
    "u\"I",
    "agree",
    "to",
    "the",
    "{platform_name}",
    "Terms",
    "of",
    "Service\"",
    ".",
    "format",
    "("
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "  \"label\"",
    "  :",
    "- u\"I agree to the {platform_name} Honor Code\"",
    "+ u\"I agree to the Honor Code\"",
    "  .",
    "  format",
    "  ("
   ],
   "trigger": [
    "\"label\"",
    ":",
    "u\"I",
    "agree",
    "to",
    "the",
    "{platform_name}",
    "Honor",
    "Code\"",
    ".",
    "format",
    "("
   ],
   "count": 5,
   "accuracy": 1.0
  },
  {
   "code": [
    "+ from",
    "  import",
    "- threading"
   ],
   "trigger": [
    "import",
    "threading"
   ],
   "count": 5,
   "accuracy": 0.8333333333333334
  },
  {
   "code": [
    "  self",
    "  .",
    "  assertEqual",
    "  (",
    "  .",
    "  ,",
    "- 404",
    "+ 302",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "assertEqual",
    "(",
    ".",
    ",",
    "404",
    ")"
   ],
   "count": 5,
   "accuracy": 0.8333333333333334
  },
  {
   "code": [
    "  self",
    "  .",
    "  assertEqual",
    "  (",
    "  ,",
    "- 404",
    "+ 302",
    "  )"
   ],
   "trigger": [
    "self",
    ".",
    "assertEqual",
    "(",
    ",",
    "404",
    ")"
   ],
   "count": 5,
   "accuracy": 0.8333333333333334
  },
  {
   "code": [
    "  =",
    "- 404",
    "+ 302"
   ],
   "trigger": [
    "=",
    "404"
   ],
   "count": 5,
   "accuracy": 0.625
  },
  {
   "code": [
    "  href",
    "  =",
    "- 'http://edx.readthedocs.org/projects/edx-partner-course-staff/en/latest/'",
    "+ 'http://edx.readthedocs.org/projects/open-edx-building-and-running-a-course/en/'",
    "+ 'open-release-ficus.master/'",
    "+ @",
    "+ skip",
    "+ (",
    "+ \"Disabled as openedx.microsoft.com doesn't use the default Open edX help links.\"",
    "+ )"
   ],
   "trigger": [
    "href",
    "=",
    "'http://edx.readthedocs.org/projects/edx-partner-course-staff/en/latest/'"
   ],
   "count": 5,
   "accuracy": 0.5
  },
  {
   "code": [
    "- 0",
    "+ 1"
   ],
   "trigger": [
    "0"
   ],
   "count": 5,
   "accuracy": 0.2631578947368421
  },
  {
   "code": [
    "- 1",
    "+ 0"
   ],
   "trigger": [
    "1"
   ],
   "count": 5,
   "accuracy": 0.21739130434782608
  }
 ]